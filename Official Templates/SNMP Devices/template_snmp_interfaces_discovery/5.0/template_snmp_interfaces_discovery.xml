<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
  <version>5.0</version>
  <date>2021-10-19T21:18:41Z</date>
  <groups>
    <group>
      <name>Templates</name>
    </group>
  </groups>
  <templates>
    <template>
      <template>Template SNMP Interfaces</template>
      <name>Template SNMP Interfaces</name>
      <groups>
        <group>
          <name>Templates</name>
        </group>
      </groups>
      <applications>
        <application>
          <name>Interfaces</name>
        </application>
      </applications>
      <items>
        <item>
          <name>Number of network interfaces</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>IF-MIB::ifNumber.0</snmp_oid>
          <key>ifNumber</key>
          <delay>3600</delay>
          <history>7d</history>
          <description>The number of network interfaces (regardless of their current state) present on this system.</description>
          <applications>
            <application>
              <name>Interfaces</name>
            </application>
          </applications>
        </item>
      </items>
      <discovery_rules>
        <discovery_rule>
          <name>Network interfaces</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#SNMPVALUE},IF-MIB::ifDescr]</snmp_oid>
          <key>ifDescr</key>
          <delay>3600</delay>
          <description>You may also consider using IF-MIB::ifType or IF-MIB::ifAlias for discovery depending on your filtering needs. {$SNMP_COMMUNITY} is a global macro.</description>
          <item_prototypes>
            <item_prototype>
              <name>Admin status of interface $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>IF-MIB::ifAdminStatus.{#SNMPINDEX}</snmp_oid>
              <key>ifAdminStatus[{#SNMPVALUE}]</key>
              <delay>60</delay>
              <history>7d</history>
              <description>The desired state of the interface.</description>
              <applications>
                <application>
                  <name>Interfaces</name>
                </application>
              </applications>
              <valuemap>
                <name>SNMP interface status (ifAdminStatus)</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>Alias of interface $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>IF-MIB::ifAlias.{#SNMPINDEX}</snmp_oid>
              <key>ifAlias[{#SNMPVALUE}]</key>
              <delay>3600</delay>
              <history>7d</history>
              <trends>0</trends>
              <value_type>CHAR</value_type>
              <applications>
                <application>
                  <name>Interfaces</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>Description of interface $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>IF-MIB::ifDescr.{#SNMPINDEX}</snmp_oid>
              <key>ifDescr[{#SNMPVALUE}]</key>
              <delay>3600</delay>
              <history>7d</history>
              <trends>0</trends>
              <value_type>CHAR</value_type>
              <description>A textual string containing information about the interface. This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.</description>
              <applications>
                <application>
                  <name>Interfaces</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>Inbound errors on interface $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>IF-MIB::ifInErrors.{#SNMPINDEX}</snmp_oid>
              <key>ifInErrors[{#SNMPVALUE}]</key>
              <delay>60</delay>
              <history>7d</history>
              <description>For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol. For character-oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol.</description>
              <applications>
                <application>
                  <name>Interfaces</name>
                </application>
              </applications>
              <preprocessing>
                <step>
                  <type>CHANGE_PER_SECOND</type>
                  <params></params>
                </step>
              </preprocessing>
            </item_prototype>
            <item_prototype>
              <name>Incoming traffic on interface $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>IF-MIB::ifInOctets.{#SNMPINDEX}</snmp_oid>
              <key>ifInOctets[{#SNMPVALUE}]</key>
              <delay>60</delay>
              <history>7d</history>
              <units>bps</units>
              <description>The number of octets in valid MAC frames received on this interface, including the MAC header and FCS.</description>
              <applications>
                <application>
                  <name>Interfaces</name>
                </application>
              </applications>
              <preprocessing>
                <step>
                  <type>CHANGE_PER_SECOND</type>
                  <params></params>
                </step>
                <step>
                  <type>MULTIPLIER</type>
                  <params>8</params>
                </step>
              </preprocessing>
            </item_prototype>
            <item_prototype>
              <name>Operational status of interface $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>IF-MIB::ifOperStatus.{#SNMPINDEX}</snmp_oid>
              <key>ifOperStatus[{#SNMPVALUE}]</key>
              <delay>60</delay>
              <history>7d</history>
              <description>The current operational state of the interface.</description>
              <applications>
                <application>
                  <name>Interfaces</name>
                </application>
              </applications>
              <valuemap>
                <name>SNMP interface status (ifOperStatus)</name>
              </valuemap>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{diff(0)}=1</expression>
                  <name>Operational status was changed on {HOST.NAME} interface {#SNMPVALUE}</name>
                  <priority>INFO</priority>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>Outbound errors on interface $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>IF-MIB::ifOutErrors.{#SNMPINDEX}</snmp_oid>
              <key>ifOutErrors[{#SNMPVALUE}]</key>
              <delay>60</delay>
              <history>7d</history>
              <description>For packet-oriented interfaces, the number of outbound packets that could not be transmitted because of errors. For character-oriented or fixed-length interfaces, the number of outbound transmission units that could not be transmitted because of errors.</description>
              <applications>
                <application>
                  <name>Interfaces</name>
                </application>
              </applications>
              <preprocessing>
                <step>
                  <type>CHANGE_PER_SECOND</type>
                  <params></params>
                </step>
              </preprocessing>
            </item_prototype>
            <item_prototype>
              <name>Outgoing traffic on interface $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>IF-MIB::ifOutOctets.{#SNMPINDEX}</snmp_oid>
              <key>ifOutOctets[{#SNMPVALUE}]</key>
              <delay>60</delay>
              <history>7d</history>
              <units>bps</units>
              <description>The number of octets transmitted in MAC frames on this interface, including the MAC header and FCS.</description>
              <applications>
                <application>
                  <name>Interfaces</name>
                </application>
              </applications>
              <preprocessing>
                <step>
                  <type>CHANGE_PER_SECOND</type>
                  <params></params>
                </step>
                <step>
                  <type>MULTIPLIER</type>
                  <params>8</params>
                </step>
              </preprocessing>
            </item_prototype>
          </item_prototypes>
          <graph_prototypes>
            <graph_prototype>
              <name>Traffic on interface {#SNMPVALUE}</name>
              <graph_items>
                <graph_item>
                  <drawtype>GRADIENT_LINE</drawtype>
                  <color>00AA00</color>
                  <item>
                    <host>Template SNMP Interfaces</host>
                    <key>ifInOctets[{#SNMPVALUE}]</key>
                  </item>
                </graph_item>
                <graph_item>
                  <sortorder>1</sortorder>
                  <drawtype>GRADIENT_LINE</drawtype>
                  <color>3333FF</color>
                  <item>
                    <host>Template SNMP Interfaces</host>
                    <key>ifOutOctets[{#SNMPVALUE}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
          </graph_prototypes>
        </discovery_rule>
      </discovery_rules>
    </template>
  </templates>
  <value_maps>
    <value_map>
      <name>SNMP interface status (ifAdminStatus)</name>
      <mappings>
        <mapping>
          <value>1</value>
          <newvalue>up</newvalue>
        </mapping>
        <mapping>
          <value>2</value>
          <newvalue>down</newvalue>
        </mapping>
        <mapping>
          <value>3</value>
          <newvalue>testing</newvalue>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>SNMP interface status (ifOperStatus)</name>
      <mappings>
        <mapping>
          <value>1</value>
          <newvalue>up</newvalue>
        </mapping>
        <mapping>
          <value>2</value>
          <newvalue>down</newvalue>
        </mapping>
        <mapping>
          <value>3</value>
          <newvalue>testing</newvalue>
        </mapping>
        <mapping>
          <value>4</value>
          <newvalue>unknown</newvalue>
        </mapping>
        <mapping>
          <value>5</value>
          <newvalue>dormant</newvalue>
        </mapping>
        <mapping>
          <value>6</value>
          <newvalue>notPresent</newvalue>
        </mapping>
        <mapping>
          <value>7</value>
          <newvalue>lowerLayerDown</newvalue>
        </mapping>
      </mappings>
    </value_map>
  </value_maps>
</zabbix_export>