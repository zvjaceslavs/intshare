<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
  <version>5.0</version>
  <date>2021-10-22T10:07:53Z</date>
  <groups>
    <group>
      <name>Templates/Databases</name>
    </group>
  </groups>
  <templates>
    <template>
      <template>Template Postgres ODBC</template>
      <name>Template Postgres ODBC</name>
      <groups>
        <group>
          <name>Templates/Databases</name>
        </group>
      </groups>
      <applications>
        <application>
          <name>BG writer</name>
        </application>
        <application>
          <name>Locks</name>
        </application>
        <application>
          <name>Statistics</name>
        </application>
      </applications>
      <items>
        <item>
          <name>accessexclusivelock</name>
          <type>ODBC</type>
          <key>db.odbc.select[accessexclusivelock,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>SELECT count(*) FROM pg_locks where mode='AccessExclusiveLock'</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Locks</name>
            </application>
          </applications>
        </item>
        <item>
          <name>accesssharelock</name>
          <type>ODBC</type>
          <key>db.odbc.select[accesssharelock,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>SELECT count(*) FROM pg_locks where mode='AccessShareLock'</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Locks</name>
            </application>
          </applications>
        </item>
        <item>
          <name>activeconn</name>
          <type>ODBC</type>
          <key>db.odbc.select[activeconn,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>select sum(numbackends) from pg_stat_database</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Statistics</name>
            </application>
          </applications>
          <triggers>
            <trigger>
              <expression>{last()}>=100</expression>
              <name>Too many active connections</name>
              <priority>WARNING</priority>
              <manual_close>YES</manual_close>
            </trigger>
          </triggers>
        </item>
        <item>
          <name>buffers_alloc</name>
          <type>ODBC</type>
          <key>db.odbc.select[buffers_alloc,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>select buffers_alloc from pg_stat_bgwriter</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>BG writer</name>
            </application>
          </applications>
        </item>
        <item>
          <name>buffers_backend</name>
          <type>ODBC</type>
          <key>db.odbc.select[buffers_backend,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>select buffers_backend from pg_stat_bgwriter</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>BG writer</name>
            </application>
          </applications>
        </item>
        <item>
          <name>buffers_checkpoint</name>
          <type>ODBC</type>
          <key>db.odbc.select[buffers_checkpoint,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>select buffers_checkpoint from pg_stat_bgwriter</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>BG writer</name>
            </application>
          </applications>
        </item>
        <item>
          <name>buffers_clean</name>
          <type>ODBC</type>
          <key>db.odbc.select[buffers_clean,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>select buffers_clean from pg_stat_bgwriter</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>BG writer</name>
            </application>
          </applications>
        </item>
        <item>
          <name>checkpoints_req</name>
          <type>ODBC</type>
          <key>db.odbc.select[checkpoints_req,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>select checkpoints_req from pg_stat_bgwriter</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>BG writer</name>
            </application>
          </applications>
        </item>
        <item>
          <name>checkpoints_timed</name>
          <type>ODBC</type>
          <key>db.odbc.select[checkpoints_timed,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>select checkpoints_timed from pg_stat_bgwriter</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>BG writer</name>
            </application>
          </applications>
        </item>
        <item>
          <name>exclusivelock</name>
          <type>ODBC</type>
          <key>db.odbc.select[exclusivelock,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>SELECT count(*) FROM pg_locks where mode='ExclusiveLock'</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Locks</name>
            </application>
          </applications>
          <triggers>
            <trigger>
              <expression>{last()}>2</expression>
              <name>To many exclusive locks</name>
              <priority>WARNING</priority>
              <manual_close>YES</manual_close>
            </trigger>
          </triggers>
        </item>
        <item>
          <name>maxwritten_clean</name>
          <type>ODBC</type>
          <key>db.odbc.select[maxwritten_clean,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>select maxwritten_clean from pg_stat_bgwriter</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>BG writer</name>
            </application>
          </applications>
        </item>
        <item>
          <name>one</name>
          <type>ODBC</type>
          <key>db.odbc.select[one,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>select 1 as "C1"</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Statistics</name>
            </application>
          </applications>
          <triggers>
            <trigger>
              <expression>{last()}&lt;>1</expression>
              <name>Database problem</name>
              <priority>AVERAGE</priority>
              <description>This query does a select 1 as 1 if it doesn't return 1 some thing is really messed up.</description>
              <manual_close>YES</manual_close>
            </trigger>
          </triggers>
        </item>
        <item>
          <name>pmbcexclusivelock</name>
          <type>ODBC</type>
          <key>db.odbc.select[pmbcexclusivelock,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>SELECT count(*) from public.vwlock where lock_duration_in_minutes > 5</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Locks</name>
            </application>
          </applications>
          <triggers>
            <trigger>
              <expression>{last()}>6</expression>
              <name>To many PMBC exclusive locks</name>
              <priority>AVERAGE</priority>
              <manual_close>YES</manual_close>
            </trigger>
          </triggers>
        </item>
        <item>
          <name>rowexclusivelock</name>
          <type>ODBC</type>
          <key>db.odbc.select[rowexclusivelock,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>SELECT count(*) FROM pg_locks where mode='RowExclusiveLock'</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Locks</name>
            </application>
          </applications>
        </item>
        <item>
          <name>rowsharelock</name>
          <type>ODBC</type>
          <key>db.odbc.select[rowsharelock,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>SELECT count(*) FROM pg_locks where mode='RowShareLock'</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Locks</name>
            </application>
          </applications>
        </item>
        <item>
          <name>sharerowexclusivelock</name>
          <type>ODBC</type>
          <key>db.odbc.select[sharerowexclusivelock,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>SELECT count(*) FROM pg_locks where mode='ShareRowExclusiveLock'</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Locks</name>
            </application>
          </applications>
        </item>
        <item>
          <name>shareupdateexclusivelock</name>
          <type>ODBC</type>
          <key>db.odbc.select[shareupdateexclusivelock,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>SELECT count(*) FROM pg_locks where mode='ShareUpdateExclusiveLock'</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Locks</name>
            </application>
          </applications>
        </item>
        <item>
          <name>tupdeleted</name>
          <type>ODBC</type>
          <key>db.odbc.select[tupdeleted,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>select sum(tup_deleted) from pg_stat_database</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Statistics</name>
            </application>
          </applications>
        </item>
        <item>
          <name>tupfetched</name>
          <type>ODBC</type>
          <key>db.odbc.select[tupfetched,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>select sum(tup_fetched) from pg_stat_database</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Statistics</name>
            </application>
          </applications>
        </item>
        <item>
          <name>tupinserted</name>
          <type>ODBC</type>
          <key>db.odbc.select[tupinserted,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>select sum(tup_inserted) from pg_stat_database</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Statistics</name>
            </application>
          </applications>
        </item>
        <item>
          <name>tupreturned</name>
          <type>ODBC</type>
          <key>db.odbc.select[tupreturned,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>select sum(tup_returned) from pg_stat_database</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Statistics</name>
            </application>
          </applications>
        </item>
        <item>
          <name>tupupdated</name>
          <type>ODBC</type>
          <key>db.odbc.select[tupupdated,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>select sum(tup_updated) from pg_stat_database</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Statistics</name>
            </application>
          </applications>
        </item>
        <item>
          <name>xactcommit</name>
          <type>ODBC</type>
          <key>db.odbc.select[xactcommit,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>SELECT sum(xact_commit) FROM pg_stat_database</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Statistics</name>
            </application>
          </applications>
        </item>
        <item>
          <name>xactrollback</name>
          <type>ODBC</type>
          <key>db.odbc.select[xactrollback,{HOST.NAME}]</key>
          <delay>60s</delay>
          <trends>732d</trends>
          <params>SELECT sum(xact_rollback) FROM pg_stat_database</params>
          <username>zabbix</username>
          <password>my_password</password>
          <applications>
            <application>
              <name>Statistics</name>
            </application>
          </applications>
        </item>
      </items>
    </template>
  </templates>
</zabbix_export>