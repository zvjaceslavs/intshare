zabbix_export:
  version: '5.4'
  date: '2021-11-09T07:59:05Z'
  groups:
    -
      uuid: 1525c35a49b84643b78e505d135a1967
      name: 'Windows Servers'
  templates:
    -
      uuid: edafc53cf7264457b55b321036b439ff
      template: 'App MS SQL DB Discovery'
      name: 'App MS SQL DB Discovery'
      description: |
        ## Author
        
        Stephen E. Fritz
        
        
      groups:
        -
          name: 'Windows Servers'
      discovery_rules:
        -
          uuid: 42051a7e91e14d1a933364fe5282c0a4
          name: 'MS SQL DB Discovery'
          key: windowsdb.discovery
          delay: '300'
          filter:
            conditions:
              -
                macro: '{#DBS}'
                value: '@MS SQL System DBs'
                formulaid: A
          description: 'Discovers databases within a single instance specified in a Powershell script.'
          item_prototypes:
            -
              uuid: c0ed57b8f4f54954be2a1987b2f0a64e
              name: '{$INSTANCE01} Databases {#DBS} Active Transactions'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Active Transactions",300]'
              delay: '30'
              value_type: FLOAT
              description: 'Number of active transactions for the database.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 941634234c654fb1ab2ef9393747bb61
              name: '{$INSTANCE01} Databases {#DBS} Bulk Copy Rows/sec'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Bulk Copy Rows/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              description: 'Number of rows bulk copied per second.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: bfa886bd8a3b4242bf4cf512352929cc
              name: '{$INSTANCE01} Databases {#DBS} Bulk Copy Throughput/sec'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Bulk Copy Throughput/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: KBytes/sec
              description: 'Amount of data bulk copied (in kilobytes) per second.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 2c0e0305ff1a4056b9a9128496f4c3fd
              name: '{$INSTANCE01} Databases {#DBS} Commit Table Entries'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Commit Table Entries",300]'
              delay: '30'
              value_type: FLOAT
              description: 'The size of the in-memory portion of the commit table for the database.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: ff04affb2e694cd391e6391e7b6f2ef8
              name: '{$INSTANCE01} Databases {#DBS} Data File(s) Size (KB)'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Data File(s) Size (KB)",300]'
              delay: '30'
              value_type: FLOAT
              units: KBytes
              description: 'Cumulative size (in kilobytes) of all the data files in the database including any automatic growth. Monitoring this counter is useful, for example, for determining the correct size of tempdb.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: a856e92ae2e24a7cb21237d90745296e
              name: '{$INSTANCE01} Databases {#DBS} DBCC Logical Scan Bytes/sec'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\DBCC Logical Scan Bytes/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: Bytes/sec
              description: 'Number of logical read scan bytes per second for database console commands (DBCC).'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 097ccf5eb8e14402937fc1967c6b8571
              name: '{$INSTANCE01} Databases {#DBS} Group Commit Time/sec'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Group Commit Time/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 77cbdca68baa4360af8758c501a15db6
              name: '{$INSTANCE01} Databases {#DBS} Log Bytes Flushed/sec'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Bytes Flushed/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: Bytes/sec
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 191c0027495b48c9896ea116b4df7a08
              name: '{$INSTANCE01} Databases {#DBS} Log Cache Hit Ratio'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Cache Hit Ratio",300]'
              delay: '30'
              value_type: FLOAT
              description: 'Percentage of log cache reads satisfied from the log cache.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: e95322ab7b80473cab982d385f1f50fb
              name: '{$INSTANCE01} Databases {#DBS} Log Cache Reads/sec'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Cache Reads/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              description: 'Reads performed per second through the log manager cache.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 6a675096e36a4694afc4811c2eb65588
              name: '{$INSTANCE01} Databases {#DBS} Log File(s) Size (KB)'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log File(s) Size (KB)",300]'
              delay: '30'
              value_type: FLOAT
              units: KBytes
              description: 'Cumulative size (in kilobytes) of all the transaction log files in the database.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: a906b9e3da3f4c9e857e071107681f43
              name: '{$INSTANCE01} Databases {#DBS} Log File(s) Used Size (KB)'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log File(s) Used Size (KB)",300]'
              delay: '30'
              value_type: FLOAT
              units: KBytes
              description: 'The cumulative used size of all the log files in the database.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 0173e165ce35455888be7222072259e3
              name: '{$INSTANCE01} Databases {#DBS} Log Flushes/sec'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Flushes/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              description: 'Number of log flushes per second.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 160d7d74605a48f4b4bf15e5626033bc
              name: '{$INSTANCE01} Databases {#DBS} Log Flush Waits/sec'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Flush Waits/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              description: 'Number of commits per second waiting for the log flush.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
              trigger_prototypes:
                -
                  uuid: feaf66a6fc094fb8921b0f25050c8a06
                  expression: 'avg(/App MS SQL DB Discovery/perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Flush Waits/sec",300],600s)>0.1'
                  name: '{#DBS} Log Flush Waits/sec'
                  priority: WARNING
                  description: 'The number of times per second that SQL Server must wait for pages to be written to the transaction log.'
            -
              uuid: b5c1edf7b5ad4163a28c950c9fddd70c
              name: '{$INSTANCE01} Databases {#DBS} Log Flush Wait Time'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Flush Wait Time",300]'
              delay: '30'
              value_type: FLOAT
              units: millisec
              description: 'Total wait time (in milliseconds) to flush the log. On an AlwaysOn secondary database, this value indicates the wait time for log records to be hardened to disk.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
              trigger_prototypes:
                -
                  uuid: 999337117eee4a988dfcc133833d1888
                  expression: 'avg(/App MS SQL DB Discovery/perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Flush Wait Time",300],600s)>0.1'
                  name: '{#DBS} Log Flush Wait Time'
                  priority: WARNING
                  description: 'Total wait time, in milliseconds, to write all transaction log pages.'
            -
              uuid: 8c3629bcdd2b49e08de553580a5daddf
              name: '{$INSTANCE01} Databases {#DBS} Log Flush Write Time (ms)'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Flush Write Time (ms)",300]'
              delay: '30'
              value_type: FLOAT
              units: millisec
              description: 'Time in milliseconds for performing writes of log flushes that were completed in the last second.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 6262ec284aca47f2affb6ba7e3d4a2b4
              name: '{$INSTANCE01} Databases {#DBS} Log Growths'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Growths",300]'
              delay: '30'
              value_type: FLOAT
              description: 'Total number of times the transaction log for the database has been expanded.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
              trigger_prototypes:
                -
                  uuid: 6eeffe3662d84d9f9d21528c5e9a9053
                  expression: 'avg(/App MS SQL DB Discovery/perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Growths",300],600s)>0.1'
                  name: '{#DBS} Log Growths'
                  priority: WARNING
                  description: 'Total number of times the transaction log for the database has been expanded. Each time the transaction log grows, all user activity must halt until the log growth completes.  Therefore, you want log growths to occur during predefined maintenance windows rather than during general working hours'
            -
              uuid: c2ffc3e762bc4809b58dc3de862fec74
              name: '{$INSTANCE01} Databases {#DBS} Log Pool Cache Misses/sec'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Pool Cache Misses/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              description: 'Number of requests for which the log block was not available in the log pool. The log pool is an in-memory cache of the transaction log. This cache is used to optimize reading the log for recovery, transaction replication, rollback, and AlwaysOn Availability Groups.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 42809426cea24bb2a558de34ab2774bf
              name: '{$INSTANCE01} Databases {#DBS} Log Pool Disk Reads/sec'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Pool Disk Reads/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              description: 'Number of disk reads that the log pool issued to fetch log blocks.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 892a6a44786549c395f923f8ba7fbe9c
              name: '{$INSTANCE01} Databases {#DBS} Log Pool Requests/sec'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Pool Requests/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              description: 'The number of log-block requests processed by the log pool.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 25c93525e83c47a3a6f07a4f08da0674
              name: '{$INSTANCE01} Databases {#DBS} Log Shrinks'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Shrinks",300]'
              delay: '30'
              value_type: FLOAT
              description: 'Total number of times the transaction log for the database has been shrunk.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
              trigger_prototypes:
                -
                  uuid: acfe596704fe492390c86e76e08edbf1
                  expression: 'avg(/App MS SQL DB Discovery/perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Shrinks",300],600s)>0.1'
                  name: '{#DBS} Log Shrinks'
                  priority: WARNING
                  description: 'Total number of times the transaction log for the database has been shrunk.'
            -
              uuid: 1421d29761c047c0b5b0571aafd6b6a0
              name: '{$INSTANCE01} Databases {#DBS} Log Truncations'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Truncations",300]'
              delay: '30'
              value_type: FLOAT
              description: 'The number of times the transaction log has been shrunk.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 6ccfbfca8ee74bdda7f5f089e8b1894d
              name: '{$INSTANCE01} Databases {#DBS} Percent Log Used'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Percent Log Used",300]'
              delay: '30'
              value_type: FLOAT
              units: '%'
              description: 'Percentage of space in the log that is in use.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
              trigger_prototypes:
                -
                  uuid: 711b02a56a91499d965364543f24b8ee
                  expression: 'last(/App MS SQL DB Discovery/perf_counter["\{$INSTANCE01}:Databases({#DBS})\Percent Log Used",300])>80'
                  name: '{#DBS} Percent Log Used'
                  priority: WARNING
                  description: 'Percentage of space in the log that is in use.  Since all work in an OLTP database stops until writes can occur to the transaction log, it’s a very good idea to ensure that the log never fills completely.  Hence, the recommendation to keep the log under 80% full.'
            -
              uuid: 700384d0315549fe8e5a89f90691074e
              name: '{$INSTANCE01} Databases {#DBS} Repl. Pending Xacts'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Repl. Pending Xacts",300]'
              delay: '30'
              value_type: FLOAT
              description: 'Number of transactions in the transaction log of the publication database marked for replication, but not yet delivered to the distribution database.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 86d0120fad914b36a48e6b26542371fd
              name: '{$INSTANCE01} Databases {#DBS} Repl. Trans. Rate'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Repl. Trans. Rate",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              description: 'Number of transactions per second read out of the transaction log of the publication database and delivered to the distribution database.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 1395556f12b14e2b9741545a1a915f4b
              name: '{$INSTANCE01} Databases {#DBS} Shrink Data Movement Bytes/sec'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Shrink Data Movement Bytes/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: Bytes/sec
              description: 'Amount of data being moved per second by autoshrink operations, or DBCC SHRINKDATABASE or DBCC SHRINKFILE statements.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 85dc41a7bbcf409780cea155269f3698
              name: '{$INSTANCE01} Databases {#DBS} Tracked transactions/sec'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Tracked transactions/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              description: 'Number of committed transactions recorded in the commit table for the database.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 56bf56f789eb4f64b2d9ebcd43bf0368
              name: '{$INSTANCE01} Databases {#DBS} Transactions/sec'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Transactions/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              description: 'Number of transactions started for the database per second.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
            -
              uuid: 5eeb5fc08d97480c8275159ba0687c24
              name: '{$INSTANCE01} Databases {#DBS} Write Transactions/sec'
              key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Write Transactions/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              description: 'Number of transactions that wrote to the database and committed, in the last second.'
              tags:
                -
                  tag: Application
                  value: 'SQL Databases'
          graph_prototypes:
            -
              uuid: f419b41924b64f6dbfa29e41725ea9da
              name: 'Database {#DBS} Bulk Copies'
              graph_items:
                -
                  color: 00C800
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Bulk Copy Rows/sec",300]'
                -
                  sortorder: '1'
                  color: FF3333
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Bulk Copy Throughput/sec",300]'
            -
              uuid: 213d4667a69d4b46bbc43c3decef265c
              name: 'Database {#DBS} File Sizes (KB)'
              graph_items:
                -
                  color: 00C800
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Data File(s) Size (KB)",300]'
                -
                  sortorder: '1'
                  color: FF3333
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log File(s) Size (KB)",300]'
                -
                  sortorder: '2'
                  color: 0000C8
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log File(s) Used Size (KB)",300]'
            -
              uuid: ec9b98a705d745fa8e1b4ffb11409cc4
              name: 'Database {#DBS} Log Pool Rates'
              graph_items:
                -
                  color: 00C800
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Pool Cache Misses/sec",300]'
                -
                  sortorder: '1'
                  color: FF3333
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Pool Disk Reads/sec",300]'
                -
                  sortorder: '2'
                  color: 0000C8
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Pool Requests/sec",300]'
            -
              uuid: ab2b13a439af4435974c3e77633cd998
              name: 'Database {#DBS} Log Rates'
              graph_items:
                -
                  color: 00C800
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Bytes Flushed/sec",300]'
                -
                  sortorder: '1'
                  color: FF3333
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Cache Reads/sec",300]'
                -
                  sortorder: '2'
                  color: 0000C8
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Flushes/sec",300]'
                -
                  sortorder: '3'
                  color: C800C8
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Flush Waits/sec",300]'
            -
              uuid: 97b4f650336248a481ba38f6543e0d38
              name: 'Database {#DBS} Log Sizes'
              graph_items:
                -
                  color: 00C800
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Growths",300]'
                -
                  sortorder: '1'
                  color: FF3333
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Shrinks",300]'
                -
                  sortorder: '2'
                  color: 0000C8
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Truncations",300]'
                -
                  sortorder: '3'
                  color: C800C8
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Percent Log Used",300]'
            -
              uuid: 83736e65eb0c4cddb4455953efb474fd
              name: 'Database {#DBS} Log Times and Ratios'
              graph_items:
                -
                  color: 00C800
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Cache Hit Ratio",300]'
                -
                  sortorder: '1'
                  color: FF3333
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Flush Wait Time",300]'
                -
                  sortorder: '2'
                  color: 0000C8
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Log Flush Write Time (ms)",300]'
            -
              uuid: da3db6c31051403f93dfde3c4651077b
              name: 'Database {#DBS} Replication'
              graph_items:
                -
                  color: 00C800
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Repl. Pending Xacts",300]'
                -
                  sortorder: '1'
                  color: FF3333
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Repl. Trans. Rate",300]'
            -
              uuid: b910182c55f24acda2c890777965dd40
              name: 'Database {#DBS} Transactions'
              graph_items:
                -
                  color: 00C800
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Active Transactions",300]'
                -
                  sortorder: '1'
                  color: FF3333
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Tracked transactions/sec",300]'
                -
                  sortorder: '2'
                  color: 0000C8
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Transactions/sec",300]'
                -
                  sortorder: '3'
                  color: C800C8
                  item:
                    host: 'App MS SQL DB Discovery'
                    key: 'perf_counter["\{$INSTANCE01}:Databases({#DBS})\Write Transactions/sec",300]'
      macros:
        -
          macro: '{$INSTANCE01}'
          value: SQLServer
