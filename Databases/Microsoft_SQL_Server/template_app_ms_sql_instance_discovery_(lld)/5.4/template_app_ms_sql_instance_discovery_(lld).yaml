zabbix_export:
  version: '5.4'
  date: '2021-11-22T02:41:29Z'
  groups:
    -
      uuid: 7df96b18c230490a9a0a9e2307226338
      name: Templates
  templates:
    -
      uuid: 3c74c4d12fb14807aef9613f1be0ea0d
      template: 'App MS SQL Instance Discovery'
      name: 'App MS SQL Instance Discovery'
      groups:
        -
          name: Templates
      discovery_rules:
        -
          uuid: 6c311ac21c254aefbd585f62c7087c76
          name: 'MSSQL Multi Instance Discovery'
          key: windowssqlinstances.discovery
          delay: '300'
          filter:
            conditions:
              -
                macro: '{#INSTANCES}'
                value: '@MSSQL Multi Instance Discovery'
                formulaid: A
          description: 'Discovers multiple SQL Server Instances'
          item_prototypes:
            -
              uuid: c8b9a9124e5a439ab6539453b602a94e
              name: '{#INSTANCES} Access Methods Forwarded Records/sec'
              key: 'perf_counter["\{#INSTANCES}:Access Methods\Forwarded Records/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Access Methods'
            -
              uuid: 6bd64583809e45999260c3f415a752b8
              name: '{#INSTANCES} Access Methods Full Scans/sec'
              key: 'perf_counter["\{#INSTANCES}:Access Methods\Full Scans/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Access Methods'
            -
              uuid: 32f871d8ed274c579d3d50803aef3e61
              name: '{#INSTANCES} Access Methods Index Searches/sec'
              key: 'perf_counter["\{#INSTANCES}:Access Methods\Index Searches/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Access Methods'
            -
              uuid: c486220a90e0474cbff5ddfc028c6f1f
              name: '{#INSTANCES} Access Methods Page Splits/sec'
              key: 'perf_counter["\{#INSTANCES}:Access Methods\Page Splits/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Access Methods'
            -
              uuid: b4dda84baee640559a3d3b3e27650e25
              name: '{#INSTANCES} Access Methods Table Lock Escalations'
              key: 'perf_counter["\{#INSTANCES}:Access Methods\Table Lock Escalations/sec",300]'
              delay: '30'
              value_type: FLOAT
              tags:
                -
                  tag: Application
                  value: 'SQL Server Access Methods'
            -
              uuid: 6ede8c41ccfb45fc9069ec7523772948
              name: '{#INSTANCES} Buffer Manager Buffer cache hit ratio'
              key: 'perf_counter["\{#INSTANCES}:Buffer Manager\Buffer cache hit ratio",300]'
              delay: '30'
              value_type: FLOAT
              tags:
                -
                  tag: Application
                  value: 'SQL Server Buffer Manager'
              trigger_prototypes:
                -
                  uuid: e6a3f05cc15b4770a0eb8957a45bb6dc
                  expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Buffer Manager\Buffer cache hit ratio",300])<90'
                  name: '{#INSTANCES}:Buffer Manager Buffer cache hit ratio'
                  url: 'https://msdn.microsoft.com/en-us/ms189628'
                  priority: WARNING
                  description: 'This counter indicates how often SQL Server goes to the buffer, not the hard disk, to get data. The higher this ratio, the less often SQL Server has to go to the hard disk to fetch data, and performance overall is boosted. Unlike many of the other counters available for monitoring SQL Server, this counter averages the Buffer Cache Hit Ratio from the time the last instance of SQL Server was restarted. In other words, this counter is not a real-time measurement, but an average of all the days since SQL Server was last restarted. In OLTP applications, this ratio should exceed 90-95%. If it doesn''t, then you need to add more RAM to your server to increase performance. In OLAP applications, the ratio could be much less because of the nature of how OLAP works. In any case, more RAM should increase the performance of SQL Server OLAP activity.'
            -
              uuid: 872970a2958f4ba1b15f6353bdb471ae
              name: '{#INSTANCES} Buffer Manager Free list stalls/sec'
              key: 'perf_counter["\{#INSTANCES}:Buffer Manager\Free list stalls/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Buffer Manager'
              trigger_prototypes:
                -
                  uuid: dd67bdf4adfc4bf494d363ac9970793a
                  expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Buffer Manager\Free list stalls/sec",300])>3'
                  name: '{#INSTANCES}:Buffer Manager Free list stalls/sec'
                  url: 'https://msdn.microsoft.com/en-us/ms189628'
                  priority: WARNING
                  description: 'Free list stalls/sec is the frequency with which requests for available database pages are suspended because no buffers are available. Free list stall rates of 3 or 4 per second indicate too little SQL memory available.'
            -
              uuid: 0b10ddfbfa894a41b594daa34cd5fbad
              name: '{#INSTANCES} Buffer Manager Lazy Writes/sec'
              key: 'perf_counter["\{#INSTANCES}:Buffer Manager\Lazy Writes/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Buffer Manager'
              trigger_prototypes:
                -
                  uuid: 2d70ff61d5f34f98b6ee4a3c11e9dee2
                  expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Buffer Manager\Lazy Writes/sec",300])>20'
                  name: '{#INSTANCES}:Buffer Manager Lazy Writes/Sec'
                  url: 'https://msdn.microsoft.com/en-us/ms189628'
                  priority: WARNING
            -
              uuid: 6993c9124fd64b17b7cae4c0eaf61e28
              name: '{#INSTANCES} Buffer Manager Page Life Expectancy'
              key: 'perf_counter["\{#INSTANCES}:Buffer Manager\Page Life Expectancy",300]'
              delay: '30'
              value_type: FLOAT
              units: sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Buffer Manager'
              trigger_prototypes:
                -
                  uuid: 3cd452cb3f9d489cac79662f2929e827
                  expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Buffer Manager\Page Life Expectancy",300])<300'
                  name: '{#INSTANCES}:Buffer Manager Page Life Expectancy'
                  url: 'https://msdn.microsoft.com/en-us/ms189628'
                  priority: WARNING
            -
              uuid: 542ab6884ea744ab9cf6aed7cec23993
              name: '{#INSTANCES} Buffer Manager Page lookups/sec'
              key: 'perf_counter["\{#INSTANCES}:Buffer Manager\Page lookups/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Buffer Manager'
              trigger_prototypes:
                -
                  uuid: aa2d5921f9844209a926ba21db012392
                  expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Buffer Manager\Page lookups/sec",300])>100'
                  name: '{#INSTANCES}:Buffer Manager Page lookups/sec'
                  url: 'https://msdn.microsoft.com/en-us/ms189628'
                  priority: WARNING
                  description: 'Number of requests to find a page in the buffer pool. When the ratio of page lookups to batch requests is much greater than 100, this is an indication that while query plans are looking up data in the buffer pool, these plans are inefficient. Identify queries with the highest amount of logical I/O''s and tune them.'
            -
              uuid: 72eb979521d547cc896826bf92e83179
              name: '{#INSTANCES} Buffer Manager Page reads/sec'
              key: 'perf_counter["\{#INSTANCES}:Buffer Manager\Page reads/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Buffer Manager'
              trigger_prototypes:
                -
                  uuid: d5f39198229546258486d8ea7e2b8c12
                  expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Buffer Manager\Page reads/sec",300])>90'
                  name: '{#INSTANCES}:Buffer Manager Page reads/sec'
                  url: 'https://msdn.microsoft.com/en-us/ms189628'
                  priority: WARNING
                  description: 'Number of physical database page reads issued. 80 – 90 per second is normal, anything that is above indicates indexing or memory constraint.'
            -
              uuid: 0421e0d97cef46baa3b0e55104b03cef
              name: '{#INSTANCES} Buffer Manager Page writes/sec'
              key: 'perf_counter["\{#INSTANCES}:Buffer Manager\Page writes/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Buffer Manager'
              trigger_prototypes:
                -
                  uuid: 8f5bfb81227f4fd1ab8d0ea78cb5003d
                  expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Buffer Manager\Page writes/sec",300])>90'
                  name: '{#INSTANCES}:Buffer Manager Page writes/sec'
                  url: 'https://msdn.microsoft.com/en-us/ms189628'
                  priority: WARNING
                  description: 'Number of physical database page reads issued. 80 – 90 per second is normal, anything that is above indicates indexing or memory constraint.'
            -
              uuid: 8c26b49a8f85482b9f57a2635335569b
              name: '{#INSTANCES} Databases _Total Log Flushes/sec'
              key: 'perf_counter["\{#INSTANCES}:Databases(_Total)\Log Flushes/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Databases'
            -
              uuid: 67457393fbbd410fbd06b64bb9efc879
              name: '{#INSTANCES} Databases _Total Transactions/sec'
              key: 'perf_counter["\{#INSTANCES}:Databases(_Total)\Transactions/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Databases'
            -
              uuid: 696179494c1c46a09d219d74af214791
              name: '{#INSTANCES} General Statistics Logins/sec'
              key: 'perf_counter["\{#INSTANCES}:General Statistics\Logins/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server General Statistics'
              trigger_prototypes:
                -
                  uuid: 13bf8283234a42e0a2520aedc7f6a1f2
                  expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:General Statistics\Logins/sec",300])>2'
                  name: '{#INSTANCES}:General Statistics Logins/sec'
                  url: 'https://msdn.microsoft.com/en-us/ms190697'
                  priority: WARNING
                  description: '> 2 per second indicates that the application is not correctly using connection pooling.'
            -
              uuid: 848b134a07364200b215a2d672e9c181
              name: '{#INSTANCES} General Statistics Logouts/sec'
              key: 'perf_counter["\{#INSTANCES}:General Statistics\Logouts/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server General Statistics'
              trigger_prototypes:
                -
                  uuid: bdffb9721e7443a8b3a322fc9c3c1fdd
                  expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:General Statistics\Logouts/sec",300])>2'
                  name: '{#INSTANCES}:General Statistics Logouts/sec'
                  url: 'https://msdn.microsoft.com/en-us/ms190697'
                  priority: WARNING
                  description: '> 2 per second indicates that the application is not correctly using connection pooling.'
            -
              uuid: 3d2085ad54cd421cbfed777e56504c34
              name: '{#INSTANCES} General Statistics User Connections'
              key: 'perf_counter["\{#INSTANCES}:General Statistics\User Connections",300]'
              delay: '30'
              value_type: FLOAT
              tags:
                -
                  tag: Application
                  value: 'SQL Server General Statistics'
            -
              uuid: 3bb44f78bd1f49ff8de5d2a621c7f76b
              name: '{#INSTANCES} Latches Latch Waits/sec'
              key: 'perf_counter["\{#INSTANCES}:Latches\Latch Waits/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Latches'
            -
              uuid: 6513fd963182477b924395983f8b4099
              name: '{#INSTANCES} Latches Total Latch Wait Time (ms)'
              key: 'perf_counter["\{#INSTANCES}:Latches\Total Latch Wait Time (ms)",300]'
              delay: '30'
              value_type: FLOAT
              units: millisec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Latches'
              trigger_prototypes:
                -
                  uuid: fc999960ab63475fa9bd2e24f9c33c31
                  expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Latches\Total Latch Wait Time (ms)",300])>60000'
                  name: '{#INSTANCES}:Latches Total Latch Wait Time (ms)'
                  url: 'https://msdn.microsoft.com/en-us/ms190216'
                  priority: WARNING
                  description: 'Total wait time (milliseconds) for locks in the last second. Note: For “Lock Wait Time” it is recommended to look beyond the Avg value. Look for any peaks that are close (or exceeds) to a wait of 60 sec. Though this counter counts how many total milliseconds SQL Server is waiting on locks during the last second, but the counter actually records at the end of locking event. So most probably the peaks represent one huge locking event. If those events exceeds more than 60seconds then they may have extended blocking and could be an issue. In such cases, thoroughly analyze the blocking script output. Some applications are written for timing out after 60 seconds and that’s not acceptable response for those applications.'
            -
              uuid: e3bd5f5e97e244ffa1047e6dba363a18
              name: '{#INSTANCES} Locks _Total Lock Waits/sec'
              key: 'perf_counter["\{#INSTANCES}:Locks(_Total)\Lock Waits/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Locks'
              trigger_prototypes:
                -
                  uuid: c91a2ac9e77446caa51abe6fcdba5fc0
                  expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Locks(_Total)\Lock Waits/sec",300])>0'
                  name: '{#INSTANCES}:Locks _Total Lock Waits/sec'
                  url: 'https://msdn.microsoft.com/en-us/ms190216'
                  priority: WARNING
                  description: 'This counter reports how many times users waited to acquire a lock over the past second. Note that while you are actually waiting on the lock that this is not reflected in this counter—it gets incremented only when you “wake up” after waiting on the lock. If this value is nonzero then it is an indication that there is at least some level of blocking occurring. If you combine this with the Lock Wait Time counter, you can get some idea of how long the blocking lasted. A zero value for this counter can definitively prove out blocking as a potential cause; a nonzero value will require looking at other information to determine whether it is significant.'
            -
              uuid: c35cb35ea4ed45079112295fd61fc96e
              name: '{#INSTANCES} Locks _Total Number of Deadlocks/sec'
              key: 'perf_counter["\{#INSTANCES}:Locks(_Total)\Number of Deadlocks/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server Locks'
              trigger_prototypes:
                -
                  uuid: 2e090427b74e425980b77ca113969316
                  expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Locks(_Total)\Number of Deadlocks/sec",300])>1'
                  name: '{#INSTANCES}:Locks_Total Number of Deadlocks/sec'
                  url: 'https://msdn.microsoft.com/en-us/ms190216'
                  priority: WARNING
                  description: 'The number of lock requests that resulted in a deadlock.'
            -
              uuid: cb6da2457f0a4a4ba6d4dcba68a90258
              name: '{#INSTANCES} Memory Manager Total Server Memory (KB)'
              key: 'perf_counter["\{#INSTANCES}:Memory Manager\Total Server Memory (KB)",300]'
              delay: '30'
              value_type: FLOAT
              units: KBytes
              tags:
                -
                  tag: Application
                  value: 'SQL Server Memory Manager'
            -
              uuid: 0f58b89bcd6340aeb9b7922bee7cfc3f
              name: '{#INSTANCES} SQL Statistics Batch Requests/sec'
              key: 'perf_counter["\{#INSTANCES}:SQL Statistics\Batch Requests/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server SQL Statistics'
            -
              uuid: 08b36d6a626c4b4f931233678f47343c
              name: '{#INSTANCES} SQL Statistics SQL Compilations/sec'
              key: 'perf_counter["\{#INSTANCES}:SQL Statistics\SQL Compilations/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server SQL Statistics'
            -
              uuid: 432a1da25e6144c6958e494c92e1d727
              name: '{#INSTANCES} SQL Statistics SQL Re-Compilations/sec'
              key: 'perf_counter["\{#INSTANCES}:SQL Statistics\SQL Re-Compilations/sec",300]'
              delay: '30'
              value_type: FLOAT
              units: /sec
              tags:
                -
                  tag: Application
                  value: 'SQL Server SQL Statistics'
            -
              uuid: 0192b51ac32a431984b6b2f0f9759708
              name: '{#INSTANCES} Service'
              key: 'service_state[{#INSTANCES}]'
              delay: '30'
              value_type: FLOAT
              valuemap:
                name: 'Windows service state'
              tags:
                -
                  tag: Application
                  value: 'SQL Services'
          trigger_prototypes:
            -
              uuid: 52571c09d8f14c2bb4ccacf8a9a943de
              expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Access Methods\Forwarded Records/sec",300])>0.1*last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:SQL Statistics\Batch Requests/sec",300])'
              name: '{#INSTANCES}:Access Methods Forwarded Records/sec'
              url: 'https://msdn.microsoft.com/en-us/ms177426'
              priority: WARNING
            -
              uuid: a4e12f6c1884479193dcba7010fd7a28
              expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Access Methods\Index Searches/sec",300])/last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Access Methods\Full Scans/sec",300])>1000'
              name: '{#INSTANCES}:Access Methods Full Scans/sec'
              url: 'https://msdn.microsoft.com/en-us/ms177426'
              priority: WARNING
              description: 'This counter monitors the number of full scans on base tables or indexes. Values greater than 1 or 2 indicate that we are having table / Index page scans. If we see high CPU then we need to investigate this counter, otherwise if the full scans are on small tables we can ignore this counter. A few of the main causes of high Full Scans/sec are • Missing indexes • Too many rows requested Queries with missing indexes or too many rows requested will have a large number of logical reads and an increased CPU time.'
            -
              uuid: 01af676a358e474593c9a73961e6899f
              expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Access Methods\Page Splits/sec",300])>0.2*last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:SQL Statistics\Batch Requests/sec",300])'
              name: '{#INSTANCES}:Access Methods Page Splits/sec'
              url: 'https://msdn.microsoft.com/en-us/ms177426'
              priority: WARNING
              description: 'Number of page splits per second that occur as the result of overflowing index pages. Interesting counter that can lead us to our table / index design. This value needs to be low as possible. If you find out that the number of page splits is high, consider increasing the fillfactor of your indexes. An increased fillfactor helps to reduce page splits because there is more room in data pages before it fills up and a page split has to occur. Note that this counter also includes the new page allocations as well and doesn’t necessarily pose a problem. The other place we can confirm the page splits that involve data or index rows moves are the fragmented indexes on page splits.'
            -
              uuid: bed265f6eea4482db9b1f3e643e29ad2
              expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Latches\Total Latch Wait Time (ms)",300])/last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:Latches\Latch Waits/sec",300])>10'
              name: '{#INSTANCES}:Latches\Latch Waits/sec'
              url: 'https://msdn.microsoft.com/en-us/ms177421'
              priority: WARNING
            -
              uuid: 1bee416e69b94edd87288104ea8e27f1
              expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:SQL Statistics\SQL Compilations/sec",300])>0.1*last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:SQL Statistics\Batch Requests/sec",300])'
              name: '{#INSTANCES}:SQL Statistics SQL Compilations/sec'
              url: 'https://msdn.microsoft.com/en-us/ms190911'
              priority: WARNING
              description: 'The number of times per second that SQL Server compilations have occurred. This value needs to be as low as possible. If you see a high value such as over 100, then it’s an indication that there are lots of adhoc queries that are running, might cause CPU usage, solution is to re-write these adhoc as stored procedure or use sp_executeSQL.'
            -
              uuid: b13d3360ad4f42eb9d4c375b2f82c620
              expression: 'last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:SQL Statistics\SQL Re-Compilations/sec",300])>0.1*last(/App MS SQL Instance Discovery/perf_counter["\{#INSTANCES}:SQL Statistics\Batch Requests/sec",300])'
              name: '{#INSTANCES}:SQL Statistics SQL Re-Compilations/sec'
              url: 'https://msdn.microsoft.com/en-us/ms190911'
              priority: WARNING
              description: 'The number of times per second that SQL Server recompilations have occurred. This value needs to be as low as possible. If you see a high value such as over 100, then it’s an indication that there are lots of adhoc queries that are running, might cause CPU usage, solution is to re-write these adhoc as stored procedure or use sp_executeSQL.'
          graph_prototypes:
            -
              uuid: 9df06053ae4c4cbc9586cf3dcc432693
              name: '{#INSTANCES} Access Methods'
              graph_items:
                -
                  color: 00C800
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Access Methods\Forwarded Records/sec",300]'
                -
                  sortorder: '1'
                  color: FF3333
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Access Methods\Full Scans/sec",300]'
                -
                  sortorder: '2'
                  color: 0000C8
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Access Methods\Index Searches/sec",300]'
                -
                  sortorder: '3'
                  color: C800C8
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Access Methods\Page Splits/sec",300]'
            -
              uuid: be2a313eac774e909963b2bf39deb1ae
              name: '{#INSTANCES} Buffer Manager'
              graph_items:
                -
                  color: 00C800
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Buffer Manager\Buffer cache hit ratio",300]'
                -
                  sortorder: '1'
                  color: FF3333
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Buffer Manager\Page Life Expectancy",300]'
            -
              uuid: d16ea20b078642e89231dfd7cb4a4978
              name: '{#INSTANCES} Buffer Manager Rates'
              graph_items:
                -
                  color: 00C800
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Buffer Manager\Free list stalls/sec",300]'
                -
                  sortorder: '1'
                  color: FF3333
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Buffer Manager\Lazy Writes/sec",300]'
                -
                  sortorder: '2'
                  color: 0000C8
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Buffer Manager\Page lookups/sec",300]'
                -
                  sortorder: '3'
                  color: C800C8
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Buffer Manager\Page reads/sec",300]'
                -
                  sortorder: '4'
                  color: 00C8C8
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Buffer Manager\Page writes/sec",300]'
            -
              uuid: 77c37bfa6dd4415391092278a13e230b
              name: '{#INSTANCES} Databases _Total'
              graph_items:
                -
                  color: 00C800
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Databases(_Total)\Log Flushes/sec",300]'
                -
                  sortorder: '1'
                  color: FF3333
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Databases(_Total)\Transactions/sec",300]'
            -
              uuid: a9ffd64ef74243deba8eb015649bf071
              name: '{#INSTANCES} Latches and Locks'
              graph_items:
                -
                  color: 00C800
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Latches\Latch Waits/sec",300]'
                -
                  sortorder: '1'
                  color: FF3333
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Locks(_Total)\Lock Waits/sec",300]'
                -
                  sortorder: '2'
                  color: 0000C8
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:Locks(_Total)\Number of Deadlocks/sec",300]'
            -
              uuid: bc26bb578c874d3e9824bdabaa63fe23
              name: '{#INSTANCES} SQL Statistics'
              graph_items:
                -
                  color: 00C800
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:SQL Statistics\Batch Requests/sec",300]'
                -
                  sortorder: '1'
                  color: FF3333
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:SQL Statistics\SQL Compilations/sec",300]'
                -
                  sortorder: '2'
                  color: 0000C8
                  item:
                    host: 'App MS SQL Instance Discovery'
                    key: 'perf_counter["\{#INSTANCES}:SQL Statistics\SQL Re-Compilations/sec",300]'
      valuemaps:
        -
          uuid: 2965607cad384cf8b5eec5b7fc3fc46a
          name: 'Windows service state'
          mappings:
            -
              value: '0'
              newvalue: Running
            -
              value: '1'
              newvalue: Paused
            -
              value: '2'
              newvalue: 'Start pending'
            -
              value: '3'
              newvalue: 'Pause pending'
            -
              value: '4'
              newvalue: 'Continue pending'
            -
              value: '5'
              newvalue: 'Stop pending'
            -
              value: '6'
              newvalue: Stopped
            -
              value: '7'
              newvalue: Unknown
            -
              value: '255'
              newvalue: 'No such service'
