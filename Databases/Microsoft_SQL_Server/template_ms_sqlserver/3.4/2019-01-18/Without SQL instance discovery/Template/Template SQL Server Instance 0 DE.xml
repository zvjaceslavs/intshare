<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>3.4</version>
    <date>2018-10-30T18:50:36Z</date>
    <groups>
        <group>
            <name>Templates</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template SQL Server Instance 0 DE Baseline</template>
            <name>Template SQL Server Instance 0 DE Baseline</name>
            <description>Zabbix template for Microsoft SQL Server.&#13;
&#13;
Tested on Microsoft SQL Server 2012, 2014 and 2016. It may work with earlier versions, but some items (with missing performance counters) may be unsupported.&#13;
Tested on Zabbix 3.4.0. It may work with earlier versions, but some items (for example service.info[service,&lt;param&gt;]) may be unsupported.&#13;
&#13;
For Low Level Discovery to work additional scripts must be configured.&#13;
&#13;
Mantas Tumenas.&#13;
mantas.tumenas@gmail.com</description>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>SQL Backup</name>
                </application>
                <application>
                    <name>SQL Buffer Manager And Memory</name>
                </application>
                <application>
                    <name>SQL Data Access</name>
                </application>
                <application>
                    <name>SQL Event Viewer</name>
                </application>
                <application>
                    <name>SQL Memory Manager</name>
                </application>
                <application>
                    <name>SQL Memory Usage</name>
                </application>
                <application>
                    <name>SQL Plan Cache</name>
                </application>
                <application>
                    <name>SQL Processor</name>
                </application>
                <application>
                    <name>SQL Server Services</name>
                </application>
                <application>
                    <name>SQL Statistics</name>
                </application>
                <application>
                    <name>SQL Users And Locks</name>
                </application>
                <application>
                    <name>SQL Workload</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Backup errors</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>eventlog[Application,,&quot;Warning|Error|Critical&quot;,&quot;{$SQLINSTANCEEVENTLOG0}&quot;,&quot;2516|2517|3041|3134|3266|3313|3314|3315|3316|3417|3431|3443|3456|5173|5176|9004|14420|17208|17557|18204|18210|18273|35268|35269&quot;,,skip]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>2</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Microsoft SQL Server backup errors from Microsoft Windows Event Viewer.&#13;
&#13;
Event IDs are selected and reviewed from sys.messages table.&#13;
&#13;
SELECT *&#13;
FROM sys.messages&#13;
WHERE [text] LIKE '%backup%'&#13;
	AND language_id = 1033&#13;
	AND is_event_logged = 1&#13;
	AND severity &lt;&gt; 10&#13;
ORDER BY message_id ASC&#13;
&#13;
Application (program) events. The Application log contains events logged by applications or programs. Events are classified as error, warning, or information, depending on the severity of the event. An error is a significant problem, such as loss of data. A warning is an event that isn't necessarily significant, but might indicate a possible future problem. An information event describes the successful operation of a program, driver, or service.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Backup</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Database Engine errors</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>eventlog[Application,,&quot;Warning|Error|Critical&quot;,&quot;{$SQLINSTANCEEVENTLOG0}&quot;,,,skip]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>2</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Microsoft SQL Server errors (Warning, Error or Critical) from Microsoft Windows Event Viewer.&#13;
&#13;
Application (program) events. The Application log contains events logged by applications or programs. Events are classified as error, warning, or information, depending on the severity of the event. An error is a significant problem, such as loss of data. A warning is an event that isn't necessarily significant, but might indicate a possible future problem. An information event describes the successful operation of a program, driver, or service.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Event Viewer</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Database integrity errors Part 1</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>eventlog[Application,,&quot;Warning|Error|Critical&quot;,&quot;{$SQLINSTANCEEVENTLOG0}&quot;,^(211|427|602|603|606|608|610|806|823|824|825|829|832|855|856)$,,skip]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>2</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Microsoft SQL Server database integrity errors from Microsoft Windows Event Viewer.&#13;
&#13;
Application (program) events. The Application log contains events logged by applications or programs. Events are classified as error, warning, or information, depending on the severity of the event. An error is a significant problem, such as loss of data. A warning is an event that isn't necessarily significant, but might indicate a possible future problem. An information event describes the successful operation of a program, driver, or service.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Event Viewer</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Database integrity errors Part 2</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>eventlog[Application,,&quot;Warning|Error|Critical&quot;,&quot;{$SQLINSTANCEEVENTLOG0}&quot;,^(1509|1522|3301|3302|3624|3864|4134|5029|5180|8440|8443|8444|8461|8646|9003|9015|9100|9655|9657|17065|17066|17067)$,,skip]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>2</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Microsoft SQL Server database integrity errors from Microsoft Windows Event Viewer.&#13;
&#13;
Application (program) events. The Application log contains events logged by applications or programs. Events are classified as error, warning, or information, depending on the severity of the event. An error is a significant problem, such as loss of data. A warning is an event that isn't necessarily significant, but might indicate a possible future problem. An information event describes the successful operation of a program, driver, or service.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Event Viewer</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Forwarded Records/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Forwarded Records/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>R/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of records per second fetched through forwarded record pointers.&#13;
&#13;
Identifies use of a pointer which has been created when variable length columns have caused a row to move to a new page in a heap.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Data Access</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Full Scans/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Full Scans/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>S/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of unrestricted full scans. These can either be base table or full index scans.&#13;
&#13;
Monitors the number of full scans on tables or indexes. Ignore unless high CPU coincides with high scan rates. High scan rates may be caused by missing indexes, very small tables, or requests for too many records.&#13;
&#13;
Threshold: a sudden increase in this value may indicate a statistics threshold has been reached, resulting in an index no longer being used.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Data Access</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Index Searches/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Index Searches/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>S/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of index searches. Index searches are used to start range scans, single index record fetches, and to reposition within an index.&#13;
&#13;
The threshold recommendation is strictly for OLTP workloads.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Data Access</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Page Splits/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Page Splits/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>S/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of page splits per second that occur as a result of overflowing index pages.&#13;
&#13;
To avoid page splits, review table and index design to reduce non-sequential inserts or implement fillfactor and pad_index to leave more empty space per page. NOTE: A high value for this counter is not bad in situations where many new pages are being created, since it includes new page allocations.&#13;
&#13;
Threshold: should be as low as possible.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Data Access</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Table Lock Escalations/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Table Lock Escalations/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>E/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>The number of times locks on a table were escalated (from page- or row-level to table-level).&#13;
&#13;
Threshold: this number should, generally, be low. Frequent or even occasional spiking in this value may indicate poorly coded transactions.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Workfiles Created/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Workfiles Created/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>C/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of work files created per second. For example, work files could be used to store temporary results for hash joins and hash aggregates.&#13;
&#13;
Threshold: high values can indicate thrash in tempdb and poorly coded queries.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Data Access</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Worktables Created/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Worktables Created/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>C/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of work tables created per second. For example, work tables could be used to store temporary results for query spool, LOB variables, XML variables, and cursors.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Data Access</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Worktables From Cache Ratio</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Worktables From Cache Ratio&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>%</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Percentage of work tables created where the initial two pages of the work table were not allocated but were immediately available from the work table cache.&#13;
&#13;
Threshold: a value less than 90% may indicate insufficient memory, since execution plans are being dropped, or may indicate, on 32-bit systems, the need for an upgrade to a 64-bit system.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Buffer cache hit ratio %</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Buffer cache hit ratio&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>%</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Percentage of pages that were found in the buffer pool without having to incur a read from disk.&#13;
&#13;
The ratio is the total number of cache hits divided by the total number of cache lookups over the last few thousand page accesses. After a long period of time, the ratio moves very little. Because reading from the cache is much less expensive than reading from disk, you want this ratio to be high. Generally, you can increase the buffer cache hit ratio by increasing the amount of memory available to SQL Server or by using the buffer pool extension feature.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Buffer Manager And Memory</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Checkpoint Pages/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Checkpoint Pages/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>P/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of pages flushed by checkpoint or other operations that require all dirty pages to be flushed.&#13;
&#13;
Checkpoint frequency is influenced by the recovery interval setting in sp_configure.&#13;
&#13;
Threshold: high values for this counter may indicate insufficient memory or that the recovery interval is too high.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Buffer Manager And Memory</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Database Pages</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Database Pages&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>Pages</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of pages in the buffer pool with database content.&#13;
&#13;
As opposed to other usages for memory such as free pages, procedure cache, etc.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Memory Usage</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Free List Stalls/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Free List Stalls/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>S/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Indicates the number of requests per second that had to wait for a free page (no buffers are available.). &#13;
&#13;
Threshold: any value above 2 means SQL Server needs more memory.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Buffer Manager And Memory</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Lazy Writes/Sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Lazy Writes/Sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>W/S</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of buffers written by buffer manager's lazy writer.&#13;
&#13;
The lazy writer is a system process that flushes out batches of dirty, aged buffers (buffers that contain changes that must be written back to disk before the buffer can be reused for a different page) and makes them available to user processes. The lazy writer eliminates the need to perform frequent checkpoints in order to create available buffers.&#13;
&#13;
Threshold: lower is better with zero being ideal. When greater than 20, this counter indicates a need for more memory.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Buffer Manager And Memory</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Page Life Expectancy</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Page Life Expectancy&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of seconds a page will stay in the buffer pool without references.&#13;
&#13;
Tells, on average, how many seconds SQL Server expects a data page to stay in cache.&#13;
&#13;
Threshold: the target on an OLTP system should be at least 300 (5 min). When under 300, this may indicate poor index design (leading to increased disk I/O and less effective use of memory) or, simply, a potential shortage of memory. However, this threshold is from 2005/2006, when the average amount of memory on a server was much lower.&#13;
&#13;
For in-depth threshold calculations read here https://sqlperformance.com/2014/10/sql-performance/knee-jerk-page-life-expectancy and https://www.sqlskills.com/blogs/paul/page-life-expectancy-isnt-what-you-think/</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Buffer Manager And Memory</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Page Lookups/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Page Lookups/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>L/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of requests to find a page in the buffer pool.&#13;
&#13;
Threshold: when the ratio of batch requests to page lookups crests 100, you may have inefficient execution plans or too many adhoc queries.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Buffer Manager And Memory</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Page Reads/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Page Reads/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>R/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of physical database page reads issued.&#13;
&#13;
This statistic displays the total number of physical page reads across all databases. Because physical I/O is expensive, you may be able to minimize the cost, either by using a larger data cache, intelligent indexes, and more efficient queries, or by changing the database design.&#13;
&#13;
Threshold: normal OLTP workloads support 80 – 90 per second, but higher values may be a yellow flag for poor indexing or insufficient memory.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Buffer Manager And Memory</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Page Writes/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Page Writes/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>W/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of physical database page writes issued.&#13;
&#13;
Threshold: normal OLTP workloads support 80 – 90 per second. Values over 90 should be crossed checked with “lazy writer/sec” and “checkpoint” counters. If the other counters are also high, then it may indicate insufficient memory.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Buffer Manager And Memory</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Readahead Pages/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Readahead Pages/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>P/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of pages read in anticipation of use.&#13;
&#13;
Threshold: if this value is makes up even a sizeable minority of total Page Reads/sec (say, greater than 20% of total page reads), you may have too many physical reads occurring.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Buffer Manager And Memory</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Active Cursors _Total</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Cursor Manager by Type(_Total)\Active Cursors&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of active cursors.&#13;
&#13;
Threshold: a heavy use of server cursors can result in performance issues.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Workload</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Logins/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:General Statistics\Logins/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>L/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Total number of logins started per second.&#13;
&#13;
This does not include pooled connections.&#13;
&#13;
Threshold: any value over 2 may indicate insufficient connection pooling.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Logouts/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:General Statistics\Logouts/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>L/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Total number of logouts started per second.&#13;
&#13;
Threshold: any value over 2 may indicate insufficient connection pooling.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Processes Blocked</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:General Statistics\Processes blocked&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>P/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of currently blocked processes.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: User Connections</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:General Statistics\User Connections&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units>Conn.</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of users connected to the system.&#13;
&#13;
Threshold: this counter should roughly track with “Batch Requests/Sec”. They should generally rise and fall together. For example, blocking problems could be revealed by rising user connections, lock waits and lock wait time coupled with declining batch requests/sec.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Average Latch Wait Time (ms)</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Latches\Average Latch Wait Time (ms)&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>ms</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Average latch wait time (in milliseconds) for latch requests that had to wait.&#13;
&#13;
Threshold: this value should generally correlate to “Latch Waits/sec” and move up or down with it accordingly.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Latch Waits/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Latches\Latch Waits/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>W/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of latch requests that could not be granted immediately and had to wait before being granted.&#13;
&#13;
Latches are lightweight means of holding a very transient server resource, such as an address in memory.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Total Latch Wait Time (ms)</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Latches\Total Latch Wait Time (ms)&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>ms</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Total latch wait time (in milliseconds) for latch requests that had to wait in the last second.&#13;
&#13;
Threshold: this value should stay stable compared to the number of latch waits per second.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Average Lock Wait Time (ms) (_Total)</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Locks(_Total)\Average Wait Time (ms)&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>ms</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>The average amount of wait time (in milliseconds) for each lock request that resulted in a wait.&#13;
&#13;
Threshold: an average wait time longer than 500ms may indicate excessive blocking. This value should generally correlate to “Lock Waits/sec” and move up or down with it accordingly.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Lock Requests/sec (_Total)</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Locks(_Total)\Lock Requests/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>R/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of new locks and lock conversions requested from the lock manager.&#13;
&#13;
Threshold: this metric’s value should generally correspond to “Batch Requests/sec”. Values &gt; 1000 may indicate queries are accessing very large numbers of rows and may benefit from tuning.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Lock Timeouts/sec (_Total)</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Locks(_Total)\Lock Timeouts/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>T/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of lock requests that timed out. This includes requests for NOWAIT locks.&#13;
&#13;
Threshold: a value greater than zero might indicate that user queries are not completing. The lower this value is, the better.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Lock Waits/sec (_Total)</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Locks(_Total)\Lock Waits/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>W/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of lock requests that could not be satisfied immediately and required the caller to wait before being granted the lock.&#13;
&#13;
Threshold: values greater than zero indicate at least some blocking is occurring, while a value of zero can quickly eliminate blocking as a potential root-cause problem. As with “Lock Wait Time”, lock waits are not recorded by Performance Monitor until after the lock event completes.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Lock Wait Time (ms) (_Total)</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Locks(_Total)\Lock Wait Time (ms)&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>ms</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Total wait time (in milliseconds) for locks in the last second.&#13;
&#13;
Threshold: because SQL Server records a lock at the end of a locking event, remember that an application with huge transactions may have inflated lock wait times while still performing as expected. For example, an application that issues multi-million record updates might have very long lock wait times while performing exactly as it was designed.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Number of Deadlocks/sec (_Total)</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Locks(_Total)\Number of Deadlocks/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>D/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of lock requests that resulted in a deadlock.&#13;
&#13;
Threshold: since only a COMMIT, ROLLBACK, or deadlock can terminate a transaction (excluding failures or errors), this is an important value to track. Excessive deadlocking indicates a table or index design error or bad application design.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Granted Workspace Memory (KB)</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Memory Manager\Granted Workspace Memory (KB)&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Total amount of memory granted to executing processes. This memory is used for hash, sort and create index operations.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Memory Manager</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>1</type>
                            <params>1024</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Maximum Workspace Memory (KB)</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Memory Manager\Maximum Workspace Memory (KB)&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Total amount of memory available for grants to executing processes. This memory is used primarily for hash, sort and create index operations.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Memory Manager</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>1</type>
                            <params>1024</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Memory Grants Outstanding</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Memory Manager\Memory Grants Outstanding&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>O/sec</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Current number of processes that have successfully acquired a workspace memory grant</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Memory Manager</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Memory Grants Pending</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Memory Manager\Memory Grants Pending&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>P /sec</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Current number of processes waiting for a workspace memory grant.&#13;
&#13;
Threshold: numbers higher than 0 indicate a lack of memory.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Memory Manager</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Target Server Memory (KB)</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Memory Manager\Target Server Memory (KB)&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Ideal amount of memory the server is willing to consume.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Memory Manager</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>1</type>
                            <params>1024</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Total Server Memory (KB)</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Memory Manager\Total Server Memory (KB)&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>B</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Total amount of dynamic memory the server is currently consuming.&#13;
&#13;
Threshold: this value should grow until its equal to Target Server Memory, as it populates its caches and loads pages into memory. When it has finished, SQL Server is said to be in a “steady-state”. Until it is in steady-state, performance may be slow and IO may be higher.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Memory Manager</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing>
                        <step>
                            <type>1</type>
                            <params>1024</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Cache Hit Ratio (_Total)</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Plan Cache(_Total)\Cache Hit Ratio&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>%</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Ratio between cache hits and lookups.&#13;
&#13;
This deals with the procedure cache. This indicates how many query plans exist in the cache vs how many were compiled at run time.&#13;
&#13;
Threshold: this number starts very low after the system restart and should consistently stay close to 95-100%.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Plan Cache</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Cache Pages</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Plan Cache(_Total)\Cache Pages&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of 8k pages used by cache objects.&#13;
&#13;
This deals with the procedure cache and tells how many 8 KB pages are used for the procedure cache.&#13;
&#13;
Threshold: Low value of combination Cache Hit Ratio coupled with high number of Cache Pages, tells that the system might be suffering from dynamic sql issues.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Plan Cache</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Errors/sec DB Offline Errors</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Errors(DB Offline Errors)\Errors/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>E/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of errors per second which cause SQL Server to take the database offline.&#13;
&#13;
Threshold: since these are severe errors, they should occur very infrequently.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Workload</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Errors/sec Info Errors</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Errors(Info Errors)\Errors/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>E/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of info errors.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Workload</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Errors/sec Kill Connection Errors</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Errors(Kill Connection Errors)\Errors/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>E/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of errors per second which cause SQL Server to kill a user connection, respectively.&#13;
&#13;
Threshold: since these are severe errors, they should occur very infrequently.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Workload</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Errors/sec User Errors</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Errors(User Errors)\Errors/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>E/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of user errors.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Workload</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Auto-Param Attempts/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\Auto-Param Attempts/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>A/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of auto-parameterization attempts per second.&#13;
&#13;
Total should be the sum of the failed, safe, and unsafe auto-parameterizations. Auto-parameterization occurs when an instance of SQL Server tries to parameterize a Transact-SQL request by replacing some literals with parameters so that reuse of the resulting cached execution plan across multiple similar-looking requests is possible. Note that auto-parameterizations are also known as simple parameterizations in newer versions of SQL Server. This counter does not include forced parameterizations.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Statistics</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Batch Requests/Sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\Batch Requests/Sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>R/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of SQL batch requests received by server.&#13;
&#13;
This counter is highly dependent on the hardware and quality of code running on the server. The more powerful the hardware, the higher this number can be, even on poorly coded applications. A value of 1000 batch requests/sec is easily attainable though a typical 100Mbs NIC can only handle about 3000 batch requests/sec. Many other counter thresholds depend upon batch requests/sec while, in some cases, a low (or high) number does not point to poor processing power. You should frequently use this counter in combination with other counters, such as processor utilization or user connections.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Workload</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Failed Auto-Params/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\Failed Auto-Params/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>P/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of failed auto-parameterizations.&#13;
&#13;
Threshold: this should be small. Note that auto-parameterizations are also known as simple parameterizations in later versions of SQL Server.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Statistics</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Safe Auto-Params/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\Safe Auto-Params/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>P/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of safe auto-parameterizations.&#13;
&#13;
Safe refers to a determination that a cached execution plan can be shared between different similar-looking Transact-SQL statements. SQL Server makes many auto-parameterization attempts some of which turn out to be safe and others fail. Note that auto-parameterizations are also known as simple parameterizations in later versions of SQL Server. This does not include forced parameterizations.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Statistics</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: SQL Attention Rate/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\SQL Attention Rate&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>A/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of attentions per second.&#13;
&#13;
An attention is a request by the client to end the currently running request or the query timeouts occurring per second.&#13;
&#13;
Threshold: this number should be as low as possible. A high sustained number indicates frequent query timeout or end-user cancellation of queries.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Workload</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: SQL Compilations/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\SQL Compilations/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>C/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of SQL compilations.&#13;
&#13;
Threshold: the lower this value is the better. High values often indicate excessive adhoc querying and should be as low as possible. If excessive adhoc querying is happening, try rewriting the queries as procedures or invoke the queries using sp_executeSQL. When rewriting isn’t possible, consider using a plan guide or setting the database to parameterization forced mode.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Workload</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: SQL Re-Compilations/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\SQL Re-Compilations/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>R-C/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of SQL re-compiles.&#13;
&#13;
Threshold: this number should be at or near zero, since recompiles can cause deadlocks and exclusive compile locks. This counter’s value should follow in proportion to “Batch Requests/sec” and “SQL Compilations/sec”. This needs to be nil in your system as much as possible.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Workload</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Unsafe Auto-Params/sec</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\Unsafe Auto-Params/sec&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>P/s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Number of unsafe auto-parameterizations.&#13;
&#13;
For example, the query has some characteristics that prevent the cached plan from being shared. These are designated as unsafe. This does not count the number of forced parameterizations.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Statistics</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Longest Transaction RunningTime</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>perf_counter[&quot;\{$SQLINSTANCE0}:Transactions\Longest Transaction Running Time&quot;]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>s</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>The longest running time of any transaction in seconds.&#13;
&#13;
This counter only shows activity when the database is under read committed snapshot isolation level. It does not log any activity if the database is in any other isolation level.&#13;
&#13;
Threshold: when blocking is high, check this counter to see if transactions are open for long periods of time.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Users And Locks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
                <item>
                    <name>SQL Instance {$SQLINSTANCENAME0} SQL Server: Service State</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>service.info[{$SQLINSTANCESERVICE0}]</key>
                    <delay>30s</delay>
                    <history>90d</history>
                    <trends>365d</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Monitors Microsoft SQL Server service state.&#13;
&#13;
Windows service status returned values:&#13;
0 - service running;&#13;
1 - service paused;&#13;
2 - service starting (start pending);&#13;
3 - service pausing (pause pending);&#13;
4 - service starting after pause (continue pending);&#13;
5 - service stopping (stop pending);&#13;
6 - service stopped;&#13;
7 - service state unknown;&#13;
255 - unable to get current service state.</description>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>SQL Server Services</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Windows service state</name>
                    </valuemap>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <master_item/>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>SQL Server Databases Discovery</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>databases.mssql.discovery</key>
                    <delay>300s</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>2</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>14d</lifetime>
                    <description>SQL Server database discovery with additional scripts lets discover Microsoft SQL Server databases.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Number of Connections</name>
                            <type>7</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>data.mssql.discovery[DBCONN,{#DBNAME}]</key>
                            <delay>30s</delay>
                            <history>90d</history>
                            <trends>365d</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Connections</units>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Number of database connections</description>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>SQL Database</name>
                                </application_prototype>
                            </application_prototypes>
                            <master_item_prototype/>
                        </item_prototype>
                        <item_prototype>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Status</name>
                            <type>7</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>data.mssql.discovery[DBSTATUS,{#DBNAME}]</key>
                            <delay>30s</delay>
                            <history>45d</history>
                            <trends>365d</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units/>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>0 = ONLINE &#13;
1 = RESTORING &#13;
2 = RECOVERING : SQL Server 2008 through SQL Server 2017&#13;
3 = RECOVERY_PENDING : SQL Server 2008 through SQL Server 2017&#13;
4 = SUSPECT &#13;
5 = EMERGENCY : SQL Server 2008 through SQL Server 2017&#13;
6 = OFFLINE : SQL Server 2008 through SQL Server 2017&#13;
7 = COPYING : Azure SQL Database Active Geo-Replication &#13;
10 = OFFLINE_SECONDARY : Azure SQL Database Active Geo-Replication &#13;
&#13;
Note: For Always On databases, query the database_state or database_state_desc columns of sys.dm_hadr_database_replica_states.</description>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap>
                                <name>SQL Database status</name>
                            </valuemap>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>SQL Database</name>
                                </application_prototype>
                            </application_prototypes>
                            <master_item_prototype/>
                        </item_prototype>
                        <item_prototype>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Active Transactions</name>
                            <type>7</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Active Transactions&quot;]</key>
                            <delay>300s</delay>
                            <history>45d</history>
                            <trends>365d</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>Transactions</units>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Number of active transactions for the database.</description>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>SQL Database</name>
                                </application_prototype>
                            </application_prototypes>
                            <master_item_prototype/>
                        </item_prototype>
                        <item_prototype>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Data File(s) Size (KB)</name>
                            <type>7</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Data File(s) Size (KB)&quot;]</key>
                            <delay>30s</delay>
                            <history>90d</history>
                            <trends>365d</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>B</units>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Cumulative size (KB) of all the data files in the database including any automatic growth. Monitoring this counter is useful, for example, for determining the correct size of tempdb.</description>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>SQL Database</name>
                                </application_prototype>
                            </application_prototypes>
                            <master_item_prototype/>
                        </item_prototype>
                        <item_prototype>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Log Bytes Flushed/sec</name>
                            <type>7</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Log Bytes Flushed/sec&quot;]</key>
                            <delay>30s</delay>
                            <history>90d</history>
                            <trends>365d</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>F/s</units>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Total number of log bytes flushed.&#13;
&#13;
Useful for determining trends and utilization of the transaction log</description>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>SQL Database</name>
                                </application_prototype>
                            </application_prototypes>
                            <master_item_prototype/>
                        </item_prototype>
                        <item_prototype>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Log File(s) Size (KB)</name>
                            <type>7</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Log File(s) Size (KB)&quot;]</key>
                            <delay>30s</delay>
                            <history>90d</history>
                            <trends>365d</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>B</units>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The cumulative size of all the log files in the database.&#13;
&#13;
Useful for determining trends and utilization of the transaction log.</description>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>SQL Database</name>
                                </application_prototype>
                            </application_prototypes>
                            <master_item_prototype/>
                        </item_prototype>
                        <item_prototype>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Log File(s) Used Size (KB)</name>
                            <type>7</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Log File(s) Used Size (KB)&quot;]</key>
                            <delay>30s</delay>
                            <history>90d</history>
                            <trends>365d</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>B</units>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The cumulative used size of all the log files in the database.</description>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>SQL Database</name>
                                </application_prototype>
                            </application_prototypes>
                            <master_item_prototype/>
                        </item_prototype>
                        <item_prototype>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Log Flushes/sec</name>
                            <type>7</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Log Flushes/sec&quot;]</key>
                            <delay>30s</delay>
                            <history>90d</history>
                            <trends>365d</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>F/s</units>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Number of log flushes.</description>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>SQL Database</name>
                                </application_prototype>
                            </application_prototypes>
                            <master_item_prototype/>
                        </item_prototype>
                        <item_prototype>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Log Flush Waits/sec</name>
                            <type>7</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Log Flush Waits/sec&quot;]</key>
                            <delay>30s</delay>
                            <history>90d</history>
                            <trends>365d</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>W/s</units>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Number of commits per second waiting for the log flush.&#13;
&#13;
Effectively, the number of times per second that SQL Server must wait for pages to be written to the transaction log.</description>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>SQL Database</name>
                                </application_prototype>
                            </application_prototypes>
                            <master_item_prototype/>
                        </item_prototype>
                        <item_prototype>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Log Flush Wait Time</name>
                            <type>7</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Log Flush Wait Time&quot;]</key>
                            <delay>30s</delay>
                            <history>90d</history>
                            <trends>365d</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>ms</units>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Total wait time (in milliseconds) to flush the log.&#13;
&#13;
On an AlwaysOn secondary database, this value indicates the wait time for log records to be hardened to disk.</description>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>SQL Database</name>
                                </application_prototype>
                            </application_prototypes>
                            <master_item_prototype/>
                        </item_prototype>
                        <item_prototype>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Log Growths</name>
                            <type>7</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Log Growths&quot;]</key>
                            <delay>1h</delay>
                            <history>45d</history>
                            <trends>365d</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units/>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Total number of times the transaction log for the database has been expanded.&#13;
&#13;
Each time the transaction log grows, all user activity must halt until the log growth completes. Therefore, you want log growths to occur during predefined maintenance windows rather than during general working hours.</description>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>SQL Database</name>
                                </application_prototype>
                            </application_prototypes>
                            <master_item_prototype/>
                        </item_prototype>
                        <item_prototype>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Log Shrinks</name>
                            <type>7</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Log Shrinks&quot;]</key>
                            <delay>1h</delay>
                            <history>45d</history>
                            <trends>365d</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units/>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Total number of times the transaction log for the database has been shrunk.</description>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>SQL Database</name>
                                </application_prototype>
                            </application_prototypes>
                            <master_item_prototype/>
                        </item_prototype>
                        <item_prototype>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Log Truncations</name>
                            <type>7</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Log Truncations&quot;]</key>
                            <delay>1h</delay>
                            <history>45d</history>
                            <trends>365d</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units/>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Number of times the transaction log has been shrunk.&#13;
&#13;
Truncations should happen during log backups or, on databases in simple recovery mode, at checkpoint or the time period specified by recovery interval.</description>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>SQL Database</name>
                                </application_prototype>
                            </application_prototypes>
                            <master_item_prototype/>
                        </item_prototype>
                        <item_prototype>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Percent Log Used</name>
                            <type>7</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Percent Log Used&quot;]</key>
                            <delay>30s</delay>
                            <history>90d</history>
                            <trends>365d</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>%</units>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Percentage of space in the log that is in use.&#13;
&#13;
Since all work in an OLTP database stops until writes can occur to the transaction log, it’s a very good idea to ensure that the log never fills completely. &#13;
&#13;
Threshold: the recommendation to keep the log under 80% full.</description>
                            <inventory_link>0</inventory_link>
                            <applications/>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <application_prototypes>
                                <application_prototype>
                                    <name>SQL Database</name>
                                </application_prototype>
                            </application_prototypes>
                            <master_item_prototype/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Log Flush Waits/sec&quot;].last(0)}&gt;0</expression>
                            <recovery_mode>0</recovery_mode>
                            <recovery_expression/>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Log Flush Waits/sec {ITEM.LASTVALUE}</name>
                            <correlation_mode>0</correlation_mode>
                            <correlation_tag/>
                            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-databases-object?view=sql-server-2016</url>
                            <status>0</status>
                            <priority>1</priority>
                            <description>Number of commits per second waiting for the log flush.&#13;
&#13;
Effectively, the number of times per second that SQL Server must wait for pages to be written to the transaction log.</description>
                            <type>0</type>
                            <manual_close>1</manual_close>
                            <dependencies/>
                            <tags/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Log Flush Wait Time&quot;].last(0)}&gt;100</expression>
                            <recovery_mode>0</recovery_mode>
                            <recovery_expression/>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Log Flush Wait Time {ITEM.LASTVALUE}</name>
                            <correlation_mode>0</correlation_mode>
                            <correlation_tag/>
                            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-databases-object?view=sql-server-2016</url>
                            <status>0</status>
                            <priority>1</priority>
                            <description>Total wait time (in milliseconds) to flush the log. On an AlwaysOn secondary database, this value indicates the wait time for log records to be hardened to disk.</description>
                            <type>0</type>
                            <manual_close>0</manual_close>
                            <dependencies/>
                            <tags/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Log Growths&quot;].diff(0)}&gt;1</expression>
                            <recovery_mode>0</recovery_mode>
                            <recovery_expression/>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Log Growths &gt; 0</name>
                            <correlation_mode>0</correlation_mode>
                            <correlation_tag/>
                            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-databases-object?view=sql-server-2016</url>
                            <status>0</status>
                            <priority>1</priority>
                            <description>Total number of times the transaction log for the database has been expanded.&#13;
&#13;
Each time the transaction log grows, all user activity must halt until the log growth completes. Therefore, you want log growths to occur during predefined maintenance windows rather than during general working hours.</description>
                            <type>0</type>
                            <manual_close>0</manual_close>
                            <dependencies/>
                            <tags/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Log Shrinks&quot;].change(86400)}=1</expression>
                            <recovery_mode>0</recovery_mode>
                            <recovery_expression/>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Log Was Shrinked In The Last 24 Hours</name>
                            <correlation_mode>0</correlation_mode>
                            <correlation_tag/>
                            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-databases-object?view=sql-server-2016</url>
                            <status>0</status>
                            <priority>1</priority>
                            <description>Total number of times the transaction log for the database has been shrunk.</description>
                            <type>0</type>
                            <manual_close>1</manual_close>
                            <dependencies/>
                            <tags/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Databases({#DBNAME})\Percent Log Used&quot;].last(0)}&gt;80</expression>
                            <recovery_mode>0</recovery_mode>
                            <recovery_expression/>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Percent Log Used {ITEM.LASTVALUE}</name>
                            <correlation_mode>0</correlation_mode>
                            <correlation_tag/>
                            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-databases-object?view=sql-server-2016</url>
                            <status>0</status>
                            <priority>2</priority>
                            <description>Percentage of space in the log that is in use.&#13;
&#13;
Since all work in an OLTP database stops until writes can occur to the transaction log, it’s a very good idea to ensure that the log never fills completely. Hence, the recommendation to keep the log under 80% full.</description>
                            <type>0</type>
                            <manual_close>0</manual_close>
                            <dependencies/>
                            <tags/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template SQL Server Instance 0 DE Baseline:data.mssql.discovery[DBSTATUS,{#DBNAME}].last(0)}&lt;&gt;0</expression>
                            <recovery_mode>0</recovery_mode>
                            <recovery_expression/>
                            <name>SQL Instance {$SQLINSTANCENAME0} Database {#DBNAME}: Status {ITEM.LASTVALUE}</name>
                            <correlation_mode>0</correlation_mode>
                            <correlation_tag/>
                            <url>https://docs.microsoft.com/en-us/sql/relational-databases/databases/database-states?view=sql-server-2017</url>
                            <status>0</status>
                            <priority>4</priority>
                            <description>0 = Offline&#13;
1 = Restoring&#13;
2 = Recovering&#13;
3 = Recovery pending&#13;
4 = Suspect&#13;
5 = Emergency&#13;
6 = Offline&#13;
7 = Copying (Azure SQL Database Active Geo-Replication)&#13;
10 = Offline secondary (Azure SQL Database Active Geo-Replication)&#13;
&#13;
Note: For Always On databases, query the database_state or database_state_desc columns of sys.dm_hadr_database_replica_states.</description>
                            <type>0</type>
                            <manual_close>1</manual_close>
                            <dependencies/>
                            <tags/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                    <jmx_endpoint/>
                </discovery_rule>
            </discovery_rules>
            <httptests/>
            <macros>
                <macro>
                    <macro>{$SQLINSTANCE0}</macro>
                    <value>SQLServer</value>
                </macro>
                <macro>
                    <macro>{$SQLINSTANCEEVENTLOG0}</macro>
                    <value>MSSQLSERVER</value>
                </macro>
                <macro>
                    <macro>{$SQLINSTANCENAME0}</macro>
                    <value>[Instance display name]</value>
                </macro>
                <macro>
                    <macro>{$SQLINSTANCESERVICE0}</macro>
                    <value>MSSQLSERVER</value>
                </macro>
            </macros>
            <templates/>
            <screens/>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Locks(_Total)\Average Wait Time (ms)&quot;].last(,0)}&gt;500</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Avg Wait Time (ms) {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-locks-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>2</priority>
            <description>The average amount of wait time (in milliseconds) for each lock request that resulted in a wait.&#13;
&#13;
Threshold: an average wait time longer than 500ms may indicate excessive blocking. This value should generally correlate to “Lock Waits/sec” and move up or down with it accordingly.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Buffer cache hit ratio&quot;].last()}&lt;85</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Buffer cache hit ratio {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-buffer-manager-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>3</priority>
            <description>Percentage of pages that were found in the buffer pool without having to incur a read from disk.&#13;
&#13;
The ratio is the total number of cache hits divided by the total number of cache lookups over the last few thousand page accesses. After a long period of time, the ratio moves very little. Because reading from the cache is much less expensive than reading from disk, you want this ratio to be high. Generally, you can increase the buffer cache hit ratio by increasing the amount of memory available to SQL Server or by using the buffer pool extension feature.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Buffer cache hit ratio&quot;].last()}&lt;90</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Buffer cache hit ratio {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-buffer-manager-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>2</priority>
            <description>Percentage of pages that were found in the buffer pool without having to incur a read from disk.&#13;
&#13;
The ratio is the total number of cache hits divided by the total number of cache lookups over the last few thousand page accesses. After a long period of time, the ratio moves very little. Because reading from the cache is much less expensive than reading from disk, you want this ratio to be high. Generally, you can increase the buffer cache hit ratio by increasing the amount of memory available to SQL Server or by using the buffer pool extension feature.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies>
                <dependency>
                    <name>SQL Instance {$SQLINSTANCENAME0}: Buffer cache hit ratio {ITEM.LASTVALUE}</name>
                    <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Buffer cache hit ratio&quot;].last()}&lt;85</expression>
                    <recovery_expression/>
                </dependency>
            </dependencies>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:eventlog[Application,,&quot;Warning|Error|Critical&quot;,&quot;{$SQLINSTANCEEVENTLOG0}&quot;,&quot;2516|2517|3041|3134|3266|3313|3314|3315|3316|3417|3431|3443|3456|5173|5176|9004|14420|17208|17557|18204|18210|18273|35268|35269&quot;,,skip].logeventid(2516|2517|3041|3134|3266|3313|3314|3315|3316|3417|3431|3443|3456|5173|5176|9004|14420|17208|17557|18204|18210|18273|35268|35269)}=1 and {Template SQL Server Instance 0 DE Baseline:eventlog[Application,,&quot;Warning|Error|Critical&quot;,&quot;{$SQLINSTANCEEVENTLOG0}&quot;,&quot;2516|2517|3041|3134|3266|3313|3314|3315|3316|3417|3431|3443|3456|5173|5176|9004|14420|17208|17557|18204|18210|18273|35268|35269&quot;,,skip].nodata(86400)}=0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Database Backup errors</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://support.microsoft.com/en-us/help/224071/troubleshooting-sql-server-backup-and-restore-operations</url>
            <status>0</status>
            <priority>3</priority>
            <description>Microsoft SQL Server backup errors from Microsoft Windows Event Viewer.&#13;
&#13;
Event IDs are selected and reviewed from sys.messages table.&#13;
&#13;
SELECT *&#13;
FROM sys.messages&#13;
WHERE [text] LIKE '%backup%'&#13;
	AND language_id = 1033&#13;
	AND is_event_logged = 1&#13;
	AND severity &lt;&gt; 10&#13;
ORDER BY message_id ASC&#13;
&#13;
Application (program) events. The Application log contains events logged by applications or programs. Events are classified as error, warning, or information, depending on the severity of the event. An error is a significant problem, such as loss of data. A warning is an event that isn't necessarily significant, but might indicate a possible future problem. An information event describes the successful operation of a program, driver, or service.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:eventlog[Application,,&quot;Warning|Error|Critical&quot;,&quot;{$SQLINSTANCEEVENTLOG0}&quot;,,,skip].last(,0)}&lt;&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Database Engine errors</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>3</priority>
            <description>Microsoft SQL Server errors (Warning, Error or Critical) from Microsoft Windows Event Viewer.&#13;
&#13;
Application (program) events. The Application log contains events logged by applications or programs. Events are classified as error, warning, or information, depending on the severity of the event. An error is a significant problem, such as loss of data. A warning is an event that isn't necessarily significant, but might indicate a possible future problem. An information event describes the successful operation of a program, driver, or service.</description>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:eventlog[Application,,&quot;Warning|Error|Critical&quot;,&quot;{$SQLINSTANCEEVENTLOG0}&quot;,^(211|427|602|603|606|608|610|806|823|824|825|829|832|855|856)$,,skip].logeventid(211|427|602|603|606|608|610|806|823|824|825|829|832|855|856)}=1 and {Template SQL Server Instance 0 DE Baseline:eventlog[Application,,&quot;Warning|Error|Critical&quot;,&quot;{$SQLINSTANCEEVENTLOG0}&quot;,^(211|427|602|603|606|608|610|806|823|824|825|829|832|855|856)$,,skip].nodata(345600)}=0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Database integrity errors Part 1</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description>Microsoft SQL Server database integrity errors from Microsoft Windows Event Viewer.&#13;
&#13;
Application (program) events. The Application log contains events logged by applications or programs. Events are classified as error, warning, or information, depending on the severity of the event. An error is a significant problem, such as loss of data. A warning is an event that isn't necessarily significant, but might indicate a possible future problem. An information event describes the successful operation of a program, driver, or service.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:eventlog[Application,,&quot;Warning|Error|Critical&quot;,&quot;{$SQLINSTANCEEVENTLOG0}&quot;,^(1509|1522|3301|3302|3624|3864|4134|5029|5180|8440|8443|8444|8461|8646|9003|9015|9100|9655|9657|17065|17066|17067)$,,skip].logeventid(1509|1522|3301|3302|3624|3864|4134|5029|5180|8440|8443|8444|8461|8646|9003|9015|9100|9655|9657|17065|17066|17067)}=1 and {Template SQL Server Instance 0 DE Baseline:eventlog[Application,,&quot;Warning|Error|Critical&quot;,&quot;{$SQLINSTANCEEVENTLOG0}&quot;,^(1509|1522|3301|3302|3624|3864|4134|5029|5180|8440|8443|8444|8461|8646|9003|9015|9100|9655|9657|17065|17066|17067)$,,skip].nodata(345600)}=0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Database integrity errors Part 2</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description>Microsoft SQL Server database integrity errors from Microsoft Windows Event Viewer.&#13;
&#13;
Application (program) events. The Application log contains events logged by applications or programs. Events are classified as error, warning, or information, depending on the severity of the event. An error is a significant problem, such as loss of data. A warning is an event that isn't necessarily significant, but might indicate a possible future problem. An information event describes the successful operation of a program, driver, or service.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:SQL Errors(DB Offline Errors)\Errors/sec&quot;].last(0)}&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Errors/sec DB Offline Errors {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-sql-errors-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>3</priority>
            <description>Number of errors per second which cause SQL Server to take the database offline.&#13;
&#13;
Threshold: since these are severe errors, they should occur very infrequently.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:SQL Errors(Info Errors)\Errors/sec&quot;].last(0)}&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Errors/sec Info Errors {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-sql-errors-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>1</priority>
            <description>Number of info errors.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:SQL Errors(Kill Connection Errors)\Errors/sec&quot;].last(0)}&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Errors/sec Kill Connection Errors {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-sql-errors-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>2</priority>
            <description>Number of errors per second which cause SQL Server to kill a user connection, respectively.&#13;
&#13;
Threshold: since these are severe errors, they should occur very infrequently.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:SQL Errors(User Errors)\Errors/sec&quot;].last(0)}&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Errors/sec User Errors {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-sql-errors-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>1</priority>
            <description>Number of user errors.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>({Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Forwarded Records/sec&quot;].avg(604800,0)} / {Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\Batch Requests/Sec&quot;].avg(604800,0)})&gt;0.1</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Forwarded Records/sec / Batch Records/sec avg value &gt; 10% in the last 7 days</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Identifies use of a pointer which has been created when variable length columns have caused a row to move to a new page in a heap.&#13;
&#13;
Threshold: &lt; 10 Forwarded Records/sec per 100 Batch Requests/sec.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Free List Stalls/sec&quot;].last()}&gt;2</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Free List Stalls/sec {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-buffer-manager-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>2</priority>
            <description>Indicates the number of requests per second that had to wait for a free page (no buffers are available.). &#13;
&#13;
Threshold: any value above 2 means SQL Server needs more memory.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>({Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Full Scans/sec&quot;].avg(604800,0)} / {Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Index Searches/sec&quot;].avg(604800,0)})&gt;0.001</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Full Scans/sec / Index Searches/sec {ITEM.LASTVALUE} %</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Threshold: &lt; 1 Full Scan/sec per 1000 Index Searches/sec.&#13;
&#13;
The threshold recommendation is strictly for OLTP workloads.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Lazy Writes/Sec&quot;].last()}&gt;20</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Lazy Writes/Sec {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-buffer-manager-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>2</priority>
            <description>Number of buffers written by buffer manager's lazy writer.&#13;
&#13;
The lazy writer is a system process that flushes out batches of dirty, aged buffers (buffers that contain changes that must be written back to disk before the buffer can be reused for a different page) and makes them available to user processes. The lazy writer eliminates the need to perform frequent checkpoints in order to create available buffers.&#13;
&#13;
Threshold: lower is better with zero being ideal. When greater than 20, this counter indicates a need for more memory.</description>
            <type>0</type>
            <manual_close>0</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Locks(_Total)\Lock Requests/sec&quot;].last(,0)}&gt;1000</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Lock Requests/sec {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-locks-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>1</priority>
            <description>Number of new locks and lock conversions requested from the lock manager.&#13;
&#13;
Threshold: this metric’s value should generally correspond to “Batch Requests/sec”. Values &gt; 1000 may indicate queries are accessing very large numbers of rows and may benefit from tuning.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Locks(_Total)\Lock Timeouts/sec&quot;].last(,0)}&gt;1</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Lock Timeouts/sec (_Total) {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-locks-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>1</priority>
            <description>Number of lock requests that timed out. This includes requests for NOWAIT locks.&#13;
&#13;
Threshold: a value greater than zero might indicate that user queries are not completing. The lower this value is, the better.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Locks(_Total)\Lock Waits/sec&quot;].last(0)}&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Lock Waits/sec {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-locks-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>1</priority>
            <description>Number of lock requests that could not be satisfied immediately and required the caller to wait before being granted the lock.&#13;
&#13;
Threshold: values greater than zero indicate at least some blocking is occurring, while a value of zero can quickly eliminate blocking as a potential root-cause problem. As with “Lock Wait Time”, lock waits are not recorded by Performance Monitor until after the lock event completes.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:General Statistics\Logins/sec&quot;].last(0)}&gt;2</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Logins/sec {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-general-statistics-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>2</priority>
            <description>Total number of logins started per second.&#13;
&#13;
This does not include pooled connections.&#13;
&#13;
Threshold: any value over 2 may indicate insufficient connection pooling.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:General Statistics\Logouts/sec&quot;].last(0)}&gt;2</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Logouts/sec {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-general-statistics-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>2</priority>
            <description>Total number of logouts started per second.&#13;
&#13;
Threshold: any value over 2 may indicate insufficient connection pooling.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Transactions\Longest Transaction Running Time&quot;].last(,0)}&gt;3600</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Longest Transaction Running Time {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-transactions-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>1</priority>
            <description>The longest running time of any transaction in seconds.&#13;
&#13;
This counter only shows activity when the database is under read committed snapshot isolation level. It does not log any activity if the database is in any other isolation level.&#13;
&#13;
Threshold: when blocking is high, check this counter to see if transactions are open for long periods of time.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:General Statistics\Processes blocked&quot;].last(300,0)}&gt;1</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: More than 1 processes blocked over 300 sec period</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-general-statistics-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>3</priority>
            <description>Number of currently blocked processes.&#13;
&#13;
Too many blocked processes in SQL Server, more than 1 processes blocked over 300 sec period.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:General Statistics\Processes blocked&quot;].last(60,0)}&gt;5</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: More than 5 processes blocked over 60 sec period</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-general-statistics-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>3</priority>
            <description>Number of currently blocked processes.&#13;
&#13;
Too many blocked processes in SQL Server, more than 5 processes blocked over 60 sec period.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Locks(_Total)\Number of Deadlocks/sec&quot;].last(,0)}&gt;1</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Number of Deadlocks/sec (_Total) {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-locks-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>2</priority>
            <description>Number of lock requests that resulted in a deadlock.&#13;
&#13;
Threshold: since only a COMMIT, ROLLBACK, or deadlock can terminate a transaction (excluding failures or errors), this is an important value to track. Excessive deadlocking indicates a table or index design error or bad application design.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Page Life Expectancy&quot;].last(,0)}&lt;300</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Page Life Expectancy {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-buffer-manager-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>2</priority>
            <description>Number of seconds a page will stay in the buffer pool without references.&#13;
&#13;
Tells, on average, how many seconds SQL Server expects a data page to stay in cache.&#13;
&#13;
Threshold: the target on an OLTP system should be at least 300 (5 min). When under 300, this may indicate poor index design (leading to increased disk I/O and less effective use of memory) or, simply, a potential shortage of memory. However, this threshold is from 2005/2006, when the average amount of memory on a server was much lower.&#13;
&#13;
For in-depth threshold calculations read here https://sqlperformance.com/2014/10/sql-performance/knee-jerk-page-life-expectancy and https://www.sqlskills.com/blogs/paul/page-life-expectancy-isnt-what-you-think/</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>({Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Page Lookups/sec&quot;].avg(604800,0)} / {Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\Batch Requests/Sec&quot;].avg(604800,0)})&gt;0.85</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Page Lookups/sec / Batch Requests/sec avg value &gt; 100% in the last 7 days</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Number of requests to find a page in the buffer pool.&#13;
&#13;
Threshold: when the ratio of batch requests to page lookups crests 100, you may have inefficient execution plans or too many adhoc queries.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Page Reads/sec&quot;].last(0)}&gt;90</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Page Reads/sec {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-buffer-manager-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>2</priority>
            <description>Number of physical database page reads issued.&#13;
&#13;
This statistic displays the total number of physical page reads across all databases. Because physical I/O is expensive, you may be able to minimize the cost, either by using a larger data cache, intelligent indexes, and more efficient queries, or by changing the database design.&#13;
&#13;
Threshold: normal OLTP workloads support 80 – 90 per second, but higher values may be a yellow flag for poor indexing or insufficient memory.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>({Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Page Splits/sec&quot;].avg(604800,0)} / {Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\Batch Requests/Sec&quot;].avg(604800,0)})&gt;0.2</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Page Splits/sec / Batch Requests/sec avg value &gt; 20% in the last 7 days</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Number of page splits per second that occur as a result of overflowing index pages.&#13;
&#13;
To avoid page splits, review table and index design to reduce non-sequential inserts or implement fillfactor and pad_index to leave more empty space per page. NOTE: A high value for this counter is not bad in situations where many new pages are being created, since it includes new page allocations.&#13;
&#13;
Threshold: should be as low as possible. &lt; 20 Page Splits/sec per 100 Batch Requests/sec.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Page Writes/sec&quot;].last(0)}&gt;90</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Page Writes/sec {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-buffer-manager-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>2</priority>
            <description>Number of physical database page writes issued.&#13;
&#13;
Threshold: normal OLTP workloads support 80 – 90 per second. Values over 90 should be crossed checked with “lazy writer/sec” and “checkpoint” counters. If the other counters are also high, then it may indicate insufficient memory.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>({Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Readahead Pages/sec&quot;].avg(900,0)} / {Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Page Reads/sec&quot;].avg(900,0)})&gt;0.2</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Readahead Pages/sec / Page Reads/sec avg value &gt; 20% in the last 15 min</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Number of pages read in anticipation of use.&#13;
&#13;
Threshold: if this value is makes up even a sizeable minority of total Page Reads/sec (say, greater than 20% of total page reads), you may have too many physical reads occurring.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\SQL Attention Rate&quot;].last(0)}&gt;0</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: SQL Attention Rate/sec {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-sql-statistics-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>1</priority>
            <description>Number of attentions per second.&#13;
&#13;
An attention is a request by the client to end the currently running request or the query timeouts occurring per second.&#13;
&#13;
Threshold: this number should be as low as possible. A high sustained number indicates frequent query timeout or end-user cancellation of queries.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>({Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\SQL Compilations/sec&quot;].avg(604800,0)} / {Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\Batch Requests/Sec&quot;].avg(604800,0)})&gt;0.1</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: SQL Compilations/sec / Batch Requests/sec avg value &gt; 10% in the last 7 days</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Number of times that Transact-SQL compilations occurred, per second (including recompiles). The lower this value is the better. High values often indicate excessive adhoc querying and should be as low as possible. If excessive adhoc querying is happening, try rewriting the queries as procedures or invoke the queries using sp_executeSQL. When rewriting isn’t possible, consider using a plan guide or setting the database to parameterization forced mode.&#13;
&#13;
Threshold: SQL Compilations/sec &lt; 10% of the number of Batch Requests/sec.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>({Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\SQL Re-Compilations/sec&quot;].avg(3600,0)} / {Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\SQL Compilations/sec&quot;].avg(3600,0)})&gt;0.1</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: SQL Re-Compilations/sec / SQL Compilations/sec avg value &gt; 10% in the last 60 min</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Number of times, per second, that Transact-SQL objects attempted to be executed but had to be recompiled before completion. This number should be at or near zero, since recompiles can cause deadlocks and exclusive compile locks. This counter’s value should follow in proportion to “Batch Requests/sec” and “SQL Compilations/sec”. This needs to be nil in your system as much as possible.&#13;
&#13;
Threshold: SQL Re-Compilations/sec &lt; 10% of the number of SQL Compilations/sec</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>({Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Latches\Total Latch Wait Time (ms)&quot;].avg(900,0)} / {Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Latches\Latch Waits/sec&quot;].avg(900,0)})&gt;0.1</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Total Latch Wait Time / Latch Waits/Sec avg value &gt; 10% in the last 15 min</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>Number of latch requests that could not be granted immediately and had to wait before being granted.&#13;
&#13;
Latches are lightweight means of holding a very transient server resource, such as an address in memory.&#13;
&#13;
Threshold: Total Latch Wait Time / Latch Waits Sec &lt; 10</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Workfiles Created/sec&quot;].last(0)}&gt;20</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Workfiles Created/sec {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-access-methods-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>1</priority>
            <description>Number of work files created per second. For example, work files could be used to store temporary results for hash joins and hash aggregates.&#13;
&#13;
Threshold: high values can indicate thrash in tempdb and poorly coded queries.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Worktables Created/sec&quot;].last(0)}&gt;20</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Worktables Created/sec {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-access-methods-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>1</priority>
            <description>Number of work tables created per second. For example, work tables could be used to store temporary results for query spool, LOB variables, XML variables, and cursors.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Worktables From Cache Ratio&quot;].last(,0)}&lt;90</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0}: Worktables From Cache Ratio {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url>https://docs.microsoft.com/en-us/sql/2014/relational-databases/performance-monitor/sql-server-access-methods-object?view=sql-server-2016</url>
            <status>0</status>
            <priority>2</priority>
            <description>Percentage of work tables created where the initial two pages of the work table were not allocated but were immediately available from the work table cache.&#13;
&#13;
Threshold: a value less than 90% may indicate insufficient memory, since execution plans are being dropped, or may indicate, on 32-bit systems, the need for an upgrade to a 64-bit system.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
        <trigger>
            <expression>{Template SQL Server Instance 0 DE Baseline:service.info[{$SQLINSTANCESERVICE0}].last(0)}&gt;0 and {Template SQL Server Instance 0 DE Baseline:service.info[{$SQLINSTANCESERVICE0}].last(0)}&lt;255</expression>
            <recovery_mode>0</recovery_mode>
            <recovery_expression/>
            <name>SQL Instance {$SQLINSTANCENAME0} SQL Server: Service State {ITEM.LASTVALUE}</name>
            <correlation_mode>0</correlation_mode>
            <correlation_tag/>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Monitors Microsoft SQL Server service state.&#13;
&#13;
Windows service status returned values:&#13;
0 - service running;&#13;
1 - service paused;&#13;
2 - service starting (start pending);&#13;
3 - service pausing (pause pending);&#13;
4 - service starting after pause (continue pending);&#13;
5 - service stopping (stop pending);&#13;
6 - service stopped;&#13;
7 - service state unknown;&#13;
255 - unable to get current service state.</description>
            <type>0</type>
            <manual_close>1</manual_close>
            <dependencies/>
            <tags/>
        </trigger>
    </triggers>
    <graphs>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: Cache Hit Ratio and Worktables From Cache</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Worktables From Cache Ratio&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Plan Cache(_Total)\Cache Hit Ratio&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: Cache Pages and Database Pages</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Plan Cache(_Total)\Cache Pages&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Database Pages&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: Forwarded Records and  Batch Requests 10:100</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>0.0000</yaxismax>
            <show_work_period>0</show_work_period>
            <show_triggers>0</show_triggers>
            <type>3</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Forwarded Records/sec&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\Batch Requests/Sec&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: Index Searches and Full Scans 1:1000</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>0.0000</yaxismax>
            <show_work_period>0</show_work_period>
            <show_triggers>0</show_triggers>
            <type>3</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Full Scans/sec&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Index Searches/sec&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: Latch Waits and Latch Total Wait Time 10:100</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>0.0000</yaxismax>
            <show_work_period>0</show_work_period>
            <show_triggers>0</show_triggers>
            <type>3</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Latches\Latch Waits/sec&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Latches\Total Latch Wait Time (ms)&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: Latch Wait Time and Waits</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Latches\Average Latch Wait Time (ms)&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Latches\Latch Waits/sec&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: Lock and Batch Requests</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Locks(_Total)\Lock Requests/sec&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\Batch Requests/Sec&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: Lock Average Wait Time and Waits</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Locks(_Total)\Lock Waits/sec&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Locks(_Total)\Average Wait Time (ms)&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: Logins and Logouts</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:General Statistics\Logins/sec&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:General Statistics\Logouts/sec&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: Page Lookups and Batch Requests 1:100</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>0.0000</yaxismax>
            <show_work_period>0</show_work_period>
            <show_triggers>0</show_triggers>
            <type>3</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Page Lookups/sec&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\Batch Requests/Sec&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: Page Reads and Writes</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Page Reads/sec&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Page Writes/sec&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: Page Splits and Batch Requests 20:100</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>0.0000</yaxismax>
            <show_work_period>0</show_work_period>
            <show_triggers>0</show_triggers>
            <type>3</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Access Methods\Page Splits/sec&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\Batch Requests/Sec&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: Processes Blocked and Deadlocks</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Locks(_Total)\Number of Deadlocks/sec&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:General Statistics\Processes blocked&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}:  Re-/Compilations and Batch Requests 1:10:100</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>0.0000</yaxismax>
            <show_work_period>0</show_work_period>
            <show_triggers>0</show_triggers>
            <type>3</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>FFFFFF</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\SQL Re-Compilations/sec&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\SQL Compilations/sec&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\Batch Requests/Sec&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: Readahead Pages and Page Reads 20:100</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>0.0000</yaxismax>
            <show_work_period>0</show_work_period>
            <show_triggers>0</show_triggers>
            <type>3</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Readahead Pages/sec&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Buffer Manager\Page Reads/sec&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: Server Memory Target and Total</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Memory Manager\Target Server Memory (KB)&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:Memory Manager\Total Server Memory (KB)&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>SQL Instance {$SQLINSTANCENAME0}: User Connections and Batch Requests</name>
            <width>900</width>
            <height>200</height>
            <yaxismin>0.0000</yaxismin>
            <yaxismax>100.0000</yaxismax>
            <show_work_period>1</show_work_period>
            <show_triggers>1</show_triggers>
            <type>0</type>
            <show_legend>1</show_legend>
            <show_3d>0</show_3d>
            <percent_left>0.0000</percent_left>
            <percent_right>0.0000</percent_right>
            <ymin_type_1>0</ymin_type_1>
            <ymax_type_1>0</ymax_type_1>
            <ymin_item_1>0</ymin_item_1>
            <ymax_item_1>0</ymax_item_1>
            <graph_items>
                <graph_item>
                    <sortorder>0</sortorder>
                    <drawtype>0</drawtype>
                    <color>C80000</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:General Statistics\User Connections&quot;]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>0</drawtype>
                    <color>00C800</color>
                    <yaxisside>0</yaxisside>
                    <calc_fnc>2</calc_fnc>
                    <type>0</type>
                    <item>
                        <host>Template SQL Server Instance 0 DE Baseline</host>
                        <key>perf_counter[&quot;\{$SQLINSTANCE0}:SQL Statistics\Batch Requests/Sec&quot;]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
    <value_maps>
        <value_map>
            <name>SQL Database status</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>ONLINE</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>RESTORING</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>RECOVERING</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>RECOVERY_PENDING</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>SUSPECT</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>EMERGENCY</newvalue>
                </mapping>
                <mapping>
                    <value>6</value>
                    <newvalue>OFFLINE</newvalue>
                </mapping>
                <mapping>
                    <value>7</value>
                    <newvalue>COPYING</newvalue>
                </mapping>
                <mapping>
                    <value>10</value>
                    <newvalue>OFFLINE_SECONDARY</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>Windows service state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Running</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Paused</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>Start pending</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>Pause pending</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>Continue pending</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>Stop pending</newvalue>
                </mapping>
                <mapping>
                    <value>6</value>
                    <newvalue>Stopped</newvalue>
                </mapping>
                <mapping>
                    <value>7</value>
                    <newvalue>Unknown</newvalue>
                </mapping>
                <mapping>
                    <value>255</value>
                    <newvalue>No such service</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
