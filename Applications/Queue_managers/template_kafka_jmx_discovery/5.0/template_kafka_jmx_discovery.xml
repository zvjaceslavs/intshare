<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>5.0</version><date>2021-11-21T21:45:51Z</date><groups><group><name>Templates</name></group></groups><templates><template><template>App Kafka</template><name>App Kafka</name><description>## Overview

This template will use JMX discovery to get metrics about resource usage, topics stats and much more from a Kafka node.



</description><groups><group><name>Templates</name></group></groups><applications><application><name>Kafka</name></application><application><name>Kafka Topics</name></application></applications><items><item><name>G1 Old Generation Count</name><type>JMX</type><key>jmx[&quot;java.lang:type=GarbageCollector,name=G1 Old Generation&quot;,&quot;CollectionCount&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>G1 Young Generation Count</name><type>JMX</type><key>jmx[&quot;java.lang:type=GarbageCollector,name=G1 Young Generation&quot;,&quot;CollectionCount&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Leader election rate</name><type>JMX</type><key>jmx[&quot;kafka.controller:type=ControllerStats,name=LeaderElectionRateAndTimeMs&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><triggers><trigger><expression>{delta(900)}&lt;&gt;0</expression><name>Leader election has occurred in last 15m</name><status>DISABLED</status><priority>INFO</priority></trigger></triggers></item><item><name>Unclean leader election rate</name><type>JMX</type><key>jmx[&quot;kafka.controller:type=ControllerStats,name=UncleanLeaderElectionsPerSec&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><triggers><trigger><expression>{delta(900)}&lt;&gt;0</expression><name>Unclean leader election has occurred last 15m</name><priority>HIGH</priority></trigger></triggers></item><item><name>Is controller active on broker</name><type>JMX</type><key>jmx[&quot;kafka.controller:type=KafkaController,name=ActiveControllerCount&quot;,&quot;Value&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><triggers><trigger><expression>{last()}=1</expression><name>Controller on broker is active</name><status>DISABLED</status><priority>INFO</priority></trigger></triggers></item><item><name>LogFlushStats 50thPercentile</name><type>JMX</type><key>jmx[&quot;kafka.log:type=LogFlushStats,name=LogFlushRateAndTimeMs&quot;,&quot;50thPercentile&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>LogFlushStats 75thPercentile</name><type>JMX</type><key>jmx[&quot;kafka.log:type=LogFlushStats,name=LogFlushRateAndTimeMs&quot;,&quot;75thPercentile&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>LogFlushStats 95thPercentile</name><type>JMX</type><key>jmx[&quot;kafka.log:type=LogFlushStats,name=LogFlushRateAndTimeMs&quot;,&quot;95thPercentile&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><triggers><trigger><expression>{last()}&gt;10</expression><name>Log flush latency (95th percentile) &gt; 10ms</name><priority>WARNING</priority><dependencies><dependency><name>Log flush latency (95th percentile) &gt; 20ms</name><expression>{App Kafka:jmx[&quot;kafka.log:type=LogFlushStats,name=LogFlushRateAndTimeMs&quot;,&quot;95thPercentile&quot;].last()}&gt;20</expression></dependency></dependencies></trigger><trigger><expression>{last()}&gt;20</expression><name>Log flush latency (95th percentile) &gt; 20ms</name><priority>HIGH</priority></trigger></triggers></item><item><name>LogFlushStats Count</name><type>JMX</type><key>jmx[&quot;kafka.log:type=LogFlushStats,name=LogFlushRateAndTimeMs&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Count</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Time the request being processed at the leader Fetch-Consumer</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=LocalTimeMs,request=FetchConsumer&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Time the request being processed at the leader Fetch-Follower</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=LocalTimeMs,request=FetchFollower&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Time the request being processed at the leader Produce</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=LocalTimeMs,request=Produce&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Time the request waits for the follower Fetch-Consumer</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=RemoteTimeMs,request=FetchConsumer&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Time the request waits for the follower Fetch-Follower</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=RemoteTimeMs,request=FetchFollower&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Time the request waits for the follower Produce</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=RemoteTimeMs,request=Produce&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Time the request waiting in the request queue Fetch-Consumer</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request=FetchConsumer&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Time the request waiting in the request queue Fetch-Follower</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request=FetchFollower&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Time the request waiting in the request queue Produce</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request=Produce&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Time to send the response Fetch-Consumer</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request=FetchConsumer&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Time to send the response Fetch-Follower</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request=FetchFollower&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Time to send the response Produce</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request=Produce&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Request total time Fetch-Consumer</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchConsumer&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Request total time Fetch-Follower</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchFollower&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Request total time Produce</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=Produce&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><units>ms</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>The average fraction of time the network processors are idle</name><type>JMX</type><key>jmx[&quot;kafka.network:type=SocketServer,name=NetworkProcessorAvgIdlePercent&quot;,&quot;Value&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>%</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Bytes In Per Sec FifteenMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec&quot;,&quot;FifteenMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Bps</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Bytes In Per Sec FiveMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec&quot;,&quot;FiveMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Bps</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Bytes In Per Sec MeanRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec&quot;,&quot;MeanRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Bps</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Bytes In Per Sec OneMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec&quot;,&quot;OneMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Bps</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Bytes Out Per Sec FifteenMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec&quot;,&quot;FifteenMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Bps</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Bytes Out Per Sec FiveMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec&quot;,&quot;FiveMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Bps</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Bytes Out Per Sec MeanRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec&quot;,&quot;MeanRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Bps</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Bytes Out Per Sec OneMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec&quot;,&quot;OneMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Bps</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Messages In Per Sec FifteenMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec&quot;,&quot;FifteenMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Messages In Per Sec FiveMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec&quot;,&quot;FiveMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Messages In Per Sec MeanRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec&quot;,&quot;MeanRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Messages In Per Sec OneMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec&quot;,&quot;OneMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Byte in rate to other brokers FifteenMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesInPerSec&quot;,&quot;FifteenMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Byte in rate to other brokers FiveMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesInPerSec&quot;,&quot;FiveMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Bps</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Byte in rate to other brokers MeanRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesInPerSec&quot;,&quot;MeanRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Bps</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Byte in rate to other brokers OneMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesInPerSec&quot;,&quot;OneMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Bps</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Byte out rate to other brokers FifteenMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesOutPerSec&quot;,&quot;FifteenMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Bps</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Byte out rate to other brokers FiveMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesOutPerSec&quot;,&quot;FiveMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Bps</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Byte out rate to other brokers MeanRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesOutPerSec&quot;,&quot;MeanRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Bps</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Byte out rate to other brokers OneMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesOutPerSec&quot;,&quot;OneMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>Bps</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>The average fraction of time the request handler threads are idle FifteenMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent&quot;,&quot;FifteenMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>%</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>The average fraction of time the request handler threads are idle FiveMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent&quot;,&quot;FiveMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>%</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>The average fraction of time the request handler threads are idle OneMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent&quot;,&quot;OneMinuteRate&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><value_type>FLOAT</value_type><units>%</units><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Max lag in messages btw follower and leader replicas</name><type>JMX</type><key>jmx[&quot;kafka.server:type=ReplicaFetcherManager,name=MaxLag,clientId=Replica&quot;,&quot;Value&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><triggers><trigger><expression>{last()}&gt;=2000</expression><name>Max lag in messages btw follower and leader replicas &gt; 2000</name><priority>WARNING</priority><dependencies><dependency><name>Max lag in messages btw follower and leader replicas &gt; 3000</name><expression>{App Kafka:jmx[&quot;kafka.server:type=ReplicaFetcherManager,name=MaxLag,clientId=Replica&quot;,&quot;Value&quot;].last()}&gt;=3000</expression></dependency></dependencies></trigger><trigger><expression>{last()}&gt;=3000</expression><name>Max lag in messages btw follower and leader replicas &gt; 3000</name><priority>AVERAGE</priority><dependencies><dependency><name>Max lag in messages btw follower and leader replicas &gt; 4000</name><expression>{App Kafka:jmx[&quot;kafka.server:type=ReplicaFetcherManager,name=MaxLag,clientId=Replica&quot;,&quot;Value&quot;].last()}&gt;=4000</expression></dependency></dependencies></trigger><trigger><expression>{last()}&gt;=4000</expression><name>Max lag in messages btw follower and leader replicas &gt; 4000</name><priority>HIGH</priority></trigger></triggers></item><item><name>ISR expansion rate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=ReplicaManager,name=IsrExpandsPerSec&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><triggers><trigger><expression>{delta(900)}&lt;&gt;0</expression><name>ISR has increased in last 15m</name><priority>HIGH</priority></trigger></triggers></item><item><name>ISR shrink rate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=ReplicaManager,name=IsrShrinksPerSec&quot;,&quot;Count&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><triggers><trigger><expression>{delta(900)}&lt;&gt;0</expression><name>ISR has decreased in last 15m</name><status>DISABLED</status><priority>INFO</priority></trigger></triggers></item><item><name>Leader replica counts</name><type>JMX</type><key>jmx[&quot;kafka.server:type=ReplicaManager,name=LeaderCount&quot;,&quot;Value&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Partition Count</name><type>JMX</type><key>jmx[&quot;kafka.server:type=ReplicaManager,name=PartitionCount&quot;,&quot;Value&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name># of under replicated partitions (|ISR| &lt; |all replicas|)</name><type>JMX</type><key>jmx[&quot;kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions&quot;,&quot;Value&quot;]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><triggers><trigger><expression>{last()}&lt;&gt;0</expression><name>Under replicated partitions</name><priority>HIGH</priority></trigger></triggers></item><item><name>HeapMemoryUsage</name><type>JMX</type><key>jmx[java.lang:type=Memory,HeapMemoryUsage.used]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>NonHeapMemoryUsage</name><type>JMX</type><key>jmx[java.lang:type=Memory,NonHeapMemoryUsage.used]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Open File Descriptor Count</name><type>JMX</type><key>jmx[java.lang:type=OperatingSystem,OpenFileDescriptorCount]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Daemon threads</name><type>JMX</type><key>jmx[java.lang:type=Threading,DaemonThreadCount]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Peak threads</name><type>JMX</type><key>jmx[java.lang:type=Threading,PeakThreadCount]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item><item><name>Live threads</name><type>JMX</type><key>jmx[java.lang:type=Threading,ThreadCount]</key><delay>60s</delay><history>30d</history><trends>90d</trends><username>{$JMX_USER}</username><password>{$JMX_PASS}</password><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item></items><discovery_rules><discovery_rule><name>Under Replicated partitions</name><type>JMX</type><key>jmx.discovery[beans,&quot;kafka.cluster:type=Partition,name=UnderReplicated,topic=*,partition=*&quot;]</key><delay>30s</delay><filter><conditions><condition><macro>{#JMXTOPIC}</macro><value>^[^_]\w+</value><formulaid>A</formulaid></condition></conditions></filter><item_prototypes><item_prototype><name>{#JMXTOPIC} under replicated partition {#JMXPARTITION}</name><type>JMX</type><key>jmx[&quot;kafka.cluster:type=Partition,name=UnderReplicated,topic={#JMXTOPIC},partition={#JMXPARTITION}&quot;,&quot;Value&quot;]</key><delay>30s</delay><applications><application><name>Kafka Topics</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><trigger_prototypes><trigger_prototype><expression>{last()}=1</expression><name>{#JMXTOPIC} hash under replicated partition {#JMXPARTITION}</name><priority>AVERAGE</priority></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></discovery_rule><discovery_rule><name>Request rate Fetch Consumer Version discovery</name><type>JMX</type><key>jmx.discovery[beans,&quot;kafka.network:type=RequestMetrics,name=RequestsPerSec,request=FetchConsumer,version=*&quot;]</key><delay>30s</delay><item_prototypes><item_prototype><name>Request rate Fetch Consumer v{#JMXVERSION}</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=RequestsPerSec,request=FetchConsumer,version={#JMXVERSION}&quot;,&quot;Count&quot;]</key><delay>60s</delay><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype></item_prototypes><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></discovery_rule><discovery_rule><name>Request rate Fetch Follower Version discovery</name><type>JMX</type><key>jmx.discovery[beans,&quot;kafka.network:type=RequestMetrics,name=RequestsPerSec,request=FetchFollower,version=*&quot;]</key><delay>30s</delay><item_prototypes><item_prototype><name>Request rate Fetch Follower v{#JMXVERSION}</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=RequestsPerSec,request=FetchFollower,version={#JMXVERSION}&quot;,&quot;Count&quot;]</key><delay>60s</delay><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype></item_prototypes><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></discovery_rule><discovery_rule><name>Request rate Produce Version discovery</name><type>JMX</type><key>jmx.discovery[beans,&quot;kafka.network:type=RequestMetrics,name=RequestsPerSec,request=Produce,version=*&quot;]</key><delay>30s</delay><item_prototypes><item_prototype><name>Request rate Produce v{#JMXVERSION}</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=RequestsPerSec,request=Produce,version={#JMXVERSION}&quot;,&quot;Count&quot;]</key><delay>60s</delay><applications><application><name>Kafka</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype></item_prototypes><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></discovery_rule><discovery_rule><name>Topic Discovery</name><type>JMX</type><key>jmx.discovery[beans,&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec,topic=*&quot;]</key><delay>60s</delay><filter><conditions><condition><macro>{#JMXTOPIC}</macro><value>^[^_]\w+</value><formulaid>A</formulaid></condition></conditions></filter><item_prototypes><item_prototype><name>{#JMXTOPIC} BytesInPerSec FifteenMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec,topic={#JMXTOPIC}&quot;,&quot;FifteenMinuteRate&quot;]</key><delay>60s</delay><value_type>FLOAT</value_type><units>Bps</units><applications><application><name>Kafka Topics</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype><item_prototype><name>{#JMXTOPIC} BytesInPerSec FiveMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec,topic={#JMXTOPIC}&quot;,&quot;FiveMinuteRate&quot;]</key><delay>60s</delay><value_type>FLOAT</value_type><units>Bps</units><applications><application><name>Kafka Topics</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype><item_prototype><name>{#JMXTOPIC} BytesInPerSec MeanRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec,topic={#JMXTOPIC}&quot;,&quot;MeanRate&quot;]</key><delay>60s</delay><value_type>FLOAT</value_type><units>Bps</units><applications><application><name>Kafka Topics</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype><item_prototype><name>{#JMXTOPIC} BytesInPerSec OneMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec,topic={#JMXTOPIC}&quot;,&quot;OneMinuteRate&quot;]</key><delay>60s</delay><value_type>FLOAT</value_type><units>Bps</units><applications><application><name>Kafka Topics</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype><item_prototype><name>{#JMXTOPIC} BytesOutPerSec FifteenMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec,topic={#JMXTOPIC}&quot;,&quot;FifteenMinuteRate&quot;]</key><delay>60s</delay><value_type>FLOAT</value_type><units>Bps</units><applications><application><name>Kafka Topics</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype><item_prototype><name>{#JMXTOPIC} BytesOutPerSec FiveMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec,topic={#JMXTOPIC}&quot;,&quot;FiveMinuteRate&quot;]</key><delay>60s</delay><value_type>FLOAT</value_type><units>Bps</units><applications><application><name>Kafka Topics</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype><item_prototype><name>{#JMXTOPIC} BytesOutPerSec MeanRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec,topic={#JMXTOPIC}&quot;,&quot;MeanRate&quot;]</key><delay>60s</delay><value_type>FLOAT</value_type><units>Bps</units><applications><application><name>Kafka Topics</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype><item_prototype><name>{#JMXTOPIC} BytesOutPerSec OneMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec,topic={#JMXTOPIC}&quot;,&quot;OneMinuteRate&quot;]</key><delay>60s</delay><value_type>FLOAT</value_type><units>Bps</units><applications><application><name>Kafka Topics</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype><item_prototype><name>{#JMXTOPIC} MessagesInPerSec FifteenMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec,topic={#JMXTOPIC}&quot;,&quot;FifteenMinuteRate&quot;]</key><delay>60s</delay><value_type>FLOAT</value_type><units>Messages/s</units><applications><application><name>Kafka Topics</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype><item_prototype><name>{#JMXTOPIC} MessagesInPerSec FiveMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec,topic={#JMXTOPIC}&quot;,&quot;FiveMinuteRate&quot;]</key><delay>60s</delay><value_type>FLOAT</value_type><units>Messages/s</units><applications><application><name>Kafka Topics</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype><item_prototype><name>{#JMXTOPIC} MessagesInPerSec MeanRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec,topic={#JMXTOPIC}&quot;,&quot;MeanRate&quot;]</key><delay>60s</delay><value_type>FLOAT</value_type><units>Messages/s</units><applications><application><name>Kafka Topics</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype><item_prototype><name>{#JMXTOPIC} MessagesInPerSec OneMinuteRate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec,topic={#JMXTOPIC}&quot;,&quot;OneMinuteRate&quot;]</key><delay>60s</delay><value_type>FLOAT</value_type><units>Messages/s</units><applications><application><name>Kafka Topics</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype></item_prototypes><graph_prototypes><graph_prototype><name>{#JMXTOPIC} BytesPerSec</name><graph_items><graph_item><color>1A7C11</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec,topic={#JMXTOPIC}&quot;,&quot;FifteenMinuteRate&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>F63100</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec,topic={#JMXTOPIC}&quot;,&quot;FiveMinuteRate&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>2774A4</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec,topic={#JMXTOPIC}&quot;,&quot;MeanRate&quot;]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec,topic={#JMXTOPIC}&quot;,&quot;OneMinuteRate&quot;]</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec,topic={#JMXTOPIC}&quot;,&quot;FifteenMinuteRate&quot;]</key></item></graph_item><graph_item><sortorder>5</sortorder><color>6C59DC</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec,topic={#JMXTOPIC}&quot;,&quot;FiveMinuteRate&quot;]</key></item></graph_item><graph_item><sortorder>6</sortorder><color>AC8C14</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec,topic={#JMXTOPIC}&quot;,&quot;MeanRate&quot;]</key></item></graph_item><graph_item><sortorder>7</sortorder><color>611F27</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec,topic={#JMXTOPIC}&quot;,&quot;OneMinuteRate&quot;]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><name>{#JMXTOPIC} MessagesInPerSec</name><graph_items><graph_item><color>1A7C11</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec,topic={#JMXTOPIC}&quot;,&quot;FifteenMinuteRate&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>F63100</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec,topic={#JMXTOPIC}&quot;,&quot;FiveMinuteRate&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>2774A4</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec,topic={#JMXTOPIC}&quot;,&quot;MeanRate&quot;]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec,topic={#JMXTOPIC}&quot;,&quot;OneMinuteRate&quot;]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></discovery_rule><discovery_rule><name>Lag in messages per follower Discovery</name><type>JMX</type><key>jmx.discovery[beans,&quot;kafka.server:type=FetcherLagMetrics,name=ConsumerLag,*&quot;]</key><delay>30s</delay><filter><conditions><condition><macro>{#JMXTOPIC}</macro><value>^[^_]\w+</value><formulaid>A</formulaid></condition></conditions></filter><item_prototypes><item_prototype><name>Lag in messages per follower: node {#JMXCLIENTID} {#JMXTOPIC} {#JMXPARTITION}</name><type>JMX</type><key>jmx[&quot;kafka.server:type=FetcherLagMetrics,name=ConsumerLag,clientId={#JMXCLIENTID},topic={#JMXTOPIC},partition={#JMXPARTITION}&quot;,&quot;Value&quot;]</key><delay>60s</delay><applications><application><name>Kafka Topics</name></application></applications><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></item_prototype></item_prototypes><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></discovery_rule></discovery_rules></template></templates><graphs><graph><name>Bytes Per Sec FifteenMinuteRate</name><show_work_period>NO</show_work_period><show_triggers>NO</show_triggers><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>0000DD</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec&quot;,&quot;FifteenMinuteRate&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>00C800</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec&quot;,&quot;FifteenMinuteRate&quot;]</key></item></graph_item></graph_items></graph><graph><name>Bytes Per Sec FiveMinuteRate</name><show_work_period>NO</show_work_period><show_triggers>NO</show_triggers><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>0000DD</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec&quot;,&quot;FiveMinuteRate&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>00C800</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec&quot;,&quot;FiveMinuteRate&quot;]</key></item></graph_item></graph_items></graph><graph><name>Bytes Per Sec MeanRate</name><show_work_period>NO</show_work_period><show_triggers>NO</show_triggers><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>0000DD</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec&quot;,&quot;MeanRate&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>00C800</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec&quot;,&quot;MeanRate&quot;]</key></item></graph_item></graph_items></graph><graph><name>Bytes Per Sec OneMinuteRate</name><show_work_period>NO</show_work_period><show_triggers>NO</show_triggers><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>0000DD</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec&quot;,&quot;OneMinuteRate&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>00C800</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec&quot;,&quot;OneMinuteRate&quot;]</key></item></graph_item></graph_items></graph><graph><name>CollectionCount</name><graph_items><graph_item><color>00C800</color><item><host>App Kafka</host><key>jmx[&quot;java.lang:type=GarbageCollector,name=G1 Old Generation&quot;,&quot;CollectionCount&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>C80000</color><item><host>App Kafka</host><key>jmx[&quot;java.lang:type=GarbageCollector,name=G1 Young Generation&quot;,&quot;CollectionCount&quot;]</key></item></graph_item></graph_items></graph><graph><name>Heap Memory Usage</name><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>00C800</color><item><host>App Kafka</host><key>jmx[java.lang:type=Memory,HeapMemoryUsage.used]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>C80000</color><item><host>App Kafka</host><key>jmx[java.lang:type=Memory,NonHeapMemoryUsage.used]</key></item></graph_item></graph_items></graph><graph><name>Log Flushes</name><graph_items><graph_item><color>1A7C11</color><item><host>App Kafka</host><key>jmx[&quot;kafka.log:type=LogFlushStats,name=LogFlushRateAndTimeMs&quot;,&quot;50thPercentile&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>F63100</color><item><host>App Kafka</host><key>jmx[&quot;kafka.log:type=LogFlushStats,name=LogFlushRateAndTimeMs&quot;,&quot;75thPercentile&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>2774A4</color><item><host>App Kafka</host><key>jmx[&quot;kafka.log:type=LogFlushStats,name=LogFlushRateAndTimeMs&quot;,&quot;95thPercentile&quot;]</key></item></graph_item></graph_items></graph><graph><name>Messages In Per Sec</name><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>00C800</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec&quot;,&quot;OneMinuteRate&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>C80000</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec&quot;,&quot;FifteenMinuteRate&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>0000C8</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec&quot;,&quot;FiveMinuteRate&quot;]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>C800C8</color><item><host>App Kafka</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec&quot;,&quot;MeanRate&quot;]</key></item></graph_item></graph_items></graph><graph><name>Open File Descriptor Count</name><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>00C800</color><item><host>App Kafka</host><key>jmx[java.lang:type=OperatingSystem,OpenFileDescriptorCount]</key></item></graph_item></graph_items></graph><graph><name>Request total time</name><graph_items><graph_item><color>00C800</color><item><host>App Kafka</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchConsumer&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>C80000</color><item><host>App Kafka</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchFollower&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>0000C8</color><item><host>App Kafka</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=Produce&quot;,&quot;Count&quot;]</key></item></graph_item></graph_items></graph><graph><name>Thread Count</name><graph_items><graph_item><color>00C800</color><item><host>App Kafka</host><key>jmx[java.lang:type=Threading,ThreadCount]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>C80000</color><item><host>App Kafka</host><key>jmx[java.lang:type=Threading,PeakThreadCount]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>0000C8</color><item><host>App Kafka</host><key>jmx[java.lang:type=Threading,DaemonThreadCount]</key></item></graph_item></graph_items></graph><graph><name>Time the request being processed at the leader</name><graph_items><graph_item><color>00C800</color><item><host>App Kafka</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=LocalTimeMs,request=FetchConsumer&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>C80000</color><item><host>App Kafka</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=LocalTimeMs,request=FetchFollower&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>0000C8</color><item><host>App Kafka</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=LocalTimeMs,request=Produce&quot;,&quot;Count&quot;]</key></item></graph_item></graph_items></graph><graph><name>Time the request waiting in the request queue</name><graph_items><graph_item><color>00C800</color><item><host>App Kafka</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request=FetchConsumer&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>C80000</color><item><host>App Kafka</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request=FetchFollower&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>0000C8</color><item><host>App Kafka</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request=Produce&quot;,&quot;Count&quot;]</key></item></graph_item></graph_items></graph><graph><name>Time the request waits for the follower</name><graph_items><graph_item><color>00C800</color><item><host>App Kafka</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=RemoteTimeMs,request=FetchConsumer&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>C80000</color><item><host>App Kafka</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=RemoteTimeMs,request=FetchFollower&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>0000C8</color><item><host>App Kafka</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=RemoteTimeMs,request=Produce&quot;,&quot;Count&quot;]</key></item></graph_item></graph_items></graph><graph><name>Time to send the response</name><graph_items><graph_item><color>00C800</color><item><host>App Kafka</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request=FetchConsumer&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>C80000</color><item><host>App Kafka</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request=FetchFollower&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>0000C8</color><item><host>App Kafka</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request=Produce&quot;,&quot;Count&quot;]</key></item></graph_item></graph_items></graph></graphs></zabbix_export>
