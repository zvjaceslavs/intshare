<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
  <version>5.0</version>
  <date>2021-10-19T20:38:16Z</date>
  <groups>
    <group>
      <name>Templates</name>
    </group>
  </groups>
  <templates>
    <template>
      <template>Template Backup Exec Server</template>
      <name>Template Backup Exec Server</name>
      <description>Veritas/Simantec Backup Exec Server template All checks executes with T-SQL, so you must configure Zabbix to use FreeTDS for MS SQL Server. Backup Jobs ODBC LLD rules: - Backup Exec Windows Service - Backup Exec Jobs (FULL) - Backup Exec Jobs (INCREMENTAL) Two rules needs for creating triggers with different severity levels for Full job types and Incremental job types. Macroses {$BE.USER} and {$BE.PASSWORD} must be set on template or host level before usage. These are username and password to connect to BEDB database. LLD returns {#JOB.TYPE} macros, containig 'FULL' or 'INCR' string to determine backup job type. On database level it's: 16777216 - INCR 16973824 - FULL Documentation will be available soon on my GitHub page (https://github.com/asand3r).</description>
      <groups>
        <group>
          <name>Templates</name>
        </group>
      </groups>
      <applications>
        <application>
          <name>Backup Exec Services</name>
        </application>
      </applications>
      <discovery_rules>
        <discovery_rule>
          <name>Backup Exec Jobs Discovery (FULL)</name>
          <type>ODBC</type>
          <key>db.odbc.discovery[be.jobs.full,{HOST.HOST}]</key>
          <delay>1h</delay>
          <params>SELECT JobID as 'JOB.ID', JobName as 'JOB.NAME', CurrentStatus as 'JOB.STATUS', IIF (JobRunFlags = 16777216, 'INCR', 'FULL') as 'JOB.TYPE' FROM BEDB.dbo.vwJobs WHERE TaskTypeID = 200 and CurrentStatus IN ('16','17','18');</params>
          <username>{$BE.USER}</username>
          <password>{$BE.PASSWORD}</password>
          <filter>
            <conditions>
              <condition>
                <macro>{#JOB.TYPE}</macro>
                <value>^FULL$</value>
                <formulaid>A</formulaid>
              </condition>
            </conditions>
          </filter>
          <lifetime>7d</lifetime>
          <description>Discover Full Backup Exec jobs by SQL query.</description>
          <item_prototypes>
            <item_prototype>
              <name>{#JOB.NAME}: Final Job Status</name>
              <type>ODBC</type>
              <key>db.odbc.select[be.job.full.{#JOB.NAME}.finaljobstatus,{HOST.HOST}]</key>
              <delay>15m</delay>
              <history>{$HISTORY}</history>
              <trends>{$TRENDS}</trends>
              <params>SELECT ISNULL ((SELECT TOP 1 FinalJobStatus FROM BEDB.dbo.JobHistorySummary WHERE JobID = '{#JOB.ID}' and IsJobActive != 1 ORDER BY EndTime DESC), 0);</params>
              <username>{$BE.USER}</username>
              <password>{$BE.PASSWORD}</password>
              <description>{#JOB.NAME} final job status</description>
              <application_prototypes>
                <application_prototype>
                  <name>BE Job: {#JOB.NAME}</name>
                </application_prototype>
              </application_prototypes>
              <valuemap>
                <name>Backup Exec Job Status</name>
              </valuemap>
              <request_method>POST</request_method>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{count(#2,19,ne)}&lt;>0</expression>
                  <name>Backup job {#JOB.NAME}: {ITEM.VALUE}</name>
                  <priority>AVERAGE</priority>
                  <description>Backup job {#JOB.NAME} finished with error: {ITEM.LASTVALUE}.</description>
                  <tags>
                    <tag>
                      <tag>app</tag>
                      <value>backup exec</value>
                    </tag>
                    <tag>
                      <tag>job type</tag>
                      <value>{#JOB.TYPE}</value>
                    </tag>
                    <tag>
                      <tag>service</tag>
                      <value>backup</value>
                    </tag>
                  </tags>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>{#JOB.NAME}: Total Data Size, bytes</name>
              <type>ODBC</type>
              <key>db.odbc.select[be.job.full.{#JOB.NAME}.totalbytes,{HOST.HOST}]</key>
              <delay>15m</delay>
              <history>{$HISTORY}</history>
              <trends>{$TRENDS}</trends>
              <units>B</units>
              <params>SELECT ISNULL ((SELECT TOP 1 TotalDataSizeBytes FROM BEDB.dbo.JobHistorySummary WHERE JobID = '{#JOB.ID}' and IsJobActive != 1 ORDER BY EndTime DESC), 0);</params>
              <username>{$BE.USER}</username>
              <password>{$BE.PASSWORD}</password>
              <description>{#JOB.NAME} total bytes</description>
              <application_prototypes>
                <application_prototype>
                  <name>BE Job: {#JOB.NAME}</name>
                </application_prototype>
              </application_prototypes>
              <request_method>POST</request_method>
            </item_prototype>
          </item_prototypes>
          <graph_prototypes>
            <graph_prototype>
              <name>{#JOB.NAME}: Saved Data Size</name>
              <graph_items>
                <graph_item>
                  <drawtype>GRADIENT_LINE</drawtype>
                  <color>1A7C11</color>
                  <item>
                    <host>Template Backup Exec Server</host>
                    <key>db.odbc.select[be.job.full.{#JOB.NAME}.totalbytes,{HOST.HOST}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
          </graph_prototypes>
          <request_method>POST</request_method>
        </discovery_rule>
        <discovery_rule>
          <name>Backup Exec Jobs Discovery (INCREMENTAL)</name>
          <type>ODBC</type>
          <key>db.odbc.discovery[be.jobs.incr,{HOST.HOST}]</key>
          <delay>1h</delay>
          <params>SELECT JobID as 'JOB.ID', JobName as 'JOB.NAME', CurrentStatus as 'JOB.STATUS', IIF (JobRunFlags = 16777216, 'INCR', 'FULL') as 'JOB.TYPE' FROM BEDB.dbo.vwJobs WHERE TaskTypeID = 200 and CurrentStatus IN ('16','17','18');</params>
          <username>{$BE.USER}</username>
          <password>{$BE.PASSWORD}</password>
          <filter>
            <conditions>
              <condition>
                <macro>{#JOB.TYPE}</macro>
                <value>^INCR$</value>
                <formulaid>A</formulaid>
              </condition>
            </conditions>
          </filter>
          <lifetime>7d</lifetime>
          <description>Discover Incremental Backup Exec jobs by SQL query.</description>
          <item_prototypes>
            <item_prototype>
              <name>{#JOB.NAME}: Final Job Status</name>
              <type>ODBC</type>
              <key>db.odbc.select[be.job.incr.{#JOB.NAME}.finaljobstatus,{HOST.HOST}]</key>
              <delay>15m</delay>
              <history>{$HISTORY}</history>
              <trends>{$TRENDS}</trends>
              <params>SELECT ISNULL ((SELECT TOP 1 FinalJobStatus FROM BEDB.dbo.JobHistorySummary WHERE JobID = '{#JOB.ID}' and IsJobActive != 1 ORDER BY EndTime DESC), 0);</params>
              <username>{$BE.USER}</username>
              <password>{$BE.PASSWORD}</password>
              <description>{#JOB.NAME} final job status</description>
              <application_prototypes>
                <application_prototype>
                  <name>BE Job: {#JOB.NAME}</name>
                </application_prototype>
              </application_prototypes>
              <valuemap>
                <name>Backup Exec Job Status</name>
              </valuemap>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{count(#2,19,ne)}&lt;>0</expression>
                  <name>Backup job {#JOB.NAME}: {ITEM.VALUE}</name>
                  <priority>WARNING</priority>
                  <description>Backup job {#JOB.NAME} finished with error: {ITEM.LASTVALUE}.</description>
                  <tags>
                    <tag>
                      <tag>app</tag>
                      <value>backup exec</value>
                    </tag>
                    <tag>
                      <tag>job type</tag>
                      <value>{#JOB.TYPE}</value>
                    </tag>
                    <tag>
                      <tag>service</tag>
                      <value>backup</value>
                    </tag>
                  </tags>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>{#JOB.NAME}: Total Data Size, bytes</name>
              <type>ODBC</type>
              <key>db.odbc.select[be.job.incr.{#JOB.NAME}.totalbytes,{HOST.HOST}]</key>
              <delay>15m</delay>
              <history>{$HISTORY}</history>
              <trends>{$TRENDS}</trends>
              <units>B</units>
              <params>SELECT ISNULL ((SELECT TOP 1 TotalDataSizeBytes FROM BEDB.dbo.JobHistorySummary WHERE JobID = '{#JOB.ID}' and IsJobActive != 1 ORDER BY EndTime DESC), 0);</params>
              <username>{$BE.USER}</username>
              <password>{$BE.PASSWORD}</password>
              <description>{#JOB.NAME} total bytes</description>
              <application_prototypes>
                <application_prototype>
                  <name>BE Job: {#JOB.NAME}</name>
                </application_prototype>
              </application_prototypes>
            </item_prototype>
          </item_prototypes>
          <graph_prototypes>
            <graph_prototype>
              <name>{#JOB.NAME}: Saved Data Size (incremental)</name>
              <graph_items>
                <graph_item>
                  <drawtype>GRADIENT_LINE</drawtype>
                  <color>1A7C11</color>
                  <item>
                    <host>Template Backup Exec Server</host>
                    <key>db.odbc.select[be.job.incr.{#JOB.NAME}.totalbytes,{HOST.HOST}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
          </graph_prototypes>
        </discovery_rule>
        <discovery_rule>
          <name>Backup Exec Services</name>
          <type>ZABBIX_ACTIVE</type>
          <key>service.discovery</key>
          <delay>3h</delay>
          <filter>
            <conditions>
              <condition>
                <macro>{#SERVICE.NAME}</macro>
                <value>^BackupExec|bedbg</value>
                <formulaid>A</formulaid>
              </condition>
              <condition>
                <macro>{#SERVICE.STARTUP}</macro>
                <value>0</value>
                <formulaid>B</formulaid>
              </condition>
            </conditions>
          </filter>
          <lifetime>3d</lifetime>
          <description>Discovery Backup Exec Services.</description>
          <item_prototypes>
            <item_prototype>
              <name>Service {#SERVICE.NAME} status</name>
              <type>ZABBIX_ACTIVE</type>
              <key>service.info[{#SERVICE.NAME}]</key>
              <history>{$HISTORY}</history>
              <trends>{$TRENDS}</trends>
              <description>{#SERVICE.NAME} status Display name: {#SERVICE.DISPLAYNAME} Description: {#SERVICE.DESCRIPTION}</description>
              <applications>
                <application>
                  <name>Backup Exec Services</name>
                </application>
              </applications>
              <valuemap>
                <name>Windows service state</name>
              </valuemap>
              <request_method>POST</request_method>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{count(#5,0,ne)}>3</expression>
                  <name>Service {#SERVICE.NAME} in {ITEM.VALUE} state</name>
                  <priority>WARNING</priority>
                  <description>Service {#SERVICE.NAME} ({#SERVICE.DISPLAYNAME}) not in 'Running' state</description>
                  <tags>
                    <tag>
                      <tag>app</tag>
                      <value>backup exec</value>
                    </tag>
                    <tag>
                      <tag>service</tag>
                      <value>backup</value>
                    </tag>
                    <tag>
                      <tag>windows service</tag>
                      <value>{ITEM.VALUE}</value>
                    </tag>
                  </tags>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
          </item_prototypes>
          <request_method>POST</request_method>
        </discovery_rule>
      </discovery_rules>
      <macros>
        <macro>
          <macro>{$BE.PASSWORD}</macro>
          <value>PASSWORD</value>
        </macro>
        <macro>
          <macro>{$BE.USER}</macro>
          <value>LOGIN</value>
        </macro>
        <macro>
          <macro>{$HISTORY}</macro>
          <value>14d</value>
        </macro>
        <macro>
          <macro>{$TRENDS}</macro>
          <value>180d</value>
        </macro>
      </macros>
    </template>
  </templates>
  <value_maps>
    <value_map>
      <name>Backup Exec Job Status</name>
      <mappings>
        <mapping>
          <value>1</value>
          <newvalue>Terminated because canceled</newvalue>
        </mapping>
        <mapping>
          <value>2</value>
          <newvalue>Completed waiting for final disposition</newvalue>
        </mapping>
        <mapping>
          <value>3</value>
          <newvalue>Completed with exceptions</newvalue>
        </mapping>
        <mapping>
          <value>4</value>
          <newvalue>Dispatched</newvalue>
        </mapping>
        <mapping>
          <value>5</value>
          <newvalue>On hold</newvalue>
        </mapping>
        <mapping>
          <value>6</value>
          <newvalue>Completed with an error</newvalue>
        </mapping>
        <mapping>
          <value>7</value>
          <newvalue>Schedule invalid</newvalue>
        </mapping>
        <mapping>
          <value>8</value>
          <newvalue>Invalid Time Window</newvalue>
        </mapping>
        <mapping>
          <value>9</value>
          <newvalue>Missed</newvalue>
        </mapping>
        <mapping>
          <value>10</value>
          <newvalue>Missed</newvalue>
        </mapping>
        <mapping>
          <value>11</value>
          <newvalue>Paused</newvalue>
        </mapping>
        <mapping>
          <value>12</value>
          <newvalue>Pending</newvalue>
        </mapping>
        <mapping>
          <value>13</value>
          <newvalue>Recovered</newvalue>
        </mapping>
        <mapping>
          <value>14</value>
          <newvalue>Resource Disabled</newvalue>
        </mapping>
        <mapping>
          <value>15</value>
          <newvalue>Resumed</newvalue>
        </mapping>
        <mapping>
          <value>16</value>
          <newvalue>Running</newvalue>
        </mapping>
        <mapping>
          <value>17</value>
          <newvalue>Ready</newvalue>
        </mapping>
        <mapping>
          <value>18</value>
          <newvalue>Scheduled</newvalue>
        </mapping>
        <mapping>
          <value>19</value>
          <newvalue>Completed successfully</newvalue>
        </mapping>
        <mapping>
          <value>20</value>
          <newvalue>Superceded</newvalue>
        </mapping>
        <mapping>
          <value>21</value>
          <newvalue>Abort (Time)</newvalue>
        </mapping>
        <mapping>
          <value>22</value>
          <newvalue>To Be Scheduled</newvalue>
        </mapping>
        <mapping>
          <value>23</value>
          <newvalue>Linked to another job</newvalue>
        </mapping>
        <mapping>
          <value>24</value>
          <newvalue>UNKNOWN</newvalue>
        </mapping>
        <mapping>
          <value>25</value>
          <newvalue>Blocked by Template Rule</newvalue>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>Windows service state</name>
      <mappings>
        <mapping>
          <value>0</value>
          <newvalue>Running</newvalue>
        </mapping>
        <mapping>
          <value>1</value>
          <newvalue>Paused</newvalue>
        </mapping>
        <mapping>
          <value>2</value>
          <newvalue>Start pending</newvalue>
        </mapping>
        <mapping>
          <value>3</value>
          <newvalue>Pause pending</newvalue>
        </mapping>
        <mapping>
          <value>4</value>
          <newvalue>Continue pending</newvalue>
        </mapping>
        <mapping>
          <value>5</value>
          <newvalue>Stop pending</newvalue>
        </mapping>
        <mapping>
          <value>6</value>
          <newvalue>Stopped</newvalue>
        </mapping>
        <mapping>
          <value>7</value>
          <newvalue>Unknown</newvalue>
        </mapping>
        <mapping>
          <value>255</value>
          <newvalue>No such service</newvalue>
        </mapping>
      </mappings>
    </value_map>
  </value_maps>
</zabbix_export>