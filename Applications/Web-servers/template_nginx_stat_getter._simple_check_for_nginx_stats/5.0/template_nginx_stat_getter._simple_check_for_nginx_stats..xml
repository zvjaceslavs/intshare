<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
  <version>5.0</version>
  <date>2021-11-09T04:40:40Z</date>
  <groups>
    <group>
      <name>Templates_Custom</name>
    </group>
  </groups>
  <templates>
    <template>
      <template>App Nginx</template>
      <name>App Nginx</name>
      <description>## Overview English description - &lt;https://github.com/tonymadbrain/nginx_stat_getter/blob/master/README.md> Cкрипт для получения статистики из Nginx, который можно использовать в Zabbix. Реализация на Go вот этого скрипта - https://github.com/vicendominguez/nginx-zabbix-template. Настройка Nginx --------------- Чтобы включить статистику в Nginx, нужно создать vhost, следующего содержания: ``` server { listen 4040; # нестандартный порт для мониторинга статистики server\_name \_; # нам неважно какой server name keepalive\_timeout 0; allow 192.168.0.40; # разрешаем запросы только для ip адреса нашего сервера мониторинга deny all; # все остальные идут лесом location =/nginx\_status/ { stub\_status on; # собственно включение статистики } access\_log off; # не пишем логи } ``` И сделать reload/restart сервера. Настройка Zabbix ---------------- Нужно скомпилировать бинарник под ту платформу, на которой запущен Zabbix сервер, для этого нужно использовать команду: ``` env GOOS={OS} GOARCH={ARCH} go build -v github.com/username/nginx\_stat\_getter ``` {OS} - тип операционной системы, может быть: * Mac os - darwin * Windows - windows * Linux - linux * FreeBSD - freebsd {ARCH} - архитектура, может быть: * x86\_64 - amd64 * x86 - 386 * ARM - arm (linux only) Закинуть бинарник на сервер Zabbix в каталог /usr/lib/zabbix/externalscripts, сделать его исполняемым: ``` chmod +x nginx\_stat\_getter ``` , сделать владельцем файла Zabbix: ``` chown zabbix:zabbix nginx\_stat\_getter ``` Затем нужно импортировать шаблон *zbx\_nginx\_template.xml* в Zabbix фронтенде и прикрепить его к нужному серверу. Ждать данных. ## Author Antony Ryabov</description>
      <groups>
        <group>
          <name>Templates_Custom</name>
        </group>
      </groups>
      <applications>
        <application>
          <name>Nginx</name>
        </application>
      </applications>
      <items>
        <item>
          <name>Nginx Accepted per second</name>
          <type>EXTERNAL</type>
          <key>nginx_stat_getter["-h","{HOST.CONN}","-p","4040","-s","accepted"]</key>
          <delay>60</delay>
          <value_type>FLOAT</value_type>
          <units>rps</units>
          <applications>
            <application>
              <name>Nginx</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>CHANGE_PER_SECOND</type>
              <params></params>
            </step>
            <step>
              <type>MULTIPLIER</type>
              <params>1</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Nginx Active Connections</name>
          <type>EXTERNAL</type>
          <key>nginx_stat_getter["-h","{HOST.CONN}","-p","4040","-s","active"]</key>
          <delay>60</delay>
          <applications>
            <application>
              <name>Nginx</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Nginx Handled per second</name>
          <type>EXTERNAL</type>
          <key>nginx_stat_getter["-h","{HOST.CONN}","-p","4040","-s","handled"]</key>
          <delay>60</delay>
          <value_type>FLOAT</value_type>
          <units>rps</units>
          <applications>
            <application>
              <name>Nginx</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>CHANGE_PER_SECOND</type>
              <params></params>
            </step>
            <step>
              <type>MULTIPLIER</type>
              <params>1</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Nginx Reading state count</name>
          <type>EXTERNAL</type>
          <key>nginx_stat_getter["-h","{HOST.CONN}","-p","4040","-s","reading"]</key>
          <delay>60</delay>
          <applications>
            <application>
              <name>Nginx</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Nginx Requests per second</name>
          <type>EXTERNAL</type>
          <key>nginx_stat_getter["-h","{HOST.CONN}","-p","4040","-s","requests"]</key>
          <delay>60</delay>
          <value_type>FLOAT</value_type>
          <units>rps</units>
          <applications>
            <application>
              <name>Nginx</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>CHANGE_PER_SECOND</type>
              <params></params>
            </step>
            <step>
              <type>MULTIPLIER</type>
              <params>1</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Nginx Waiting state count</name>
          <type>EXTERNAL</type>
          <key>nginx_stat_getter["-h","{HOST.CONN}","-p","4040","-s","waiting"]</key>
          <delay>60</delay>
          <applications>
            <application>
              <name>Nginx</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Nginx Writting state count</name>
          <type>EXTERNAL</type>
          <key>nginx_stat_getter["-h","{HOST.CONN}","-p","4040","-s","writing"]</key>
          <delay>60</delay>
          <applications>
            <application>
              <name>Nginx</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Nginx memory allocated</name>
          <key>proc.mem[nginx,nginx]</key>
          <delay>60</delay>
          <units>B</units>
        </item>
        <item>
          <name>Nginx process count</name>
          <key>proc.num[nginx]</key>
          <delay>60</delay>
          <triggers>
            <trigger>
              <expression>{last(0)}=0</expression>
              <name>Nginx is down</name>
              <priority>HIGH</priority>
            </trigger>
          </triggers>
        </item>
      </items>
    </template>
  </templates>
  <graphs>
    <graph>
      <name>Nginx status</name>
      <graph_items>
        <graph_item>
          <color>00C800</color>
          <item>
            <host>App Nginx</host>
            <key>nginx_stat_getter["-h","{HOST.CONN}","-p","4040","-s","active"]</key>
          </item>
        </graph_item>
        <graph_item>
          <sortorder>1</sortorder>
          <color>0000C8</color>
          <item>
            <host>App Nginx</host>
            <key>nginx_stat_getter["-h","{HOST.CONN}","-p","4040","-s","reading"]</key>
          </item>
        </graph_item>
        <graph_item>
          <sortorder>2</sortorder>
          <color>C80000</color>
          <item>
            <host>App Nginx</host>
            <key>nginx_stat_getter["-h","{HOST.CONN}","-p","4040","-s","waiting"]</key>
          </item>
        </graph_item>
        <graph_item>
          <sortorder>3</sortorder>
          <color>C800C8</color>
          <item>
            <host>App Nginx</host>
            <key>nginx_stat_getter["-h","{HOST.CONN}","-p","4040","-s","writing"]</key>
          </item>
        </graph_item>
      </graph_items>
    </graph>
    <graph>
      <name>Nginx workload</name>
      <graph_items>
        <graph_item>
          <color>0000C8</color>
          <item>
            <host>App Nginx</host>
            <key>nginx_stat_getter["-h","{HOST.CONN}","-p","4040","-s","accepted"]</key>
          </item>
        </graph_item>
        <graph_item>
          <sortorder>1</sortorder>
          <color>00C800</color>
          <item>
            <host>App Nginx</host>
            <key>nginx_stat_getter["-h","{HOST.CONN}","-p","4040","-s","handled"]</key>
          </item>
        </graph_item>
        <graph_item>
          <sortorder>2</sortorder>
          <color>C80000</color>
          <item>
            <host>App Nginx</host>
            <key>nginx_stat_getter["-h","{HOST.CONN}","-p","4040","-s","requests"]</key>
          </item>
        </graph_item>
      </graph_items>
    </graph>
  </graphs>
</zabbix_export>