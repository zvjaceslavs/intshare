zabbix_export:
  version: '5.4'
  date: '2021-10-22T08:04:20Z'
  groups:
    -
      uuid: 7df96b18c230490a9a0a9e2307226338
      name: Templates
  templates:
    -
      uuid: fb43749c630b43d8bdbca88bada0d0da
      template: 'Template App SSL ImmuniWeb Scan'
      name: 'Template App SSL ImmuniWeb Scan'
      description: 'https://www.immuniweb.com/ssl/'
      groups:
        -
          name: Templates
      items:
        -
          uuid: f1ce85600033472d8fd42d307f68e8ed
          name: '{$SSL_HOST} ImmuniWeb Scan Date'
          type: DEPENDENT
          key: immuniweb.scan.date
          delay: '0'
          history: 30d
          trends: '0'
          value_type: CHAR
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.internals.ts
              error_handler: DISCARD_VALUE
            -
              type: JAVASCRIPT
              parameters:
                - |
                  var date = new Date(value * 1000);
                  return date.toString();
          master_item:
            key: immuniweb.scan.result
          tags:
            -
              tag: Application
              value: 'HTTPS service'
        -
          uuid: b4dad2fd41624384b94b884eba5751c6
          name: '{$SSL_HOST} ImmuniWeb SSL Scan'
          type: SCRIPT
          key: immuniweb.scan.result
          delay: '0;h/5m0,5,15'
          history: 14d
          trends: '0'
          value_type: TEXT
          params: |
            try {
                Zabbix.Log(3, 'SSL ImmuniWeb scan script value='+value);
             
                var result = {},
                params = JSON.parse(value),
                req = new CurlHttpRequest(),
                resp;
            
                var domain = params.sslHost + ':' + params.sslPort;
                var paramString = 'domain='+domain+'&show_test_results=false&recheck=false&choosen_ip=any';
                var ts = Date.now();
             
                Zabbix.Log(3, 'Attempting SSL ImmuniWeb scan with POST fields: '+paramString);
                resp = req.Post('https://www.immuniweb.com/ssl/api/v1/check/'+ts+'.html', paramString);
                Zabbix.Log(3, 'SSL ImmuniWeb received response: '+resp); 
                if (req.Status() != 200) {
                    throw 'Response code: '+req.Status();
                }
             
                resp = JSON.parse(resp);
                var status_id = resp.status_id;
                var status = resp.message;
                var job_id = resp.job_id;
                var test_id = resp.test_id;
                
                if (status_id == 3) {
                  Zabbix.Log(3, 'SSL ImmuniWeb scan result is ready/cached');
                  paramString = 'id='+test_id;
                  Zabbix.Log(3, 'Attempting to fetch SSL ImmuniWeb result with POST fields: '+paramString);
                  resp = req.Post('https://www.immuniweb.com/ssl/api/v1/get_result/'+ts+'.html', paramString);
                  if (req.Status() != 200) {
                    throw 'Response code: '+req.Status();
                  }
                  resp = JSON.parse(resp);
            
                  if (resp.internals) {
                    if (resp.internals.ts) {
                      var testDate = new Date(resp.internals.ts * 1000);
                      testDate.setDate( testDate.getDate() + 3 );
                      if (testDate < Date.now()) {
                        Zabbix.Log(3, 'SSL ImmuniWeb cached result is over 3 days old, reqeusting recheck');
                        paramString = 'domain='+domain+'&show_test_results=false&recheck=true&choosen_ip=any';
                        var recheckResp = req.Post('https://www.immuniweb.com/ssl/api/v1/check/'+ts+'.html', paramString);
                        Zabbix.Log(3, 'SSL ImmuniWeb recheck received response: '+recheckResp); 
                      }
                    }
                  }
            
                } else {
                  Zabbix.Log(3, 'Scan result not ready, status: '+status);
                }
                result = resp;
            } catch (error) {
                Zabbix.Log(3, 'SSL ImmuniWeb API call failed, POST fields: '+paramString);
                Zabbix.Log(3, 'SSL ImmuniWeb API call failed: '+error);
                result = {};
            }
             
            return JSON.stringify(result);
          preprocessing:
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - '43200'
          timeout: 5s
          parameters:
            -
              name: sslHost
              value: '{$SSL_HOST}'
            -
              name: sslPort
              value: '{$SSL_PORT}'
          tags:
            -
              tag: Application
              value: 'HTTPS service'
        -
          uuid: 4e7505bab4074113a1955653c0ac0590
          name: '{$SSL_HOST} ImmuniWeb Server Signature'
          type: DEPENDENT
          key: immuniweb.server.signature
          delay: '0'
          history: 30d
          trends: '0'
          value_type: CHAR
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.server_info.server_signature.value
              error_handler: DISCARD_VALUE
          master_item:
            key: immuniweb.scan.result
          tags:
            -
              tag: Application
              value: 'HTTPS service'
        -
          uuid: c528bbc6248541659a75528a023680a7
          name: '{$SSL_HOST} ImmuniWeb SSL Grade'
          type: DEPENDENT
          key: immuniweb.ssl.grade
          delay: '0'
          history: 30d
          trends: '0'
          value_type: CHAR
          description: 'https://www.immuniweb.com/ssl/#scoring'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.results.grade
              error_handler: DISCARD_VALUE
          master_item:
            key: immuniweb.scan.result
          tags:
            -
              tag: Application
              value: 'HTTPS service'
        -
          uuid: 977cae40de2e4d2f824026f13d7ae6ac
          name: '{$SSL_HOST} ImmuniWeb SSL HIPAA Compliant'
          type: DEPENDENT
          key: immuniweb.ssl.hipaa.compliant
          delay: '0'
          history: 30d
          trends: 90d
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.hipaa.compliant.value
              error_handler: DISCARD_VALUE
            -
              type: BOOL_TO_DECIMAL
              parameters:
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: immuniweb.scan.result
          tags:
            -
              tag: Application
              value: 'HTTPS service'
        -
          uuid: 308421299f0b4d5e9ef34e91565be342
          name: '{$SSL_HOST} ImmuniWeb SSL PCI Compliant'
          type: DEPENDENT
          key: immuniweb.ssl.pci.compliant
          delay: '0'
          history: 30d
          trends: 90d
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.pci_dss.compliant.value
              error_handler: DISCARD_VALUE
            -
              type: BOOL_TO_DECIMAL
              parameters:
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: immuniweb.scan.result
          tags:
            -
              tag: Application
              value: 'HTTPS service'
        -
          uuid: 0c8745f4528b4c7b87ec8fd8da2952e9
          name: '{$SSL_HOST} ImmuniWeb SSL Score'
          type: DEPENDENT
          key: immuniweb.ssl.score
          delay: '0'
          history: 30d
          trends: 90d
          value_type: FLOAT
          description: 'https://www.immuniweb.com/ssl/#scoring'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.results.score
              error_handler: DISCARD_VALUE
          master_item:
            key: immuniweb.scan.result
          tags:
            -
              tag: Application
              value: 'HTTPS service'
          triggers:
            -
              uuid: 69357fc2b79e417bb214a05ba90fef89
              expression: 'max(/Template App SSL ImmuniWeb Scan/immuniweb.ssl.score,#2)<{$IMMUNIWEB_MIN_SCORE}'
              name: '{HOST.NAME} SSL ImmuniWeb Score Low'
              priority: WARNING
              description: 'Last 2 scores below minimum score threshold'
      macros:
        -
          macro: '{$IMMUNIWEB_MIN_SCORE}'
          value: '50'
          description: 'https://www.immuniweb.com/ssl/#scoring'
        -
          macro: '{$SSL_HOST}'
          value: '{HOST.NAME}'
        -
          macro: '{$SSL_PORT}'
          value: '443'
  triggers:
    -
      uuid: 7cb49c6278454562a6700c282860b906
      expression: 'nodata(/Template App SSL ImmuniWeb Scan/immuniweb.ssl.score,36h)=1 and (nodata(/Template App SSL ImmuniWeb Scan/immuniweb.scan.result,36h)=0 or nodata(/Template App SSL ImmuniWeb Scan/immuniweb.ssl.score,72h)=0)'
      name: '{HOST.NAME} SSL ImmuniWeb Scan Not Working'
      priority: WARNING
      description: 'No score received in last 36 hours, but there is result data or there were scores within the past 72 hours.'
