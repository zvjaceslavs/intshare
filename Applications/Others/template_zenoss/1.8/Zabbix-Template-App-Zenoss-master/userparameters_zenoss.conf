# 1.) RABBITMQ USERPARAMETERS:
# Don't forget to setup username (-u) and password (-p) parameters for rabbitmqadmin.

# Flexible parameter to grab queue variables. On the frontend side, use keys like rabbitmq.status[<queue_name>, <metric_name>].
UserParameter=rabbitmq.status[*],rabvalue=`/opt/zenoss/bin/python /usr/sbin/rabbitmqadmin list queues -u <username> -p <password> -f tsv name $2 | grep '^$1' | tr -d '\n' | awk '{print $$2}'`; if [ $rabvalue == "" ]; then printf "0"; else printf "%f" rabvalue; fi

# 2.) CPU UTILIZATION PER PROCESS
# CPU utilization is normalized (divided by number of cores)
UserParameter=proc.util[*],CORES=`grep -c ^processor /proc/cpuinfo 2>/dev/null`; /bin/ps u -C $1 | /bin/grep -e '$4' | awk -v cores=$$CORES '{sum+=$$3}END{printf "%.3f",sum/cores}'

# 3.) RESIDENT MEMORY UTILIZATION PER PROCESS
# Value is converted from KB to B
UserParameter=proc.resmem[*],/bin/ps u -C $1 | /bin/grep -e '$4' | awk '{sum+=$$6}END{printf "%.0f",sum*1024}'
# proc.resmem2 exists because problem with proc.resmem item for zopectl
UserParameter=proc.resmem2[*],/bin/ps u -u $2 | /bin/grep -e '$4' | awk '{sum+=$$6}END{printf "%.0f",sum*1024}'

# 4.) RRD LAST VALUE
UserParameter=rrd.last[*],rrdvalue=`rrdtool fetch --start=now-15min --end=now-9min $1 AVERAGE | tail -n 1 | awk '{print $$2}'`; if [ $rrdvalue == "nan" ]; then printf "0"; else printf "%f" $rrdvalue; fi
