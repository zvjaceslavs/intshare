<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>5.0</version><date>2021-11-21T21:48:00Z</date><groups><group><name>Templates</name></group></groups><templates><template><template>App MSSQL 2008-2016 WSFC</template><name>App MSSQL 2008-2016 WSFC</name><description>## Overview


```
Requirements:
```

1. Zabbix 3+


Install instrucitons:


https://github.com/hermanekt/MSSQL-2008-2016-Multi-instance-with-WSFC



</description><groups><group><name>Templates</name></group></groups><applications><application><name>MSSQL STATUS</name></application></applications><items><item><name>Host name of SQL Node</name><key>agent.hostname</key><delay>60s</delay><history>30d</history><trends>0</trends><value_type>CHAR</value_type><applications><application><name>MSSQL STATUS</name></application></applications><triggers><trigger><expression>{diff(0)}&gt;0</expression><recovery_mode>RECOVERY_EXPRESSION</recovery_mode><recovery_expression>{diff(10m)}&gt;0</recovery_expression><name>Active SQL Node was changed {HOST.NAME}</name><priority>AVERAGE</priority><manual_close>YES</manual_close></trigger></triggers></item><item><name>SQL Server Default Service State - MSSQLSERVER</name><key>service_state[MSSQLSERVER]</key><delay>30s</delay><value_type>FLOAT</value_type><applications><application><name>MSSQL STATUS</name></application></applications><valuemap><name>Windows service state</name></valuemap><triggers><trigger><expression>{last(0)}&gt;0 and &#13;
{last(0)}&lt;255</expression><name>SQL Default Instance: Service state (MSSQLSERVER) is not running</name><priority>HIGH</priority></trigger></triggers></item><item><name>SQL Agent Default Instance: Service State - SQL Agent (MSSQLSERVER)</name><key>service_state[SQLServerAgent]</key><delay>60s</delay><history>7d</history><applications><application><name>MSSQL STATUS</name></application></applications><valuemap><name>Windows service state</name></valuemap><request_method>POST</request_method><triggers><trigger><expression>{last(0)}&gt;0 and &#13;
{last(0)}&lt;255</expression><name>SQL Default Instance: Service state SQL Agent (MSSQLSERVER) is not running</name><priority>HIGH</priority><description>SQL Agent Default Instance: Service State - SQL Agent (MSSQLSERVER)</description></trigger></triggers></item></items><discovery_rules><discovery_rule><name>Database Discovery</name><key>mssql.db.discovery</key><delay>1h</delay><filter><conditions><condition><macro>{#DBNAME}</macro><value>@MSSQL Databases for discovery</value><formulaid>A</formulaid></condition></conditions></filter><item_prototypes><item_prototype><name>SQL Server, Instance {#INST}, DB {#DBNAME}: Active Transactions</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Databases({#DBNAME})\Active Transactions&quot;]</key><value_type>FLOAT</value_type><description>Number of active transactions for the database.</description><application_prototypes><application_prototype><name>MSSQL DATABASE</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}, DB {#DBNAME}: Data File Size</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Databases({#DBNAME})\Data File(s) Size (KB)&quot;]</key><value_type>FLOAT</value_type><units>B</units><description>Cumulative size (in kilobytes) of all the data files in the database including any automatic growth. Monitoring this counter is useful, for example, for determining the correct size of tempdb.</description><application_prototypes><application_prototype><name>MSSQL DATABASE</name></application_prototype></application_prototypes><preprocessing><step><type>MULTIPLIER</type><params>1024</params></step></preprocessing></item_prototype><item_prototype><name>SQL Server, Instance {#INST}, DB {#DBNAME}: Log Bytes Flushed/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Databases({#DBNAME})\Log Bytes Flushed/sec&quot;]</key><value_type>FLOAT</value_type><units>B</units><description>Total number of log bytes flushed per second. Useful for determining trends and utilization of the transaction log.</description><application_prototypes><application_prototype><name>MSSQL DATABASE</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}, DB {#DBNAME}: Log File Size</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Databases({#DBNAME})\Log File(s) Size (KB)&quot;]</key><value_type>FLOAT</value_type><units>B</units><description>Cumulative size (in kilobytes) of all the transaction log files in the database.</description><application_prototypes><application_prototype><name>MSSQL DATABASE</name></application_prototype></application_prototypes><preprocessing><step><type>MULTIPLIER</type><params>1024</params></step></preprocessing></item_prototype><item_prototype><name>SQL Server, Instance {#INST}, DB {#DBNAME}: Log File Used Size</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Databases({#DBNAME})\Log File(s) Used Size (KB)&quot;]</key><value_type>FLOAT</value_type><units>B</units><description>The cumulative used size of all the log files in the database.</description><application_prototypes><application_prototype><name>MSSQL DATABASE</name></application_prototype></application_prototypes><preprocessing><step><type>MULTIPLIER</type><params>1024</params></step></preprocessing></item_prototype><item_prototype><name>SQL Server, Instance {#INST}, DB {#DBNAME}: Log Flushes/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Databases({#DBNAME})\Log Flushes/sec&quot;]</key><value_type>FLOAT</value_type><description>Number of log flushes per second.</description><application_prototypes><application_prototype><name>MSSQL DATABASE</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}, DB {#DBNAME}: Log Flush Waits/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Databases({#DBNAME})\Log Flush Waits/sec&quot;]</key><value_type>FLOAT</value_type><description>Number of commits per second waiting for the log flush.</description><application_prototypes><application_prototype><name>MSSQL DATABASE</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}, DB {#DBNAME}: Log Flush Wait Time</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Databases({#DBNAME})\Log Flush Wait Time&quot;]</key><value_type>FLOAT</value_type><units>ms</units><description>Total wait time (in milliseconds) to flush the log. On an AlwaysOn secondary database, this value indicates the wait time for log records to be hardened to disk.</description><application_prototypes><application_prototype><name>MSSQL DATABASE</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}, DB {#DBNAME}: Log Growths</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Databases({#DBNAME})\Log Growths&quot;]</key><value_type>FLOAT</value_type><description>Total number of times the transaction log for the database has been expanded.</description><application_prototypes><application_prototype><name>MSSQL DATABASE</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}, DB {#DBNAME}: Log Shrinks</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Databases({#DBNAME})\Log Shrinks&quot;]</key><value_type>FLOAT</value_type><description>Total number of times the transaction log for the database has been shrunk.</description><application_prototypes><application_prototype><name>MSSQL DATABASE</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}, DB {#DBNAME}: Log Truncations</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Databases({#DBNAME})\Log Truncations&quot;]</key><value_type>FLOAT</value_type><description>The number of times the transaction log has been shrunk.</description><application_prototypes><application_prototype><name>MSSQL DATABASE</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}, DB {#DBNAME}: Percent Log Used</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Databases({#DBNAME})\Percent Log Used&quot;]</key><value_type>FLOAT</value_type><units>%</units><description>Percentage of space in the log that is in use.</description><application_prototypes><application_prototype><name>MSSQL DATABASE</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}, DB {#DBNAME}: Transactions per second</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Databases({#DBNAME})\Transactions/sec&quot;]</key><value_type>FLOAT</value_type><application_prototypes><application_prototype><name>MSSQL DATABASE</name></application_prototype></application_prototypes></item_prototype></item_prototypes></discovery_rule><discovery_rule><name>SQL Error Log</name><key>mssql.errorlog</key><delay>1h</delay><item_prototypes><item_prototype><name>SQL Server, Instance {#INST}: Error Log File (LOGCount)</name><type>ZABBIX_ACTIVE</type><key>log.count[{#ERRORLOG},Error|Failed,&quot;UTF-16&quot;]</key><application_prototypes><application_prototype><name>MSSQL Error Log</name></application_prototype></application_prototypes><trigger_prototypes><trigger_prototype><expression>{sum(5m)}&gt;0</expression><name>Errors in {#INST} ERRORLOG</name><priority>WARNING</priority></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Error Log File (LOG)</name><type>ZABBIX_ACTIVE</type><key>log[{#ERRORLOG},Error|Failed,&quot;UTF-16&quot;]</key><trends>0</trends><value_type>LOG</value_type><application_prototypes><application_prototype><name>MSSQL Error Log</name></application_prototype></application_prototypes></item_prototype></item_prototypes></discovery_rule><discovery_rule><name>Instance Discovery</name><key>mssql.instance.discovery</key><delay>1h</delay><item_prototypes><item_prototype><name>SQL Server, Instance {#INST}: Access Methods\Page Splits/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Access Methods\Page Splits/sec&quot;]</key><value_type>FLOAT</value_type><application_prototypes><application_prototype><name>MSSQL ACCESS METHODS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Bytes Received from Replica/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Availability Replica(_Total)\Bytes Received from Replica/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Bytes Sent to Replica/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Availability Replica(_Total)\Bytes Sent to Replica/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Bytes Sent to Transport/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Availability Replica(_Total)\Bytes Sent to Transport/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Flow Control/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Availability Replica(_Total)\Flow Control/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Flow Control Time (ms/sec)</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Availability Replica(_Total)\Flow Control Time (ms/sec)&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Receives from Replica/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Availability Replica(_Total)\Receives from Replica/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Resent Messages/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Availability Replica(_Total)\Resent Messages/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Sends to Replica/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Availability Replica(_Total)\Sends to Replica/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Sends to Transport/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Availability Replica(_Total)\Sends to Transport/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Buffer Manager\Page life expectancy</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Buffer Manager\Page life expectancy&quot;]</key><application_prototypes><application_prototype><name>MSSQL MEMORY</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Buffer Manager\Page reads/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Buffer Manager\Page reads/sec&quot;]</key><value_type>FLOAT</value_type><application_prototypes><application_prototype><name>MSSQL MEMORY</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Buffer Manager\Page writes/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Buffer Manager\Page writes/sec&quot;]</key><value_type>FLOAT</value_type><application_prototypes><application_prototype><name>MSSQL MEMORY</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Database Flow Control Delay</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Database Flow Control Delay&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Database Flow Controls/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Database Flow Controls/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: File Bytes Received/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\File Bytes Received/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Group Commits/Sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Group Commits/Sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Group Commit Time</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Group Commit Time&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Log Bytes Compressed/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Log Bytes Compressed/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Log Bytes Decompressed/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Log Bytes Decompressed/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Log Bytes Received/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Log Bytes Received/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Log Compression Cache hits/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Log Compression Cache hits/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Log Compression Cache misses/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Log Compression Cache misses/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Log Compressions/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Log Compressions/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Log Decompressions/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Log Decompressions/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Log remaining for undo</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Log remaining for undo&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Log Send Queue</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Log Send Queue&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Mirrored Write Transactions/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Mirrored Write Transactions/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Recovery Queue</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Recovery Queue&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Redo blocked/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Redo blocked/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Redo Bytes Remaining</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Redo Bytes Remaining&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Redone Bytes/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Redone Bytes/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Redones/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Redones/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Total Log requiring undo</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Total Log requiring undo&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Transaction Delay</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Database Replica(_Total)\Transaction Delay&quot;]</key><application_prototypes><application_prototype><name>MSSQL REPLICA</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}: Databases(_Total)\Percent Log Used</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Databases(_Total)\Percent Log Used&quot;]</key><application_prototypes><application_prototype><name>MSSQL DATABASE</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:General Statistics\User Connections</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:General Statistics\User Connections&quot;]</key><application_prototypes><application_prototype><name>MSSQL STATS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Locks(_Total)\Lock Timeouts/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Locks(_Total)\Lock Timeouts/sec&quot;]</key><value_type>FLOAT</value_type><application_prototypes><application_prototype><name>MSSQL LOCKS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Locks(_Total)\Number of Deadlocks/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Locks(_Total)\Number of Deadlocks/sec&quot;]</key><application_prototypes><application_prototype><name>MSSQL LOCKS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Memory Manager\Memory Grants Pending</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Memory Manager\Memory Grants Pending&quot;]</key><application_prototypes><application_prototype><name>MSSQL MEMORY</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Memory Manager\Target Server Memory (KB)</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Memory Manager\Target Server Memory (KB)&quot;]</key><units>KB</units><application_prototypes><application_prototype><name>MSSQL MEMORY</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Memory Manager\Total Server Memory (KB)</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Memory Manager\Total Server Memory (KB)&quot;]</key><units>KB</units><application_prototypes><application_prototype><name>MSSQL MEMORY</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:SQL Statistics\Batch Requests/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:SQL Statistics\Batch Requests/sec&quot;]</key><value_type>FLOAT</value_type><application_prototypes><application_prototype><name>MSSQL STATS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:SQL Statistics\SQL Compilations/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:SQL Statistics\SQL Compilations/sec&quot;]</key><value_type>FLOAT</value_type><application_prototypes><application_prototype><name>MSSQL STATS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:SQL Statistics\SQL Re-Compilations/sec</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:SQL Statistics\SQL Re-Compilations/sec&quot;]</key><value_type>FLOAT</value_type><application_prototypes><application_prototype><name>MSSQL STATS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Memory grant queue waits/Average wait time (ms)</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Wait Statistics(Average wait time (ms))\Memory grant queue waits&quot;]</key><units>ms</units><application_prototypes><application_prototype><name>MSSQL WAITS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Network IO waits/Average wait time (ms)</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Wait Statistics(Average wait time (ms))\Network IO waits&quot;]</key><units>ms</units><application_prototypes><application_prototype><name>MSSQL WAITS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Page IO latch waits/Average wait time (ms)</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Wait Statistics(Average wait time (ms))\Page IO latch waits&quot;]</key><units>ms</units><application_prototypes><application_prototype><name>MSSQL WAITS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Memory grant queue waits/Cumulative wait time (ms) per second</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Wait Statistics(Cumulative wait time (ms) per second)\Memory grant queue waits&quot;]</key><units>ms</units><application_prototypes><application_prototype><name>MSSQL WAITS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Network IO waits/Cumulative wait time (ms) per second</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Wait Statistics(Cumulative wait time (ms) per second)\Network IO waits&quot;]</key><units>ms</units><application_prototypes><application_prototype><name>MSSQL WAITS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Page IO latch waits/Cumulative wait time (ms) per second</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Wait Statistics(Cumulative wait time (ms) per second)\Page IO latch waits&quot;]</key><units>ms</units><application_prototypes><application_prototype><name>MSSQL WAITS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Memory grant queue waits/Waits in progress</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Wait Statistics(Waits in progress)\Memory grant queue waits&quot;]</key><units>ms</units><application_prototypes><application_prototype><name>MSSQL WAITS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Network IO waits/Waits in progress</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Wait Statistics(Waits in progress)\Network IO waits&quot;]</key><units>ms</units><application_prototypes><application_prototype><name>MSSQL WAITS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Page IO latch waits/Waits in progress</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Wait Statistics(Waits in progress)\Page IO latch waits&quot;]</key><application_prototypes><application_prototype><name>MSSQL WAITS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Memory grant queue waits/Waits started per second</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Wait Statistics(Waits started per second)\Memory grant queue waits&quot;]</key><units>ms</units><application_prototypes><application_prototype><name>MSSQL WAITS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Network IO waits/Waits started per second</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Wait Statistics(Waits started per second)\Network IO waits&quot;]</key><units>ms</units><application_prototypes><application_prototype><name>MSSQL WAITS</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>SQL Server, Instance {#INST}:Page IO latch waits/Waits started per second</name><key>perf_counter[&quot;\{#PERFCOUNTERNAME}:Wait Statistics(Waits started per second)\Page IO latch waits&quot;]</key><units>ms</units><application_prototypes><application_prototype><name>MSSQL WAITS</name></application_prototype></application_prototypes></item_prototype></item_prototypes></discovery_rule><discovery_rule><name>Services Discovery</name><key>mssql.service.discovery</key><delay>1h</delay><filter><conditions><condition><macro>{#INST}</macro><value>MSSQLSERVER</value><operator>NOT_MATCHES_REGEX</operator><formulaid>A</formulaid></condition></conditions></filter><item_prototypes><item_prototype><name>SQL Server {#INST} Service State - {#INST}</name><key>service_state[MSSQL${#INST}]</key><delay>10s</delay><value_type>FLOAT</value_type><applications><application><name>MSSQL STATUS</name></application></applications><valuemap><name>Windows service state</name></valuemap><trigger_prototypes><trigger_prototype><expression>{last(0)}&gt;0 and&#13;
{last(0)}&lt;255</expression><name>SQL Server {#INST} Service state is not running</name><priority>HIGH</priority></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><name>SQL Agent {#INST} Service State - {#INST}</name><key>service_state[SQLAgent${#INST}]</key><delay>10s</delay><value_type>FLOAT</value_type><applications><application><name>MSSQL STATUS</name></application></applications><valuemap><name>Windows service state</name></valuemap><trigger_prototypes><trigger_prototype><expression>{last(0)}&gt;0 and&#13;
{last(0)}&lt;255</expression><name>SQL Agent {#INST} Service state is not running</name><priority>HIGH</priority></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes></discovery_rule></discovery_rules><tags><tag><tag>Service</tag><value>MSSQL</value></tag></tags></template></templates><value_maps><value_map><name>Windows service state</name><mappings><mapping><value>0</value><newvalue>Running</newvalue></mapping><mapping><value>1</value><newvalue>Paused</newvalue></mapping><mapping><value>2</value><newvalue>Start pending</newvalue></mapping><mapping><value>3</value><newvalue>Pause pending</newvalue></mapping><mapping><value>4</value><newvalue>Continue pending</newvalue></mapping><mapping><value>5</value><newvalue>Stop pending</newvalue></mapping><mapping><value>6</value><newvalue>Stopped</newvalue></mapping><mapping><value>7</value><newvalue>Unknown</newvalue></mapping><mapping><value>255</value><newvalue>No such service</newvalue></mapping></mappings></value_map></value_maps></zabbix_export>
