<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
  <version>5.0</version>
  <date>2021-10-22T08:03:15Z</date>
  <groups>
    <group>
      <name>Templates</name>
    </group>
  </groups>
  <templates>
    <template>
      <template>1wire-temperature-probe</template>
      <name>1wire Temperature Probe</name>
      <description>Automatically finds all 1wire devices and assumes them to be temperature probes. Specifically made for DS18B20 sensor probes in combination with Raspberry Pis. Useful macros: You can assign a friendly name for the probes using the following syntax: {$PROBE:"1wire-ID"} 1wire-ID being the devices name, found under /sys/bus/w1/devices/. The set value will represent the friendly name. You also have the option to assign sensors to three different groups: 0, 1 and 2. This will modify the trigger behaviour for specific sensors. 0 is using a normal temperature range calculated for server rooms, 1 is using an extended range and 2 is disabling triggers completly. You can see the specific values in the trigger section. The macro syntax for this is similar to the friendly name: {$GROUP:"1wire-ID"}</description>
      <groups>
        <group>
          <name>Templates</name>
        </group>
      </groups>
      <applications>
        <application>
          <name>Temperature Probe</name>
        </application>
      </applications>
      <discovery_rules>
        <discovery_rule>
          <name>1wire devices</name>
          <key>system.run[find /sys/bus/w1/devices/28* -maxdepth 1 -type l -printf '%f\n' 2> /dev/null]</key>
          <delay>15m</delay>
          <item_prototypes>
            <item_prototype>
              <name>Temperature reading of probe "{#DEVICE}" ({$PROBE:"{#DEVICE}"})</name>
              <key>system.run[cat /sys/bus/w1/devices/{#DEVICE}/w1_slave | tail -n +2 | cut -d= -f2-]</key>
              <delay>15s</delay>
              <value_type>FLOAT</value_type>
              <units>Â°C</units>
              <applications>
                <application>
                  <name>Temperature Probe</name>
                </application>
              </applications>
              <preprocessing>
                <step>
                  <type>MULTIPLIER</type>
                  <params>0.001</params>
                </step>
              </preprocessing>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{nodata(180)}=1</expression>
                  <name>No data received (>3m) from probe "{$PROBE:"{#DEVICE}"}"</name>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>({avg(180)}>=30 and {avg(180)}&lt;33 and {$GROUP:"{#DEVICE}"}=0) or ({avg(180)}>=35 and {avg(180)}&lt;38 and {$GROUP:"{#DEVICE}"}=1)</expression>
                  <name>Temperature critically high on probe "{$PROBE:"{#DEVICE}"}"</name>
                  <priority>AVERAGE</priority>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>({avg(180)}>=14 and {avg(180)}&lt;17 and {$GROUP:"{#DEVICE}"}=0) or ({avg(180)}>=6 and {avg(180)}&lt;10 and {$GROUP:"{#DEVICE}"}=1)</expression>
                  <name>Temperature critically low on probe "{$PROBE:"{#DEVICE}"}"</name>
                  <priority>AVERAGE</priority>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>({last()}>=33 and {$GROUP:"{#DEVICE}"}=0) or ({last()}>=38 and {$GROUP:"{#DEVICE}"}=1)</expression>
                  <name>Temperature disastrously high on probe "{$PROBE:"{#DEVICE}"}"</name>
                  <priority>DISASTER</priority>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>({last()}&lt;14 and {nodata(35)}=0 and {$GROUP:"{#DEVICE}"}=0) or ({last()}&lt;6 and {nodata(35)}=0 and {$GROUP:"{#DEVICE}"}=1)</expression>
                  <name>Temperature disastrously low on probe "{$PROBE:"{#DEVICE}"}"</name>
                  <priority>DISASTER</priority>
                  <dependencies>
                    <dependency>
                      <name>No data received (>3m) from probe "{$PROBE:"{#DEVICE}"}"</name>
                      <expression>{1wire-temperature-probe:system.run[cat /sys/bus/w1/devices/{#DEVICE}/w1_slave | tail -n +2 | cut -d= -f2-].nodata(180)}=1</expression>
                    </dependency>
                  </dependencies>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>({avg(180)}>=27 and {avg(180)}&lt;30 and {$GROUP:"{#DEVICE}"}=0) or ({avg(180)}>=32 and {avg(180)}&lt;35 and {$GROUP:"{#DEVICE}"}=1)</expression>
                  <name>Temperature high on probe "{$PROBE:"{#DEVICE}"}"</name>
                  <priority>WARNING</priority>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>({avg(180)}>=17 and {avg(180)}&lt;20 and {$GROUP:"{#DEVICE}"}=0) or ({avg(180)}>=10 and {avg(180)}&lt;14 and {$GROUP:"{#DEVICE}"}=1)</expression>
                  <name>Temperature low on probe "{$PROBE:"{#DEVICE}"}"</name>
                  <priority>WARNING</priority>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
          </item_prototypes>
          <preprocessing>
            <step>
              <type>JAVASCRIPT</type>
              <params>var lld = []; var lines = value.split("\n"); var lines_num = lines.length; for (i = 0; i &lt; lines_num; i++) { var row = {}; row["{#DEVICE}"] = lines[i] lld.push(row); } return JSON.stringify(lld);</params>
            </step>
          </preprocessing>
        </discovery_rule>
      </discovery_rules>
      <macros>
        <macro>
          <macro>{$GROUP}</macro>
          <value>0</value>
          <description>Default Group</description>
        </macro>
      </macros>
    </template>
  </templates>
</zabbix_export>