<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
  <version>5.0</version>
  <date>2021-10-22T10:56:22Z</date>
  <groups>
    <group>
      <name>C_templates</name>
    </group>
    <group>
      <name>Templates/Modules</name>
    </group>
  </groups>
  <templates>
    <template>
      <template>Generic Cisco</template>
      <name>Generic Cisco</name>
      <templates>
        <template>
          <name>Template Module ICMP Ping</name>
        </template>
      </templates>
      <groups>
        <group>
          <name>C_templates</name>
        </group>
      </groups>
      <applications>
        <application>
          <name>CPU</name>
        </application>
        <application>
          <name>Fans</name>
        </application>
        <application>
          <name>Information</name>
        </application>
        <application>
          <name>Interface status</name>
        </application>
        <application>
          <name>Inventory</name>
        </application>
        <application>
          <name>Memory</name>
        </application>
        <application>
          <name>Network Interfaces</name>
        </application>
        <application>
          <name>System</name>
        </application>
      </applications>
      <items>
        <item>
          <name>Used CPU for the last 5 minutes</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>1.3.6.1.4.1.9.9.109.1.1.1.1.8.1</snmp_oid>
          <key>ciscoCpmCPUTotal5minRev</key>
          <delay>5m</delay>
          <history>1w</history>
          <trends>30d</trends>
          <units>%</units>
          <applications>
            <application>
              <name>System</name>
            </application>
          </applications>
        </item>
        <item>
          <name>IOS Version</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>.1.3.6.1.4.1.9.9.25.1.1.1.2.5</snmp_oid>
          <key>ciscoImageString</key>
          <delay>1008m</delay>
          <history>1w</history>
          <trends>0</trends>
          <value_type>CHAR</value_type>
          <inventory_link>OS</inventory_link>
          <applications>
            <application>
              <name>Information</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Unused memory for the last 5 minutes</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>.1.3.6.1.4.1.9.9.48.1.1.1.6.1</snmp_oid>
          <key>ciscoMemoryPoolFree</key>
          <delay>5m</delay>
          <history>1w</history>
          <trends>30d</trends>
          <units>bytes</units>
          <applications>
            <application>
              <name>System</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Used memory for the last 5 minutes</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>.1.3.6.1.4.1.9.9.48.1.1.1.5.1</snmp_oid>
          <key>ciscoMemoryPoolUsed</key>
          <delay>5m</delay>
          <history>1w</history>
          <trends>30d</trends>
          <units>bytes</units>
          <applications>
            <application>
              <name>System</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Device Model Name</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>.1.3.6.1.2.1.47.1.1.1.1.13["index",".1.3.6.1.2.1.47.1.1.1.1.4","0"]</snmp_oid>
          <key>ciscoPhysicalModelName</key>
          <delay>1d</delay>
          <trends>0</trends>
          <value_type>CHAR</value_type>
          <description>.1.3.6.1.2.1.47.1.1.1.1.13["index",".1.3.6.1.2.1.47.1.1.1.1.4","0"]</description>
          <inventory_link>TYPE</inventory_link>
          <applications>
            <application>
              <name>Information</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Device Serial Number</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>.1.3.6.1.2.1.47.1.1.1.1.11["index",".1.3.6.1.2.1.47.1.1.1.1.4","0"]</snmp_oid>
          <key>ciscoPhysicalSerialNum</key>
          <delay>1d</delay>
          <trends>0</trends>
          <value_type>CHAR</value_type>
          <description>.1.3.6.1.2.1.47.1.1.1.1.11["index",".1.3.6.1.2.1.47.1.1.1.1.4","0"] = original snmp oid</description>
          <inventory_link>SERIALNO_A</inventory_link>
          <applications>
            <application>
              <name>Information</name>
            </application>
          </applications>
        </item>
        <item>
          <name>System name</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>.1.3.6.1.2.1.1.5.0</snmp_oid>
          <key>Cisco_sysName</key>
          <delay>30s</delay>
          <trends>0</trends>
          <value_type>TEXT</value_type>
          <applications>
            <application>
              <name>Information</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Uptime</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>SNMPv2-MIB::sysUpTime.0</snmp_oid>
          <key>sysUpTime</key>
          <delay>30m</delay>
          <history>30d</history>
          <trends>30d</trends>
          <units>uptime</units>
          <applications>
            <application>
              <name>Information</name>
            </application>
          </applications>
        </item>
      </items>
      <discovery_rules>
        <discovery_rule>
          <name>Cisco Fan</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#FANVAL}, 1.3.6.1.4.1.9.9.13.1.4.1.2]</snmp_oid>
          <key>ciscoEnvMonFanStatusDescr</key>
          <delay>5m</delay>
          <lifetime>1w</lifetime>
          <item_prototypes>
            <item_prototype>
              <name>$1 state</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.4.1.9.9.13.1.4.1.3.{#SNMPINDEX}</snmp_oid>
              <key>ciscoEnvMonFanState[{#FANVAL}]</key>
              <delay>1d</delay>
              <history>1w</history>
              <applications>
                <application>
                  <name>System</name>
                </application>
              </applications>
              <valuemap>
                <name>ciscoEnvMonState</name>
              </valuemap>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last(0)}=3</expression>
                  <name>Operational status for {#SNMPVALUE} is CRITICAL</name>
                  <status>DISABLED</status>
                  <priority>HIGH</priority>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>{last(0)}=4</expression>
                  <name>Operational status for {#SNMPVALUE} is Failed</name>
                  <status>DISABLED</status>
                  <priority>DISASTER</priority>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>{last(0)}=2</expression>
                  <name>Operational status for {#SNMPVALUE} is WARNING</name>
                  <status>DISABLED</status>
                  <priority>WARNING</priority>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>{diff(0)}>0</expression>
                  <name>Operational status for {#SNMPVALUE} was changed</name>
                  <status>DISABLED</status>
                  <priority>INFO</priority>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
          </item_prototypes>
        </discovery_rule>
        <discovery_rule>
          <name>Cisco Power Supply</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#POWERSUP}, 1.3.6.1.4.1.9.9.13.1.5.1.2]</snmp_oid>
          <key>ciscoEnvMonSupplyStatusDescr</key>
          <delay>5m</delay>
          <lifetime>1w</lifetime>
          <item_prototypes>
            <item_prototype>
              <name>$1 state</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.4.1.9.9.13.1.5.1.3.{#SNMPINDEX}</snmp_oid>
              <key>ciscoEnvMonSupplyState[{#POWERSUP}]</key>
              <delay>1d</delay>
              <history>1w</history>
              <trends>30d</trends>
              <applications>
                <application>
                  <name>System</name>
                </application>
              </applications>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last(0)}=3</expression>
                  <name>Operational status for {#SNMPVALUE} is CRITICAL</name>
                  <status>DISABLED</status>
                  <priority>HIGH</priority>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>{last(0)}=4</expression>
                  <name>Operational status for {#SNMPVALUE} is FAILED</name>
                  <status>DISABLED</status>
                  <priority>DISASTER</priority>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>{last(0)}=2</expression>
                  <name>Operational status for {#SNMPVALUE} is WARNING</name>
                  <status>DISABLED</status>
                  <priority>WARNING</priority>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>{diff(0)}>0</expression>
                  <name>Operational status for {#SNMPVALUE} was changed</name>
                  <status>DISABLED</status>
                  <priority>HIGH</priority>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
          </item_prototypes>
        </discovery_rule>
        <discovery_rule>
          <name>Cisco Temperature</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#CHASSISTEMP}, 1.3.6.1.4.1.9.9.13.1.3.1.2]</snmp_oid>
          <key>ciscoEnvMonTemperatureStatusDescr</key>
          <delay>30m</delay>
          <item_prototypes>
            <item_prototype>
              <name>Temperature state of $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.4.1.9.9.13.1.3.1.6.{#SNMPINDEX}</snmp_oid>
              <key>ciscoEnvMonTemperatureState[{#CHASSISTEMP}]</key>
              <delay>30m</delay>
              <history>31d</history>
              <applications>
                <application>
                  <name>System</name>
                </application>
              </applications>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last(0)}=3</expression>
                  <name>Operational status for sensor {#SNMPVALUE} is CRITICAL</name>
                  <status>DISABLED</status>
                  <priority>HIGH</priority>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>{last(0)}=4</expression>
                  <name>Operational status for sensor {#SNMPVALUE} is FAILED</name>
                  <status>DISABLED</status>
                  <priority>DISASTER</priority>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>{last(0)}=2</expression>
                  <name>Operational status for sensor {#SNMPVALUE} is WARNING</name>
                  <status>DISABLED</status>
                  <priority>WARNING</priority>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>{diff(0)}>0</expression>
                  <name>Operational status for sensor {#SNMPVALUE} was changed</name>
                  <status>DISABLED</status>
                  <priority>HIGH</priority>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>Temperature value of $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.4.1.9.9.13.1.3.1.3.{#SNMPINDEX}</snmp_oid>
              <key>ciscoEnvMonTemperatureStatusValue[{#CHASSISTEMP}]</key>
              <delay>30m</delay>
              <history>31d</history>
              <units>°C</units>
              <applications>
                <application>
                  <name>System</name>
                </application>
              </applications>
            </item_prototype>
          </item_prototypes>
          <graph_prototypes>
            <graph_prototype>
              <name>Temperature of {#SNMPVALUE}</name>
              <graph_items>
                <graph_item>
                  <drawtype>GRADIENT_LINE</drawtype>
                  <color>FFEE58</color>
                  <item>
                    <host>Generic Cisco</host>
                    <key>ciscoEnvMonTemperatureStatusValue[{#CHASSISTEMP}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
          </graph_prototypes>
        </discovery_rule>
        <discovery_rule>
          <name>Network Interfaces</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#IFDESCR},IF-MIB::ifDescr,{#IFALIAS},IF-MIB::ifAlias]</snmp_oid>
          <key>cis_fDescr</key>
          <delay>30s</delay>
          <lifetime>0d</lifetime>
        </discovery_rule>
        <discovery_rule>
          <name>CPU Discovery</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.9.9.109.1.1.1.1.5]</snmp_oid>
          <key>cpu.discovery</key>
          <delay>1h</delay>
          <description>If your IOS device has several CPUs, you must use CISCO-PROCESS-MIB and its object cpmCPUTotal5minRev from the table called cpmCPUTotalTable , indexed with cpmCPUTotalIndex . This table allows CISCO-PROCESS-MIB to keep CPU statistics for different physical entities in the router, like different CPU chips, group of CPUs, or CPUs in different modules/cards. In case of a single CPU, cpmCPUTotalTable has only one entry.</description>
          <item_prototypes>
            <item_prototype>
              <name>#{#SNMPINDEX}: CPU utilization</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.4.1.9.9.109.1.1.1.1.8.{#SNMPINDEX}</snmp_oid>
              <key>system.cpu.util[cpmCPUTotal5minRev.{#SNMPINDEX}]</key>
              <delay>3m</delay>
              <value_type>FLOAT</value_type>
              <units>%</units>
              <description>MIB: CISCO-PROCESS-MIB The cpmCPUTotal5minRev MIB object provides a more accurate view of the performance of the router over time than the MIB objects cpmCPUTotal1minRev and cpmCPUTotal5secRev . These MIB objects are not accurate because they look at CPU at one minute and five second intervals, respectively. These MIBs enable you to monitor the trends and plan the capacity of your network. The recommended baseline rising threshold for cpmCPUTotal5minRev is 90 percent. Depending on the platform, some routers that run at 90 percent, for example, 2500s, can exhibit performance degradation versus a high-end router, for example, the 7500 series, which can operate fine. Reference: http://www.cisco.com/c/en/us/support/docs/ip/simple-network-management-protocol-snmp/15215-collect-cpu-util-snmp.html</description>
              <applications>
                <application>
                  <name>CPU</name>
                </application>
              </applications>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{avg(5m)}>{$CPU_UTIL_MAX}</expression>
                  <name>#{#SNMPINDEX}: High CPU utilization</name>
                  <status>DISABLED</status>
                  <priority>AVERAGE</priority>
                  <description>Last value: {ITEM.LASTVALUE1}.</description>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
          </item_prototypes>
          <graph_prototypes>
            <graph_prototype>
              <name>#{#SNMPINDEX}: CPU utilization</name>
              <graph_items>
                <graph_item>
                  <color>1A7C11</color>
                  <item>
                    <host>Generic Cisco</host>
                    <key>system.cpu.util[cpmCPUTotal5minRev.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
          </graph_prototypes>
        </discovery_rule>
        <discovery_rule>
          <name>Entity Serial Numbers Discovery</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#ENT_CLASS},1.3.6.1.2.1.47.1.1.1.1.5,{#ENT_NAME},1.3.6.1.2.1.47.1.1.1.1.7,{#ENT_SN},1.3.6.1.2.1.47.1.1.1.1.11]</snmp_oid>
          <key>entity_sn.discovery</key>
          <delay>1h</delay>
          <item_prototypes>
            <item_prototype>
              <name>{#ENT_NAME}: Hardware serial number</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.47.1.1.1.1.11.{#SNMPINDEX}</snmp_oid>
              <key>system.hw.serialnumber[entPhysicalSerialNum.{#SNMPINDEX}]</key>
              <delay>1h</delay>
              <history>2w</history>
              <trends>0</trends>
              <value_type>CHAR</value_type>
              <description>MIB: ENTITY-MIB</description>
              <applications>
                <application>
                  <name>Inventory</name>
                </application>
              </applications>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{diff()}=1 and {strlen()}>0</expression>
                  <recovery_mode>NONE</recovery_mode>
                  <name>{#ENT_NAME}: Device has been replaced (new serial number received)</name>
                  <status>DISABLED</status>
                  <priority>INFO</priority>
                  <description>Last value: {ITEM.LASTVALUE1}. Device serial number has changed. Ack to close</description>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
          </item_prototypes>
        </discovery_rule>
        <discovery_rule>
          <name>FAN Discovery</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#SENSOR_INFO},1.3.6.1.4.1.9.9.13.1.4.1.2]</snmp_oid>
          <key>fan.discovery</key>
          <delay>1h</delay>
          <description>The table of fan status maintained by the environmental monitor.</description>
          <item_prototypes>
            <item_prototype>
              <name>{#SENSOR_INFO}: Fan status</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.4.1.9.9.13.1.4.1.3.{#SNMPINDEX}</snmp_oid>
              <key>sensor.fan.status[ciscoEnvMonFanState.{#SNMPINDEX}]</key>
              <history>2w</history>
              <trends>0</trends>
              <description>MIB: CISCO-ENVMON-MIB</description>
              <applications>
                <application>
                  <name>Fans</name>
                </application>
              </applications>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{count(#1,{$FAN_CRIT_STATUS:"critical"},eq)}=1 or {count(#1,{$FAN_CRIT_STATUS:"shutdown"},eq)}=1</expression>
                  <name>{#SENSOR_INFO}: Fan is in critical state</name>
                  <status>DISABLED</status>
                  <priority>AVERAGE</priority>
                  <description>Last value: {ITEM.LASTVALUE1}. Please check the fan unit</description>
                </trigger_prototype>
                <trigger_prototype>
                  <expression>{count(#1,{$FAN_WARN_STATUS:"warning"},eq)}=1 or {count(#1,{$FAN_WARN_STATUS:"notFunctioning"},eq)}=1</expression>
                  <name>{#SENSOR_INFO}: Fan is in warning state</name>
                  <status>DISABLED</status>
                  <priority>WARNING</priority>
                  <description>Last value: {ITEM.LASTVALUE1}. Please check the fan unit</description>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
          </item_prototypes>
        </discovery_rule>
        <discovery_rule>
          <name>Memory Discovery</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.9.9.48.1.1.1.2]</snmp_oid>
          <key>memory.discovery</key>
          <delay>1h</delay>
          <description>Discovery of ciscoMemoryPoolTable, a table of memory pool monitoring entries. http://www.cisco.com/c/en/us/support/docs/ip/simple-network-management-protocol-snmp/15216-contiguous-memory.html</description>
          <item_prototypes>
            <item_prototype>
              <name>{#SNMPVALUE}: Available memory</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.4.1.9.9.48.1.1.1.6.{#SNMPINDEX}</snmp_oid>
              <key>vm.memory.free[ciscoMemoryPoolFree.{#SNMPINDEX}]</key>
              <delay>3m</delay>
              <history>30d</history>
              <units>B</units>
              <description>MIB: CISCO-MEMORY-POOL-MIB Indicates the number of bytes from the memory pool that are currently unused on the managed device. Note that the sum of ciscoMemoryPoolUsed and ciscoMemoryPoolFree is the total amount of memory in the pool Reference: http://www.cisco.com/c/en/us/support/docs/ip/simple-network-management-protocol-snmp/15216-contiguous-memory.html</description>
              <applications>
                <application>
                  <name>Memory</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>{#SNMPVALUE}: Memory utilization</name>
              <type>CALCULATED</type>
              <key>vm.memory.pused[vm.memory.pused.{#SNMPINDEX}]</key>
              <delay>3m</delay>
              <history>30d</history>
              <units>%</units>
              <params>(last(vm.memory.used[ciscoMemoryPoolUsed.{#SNMPINDEX}])/(last(vm.memory.free[ciscoMemoryPoolFree.{#SNMPINDEX}])+last(vm.memory.used[ciscoMemoryPoolUsed.{#SNMPINDEX}])))*100</params>
              <description>Memory utilization in %</description>
              <applications>
                <application>
                  <name>Memory</name>
                </application>
              </applications>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{avg(5m)}>{$MEMORY_UTIL_MAX}</expression>
                  <name>{#SNMPVALUE}: High memory utilization</name>
                  <status>DISABLED</status>
                  <priority>AVERAGE</priority>
                  <description>Last value: {ITEM.LASTVALUE1}.</description>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>{#SNMPVALUE}: Used memory</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.4.1.9.9.48.1.1.1.5.{#SNMPINDEX}</snmp_oid>
              <key>vm.memory.used[ciscoMemoryPoolUsed.{#SNMPINDEX}]</key>
              <delay>3m</delay>
              <history>30d</history>
              <units>B</units>
              <description>MIB: CISCO-MEMORY-POOL-MIB Indicates the number of bytes from the memory pool that are currently in use by applications on the managed device. Reference: http://www.cisco.com/c/en/us/support/docs/ip/simple-network-management-protocol-snmp/15216-contiguous-memory.html</description>
              <applications>
                <application>
                  <name>Memory</name>
                </application>
              </applications>
            </item_prototype>
          </item_prototypes>
          <graph_prototypes>
            <graph_prototype>
              <name>{#SNMPVALUE}: Available Memory</name>
              <ymin_type_1>FIXED</ymin_type_1>
              <ymax_type_1>FIXED</ymax_type_1>
              <graph_items>
                <graph_item>
                  <color>1A7C11</color>
                  <item>
                    <host>Generic Cisco</host>
                    <key>vm.memory.free[ciscoMemoryPoolFree.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
            <graph_prototype>
              <name>{#SNMPVALUE}: Memory utilization</name>
              <ymin_type_1>FIXED</ymin_type_1>
              <ymax_type_1>FIXED</ymax_type_1>
              <graph_items>
                <graph_item>
                  <color>1A7C11</color>
                  <item>
                    <host>Generic Cisco</host>
                    <key>vm.memory.pused[vm.memory.pused.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
            <graph_prototype>
              <name>{#SNMPVALUE}: Used Memory</name>
              <ymin_type_1>FIXED</ymin_type_1>
              <ymax_type_1>FIXED</ymax_type_1>
              <graph_items>
                <graph_item>
                  <color>1A7C11</color>
                  <item>
                    <host>Generic Cisco</host>
                    <key>vm.memory.used[ciscoMemoryPoolUsed.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
          </graph_prototypes>
        </discovery_rule>
        <discovery_rule>
          <name>Cisco Device Model Name</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#SNMPVALUE}, .1.3.6.1.2.1.47.1.1.1.1.13]</snmp_oid>
          <key>modelName</key>
          <delay>1d</delay>
          <lifetime>0d</lifetime>
          <item_prototypes>
            <item_prototype>
              <name>Device Model Name at OID [{#SNMPINDEX}]</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.47.1.1.1.1.13["index", 1.3.6.1.2.1.47.1.1.1.1.13,{#SNMPVALUE}]</snmp_oid>
              <key>modelName[{#SNMPINDEX}]</key>
              <delay>1d</delay>
              <trends>0</trends>
              <value_type>TEXT</value_type>
              <applications>
                <application>
                  <name>Information</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>Device Serial Number at OID [{#SNMPINDEX}]</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.47.1.1.1.1.11.{#SNMPINDEX}</snmp_oid>
              <key>SerialNumber[{#SNMPINDEX}]</key>
              <delay>1d</delay>
              <trends>0</trends>
              <value_type>TEXT</value_type>
              <applications>
                <application>
                  <name>Information</name>
                </application>
              </applications>
            </item_prototype>
          </item_prototypes>
        </discovery_rule>
        <discovery_rule>
          <name>Network Interfaces Discovery</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#IFOPERSTATUS},1.3.6.1.2.1.2.2.1.8,{#IFADMINSTATUS},1.3.6.1.2.1.2.2.1.7,{#IFALIAS},1.3.6.1.2.1.31.1.1.1.18,{#IFNAME},1.3.6.1.2.1.31.1.1.1.1,{#IFDESCR},1.3.6.1.2.1.2.2.1.2,{#IFTYPE},1.3.6.1.2.1.2.2.1.3]</snmp_oid>
          <key>net.if.discovery</key>
          <delay>1h</delay>
          <description>Discovering interfaces from IF-MIB. Interfaces are not discovered: - with down(2) Administrative status - with notPresent(6) Operational status - loopbacks</description>
          <item_prototypes>
            <item_prototype>
              <name>Interface {#IFNAME}({#IFALIAS}): Inbound packets discarded</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.13.{#SNMPINDEX}</snmp_oid>
              <key>net.if.in.discards[ifInDiscards.{#SNMPINDEX}]</key>
              <delay>5m</delay>
              <history>1w</history>
              <description>MIB: IF-MIB The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable to a higher-layer protocol. One possible reason for discarding such a packet could be to free up buffer space. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
              <applications>
                <application>
                  <name>Network Interfaces</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFNAME}({#IFALIAS}): Inbound packets with errors</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.14.{#SNMPINDEX}</snmp_oid>
              <key>net.if.in.errors[ifInErrors.{#SNMPINDEX}]</key>
              <delay>3m</delay>
              <history>1w</history>
              <description>MIB: IF-MIB For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol. For character-oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
              <applications>
                <application>
                  <name>Network Interfaces</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFNAME}({#IFALIAS}): Bits received</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.31.1.1.1.6.{#SNMPINDEX}</snmp_oid>
              <key>net.if.in[ifHCInOctets.{#SNMPINDEX}]</key>
              <delay>3m</delay>
              <units>bps</units>
              <applications>
                <application>
                  <name>Network Interfaces</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFNAME}({#IFALIAS}): Outbound packets discarded</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.19.{#SNMPINDEX}</snmp_oid>
              <key>net.if.out.discards[ifOutDiscards.{#SNMPINDEX}]</key>
              <delay>5m</delay>
              <history>1w</history>
              <description>MIB: IF-MIB The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable to a higher-layer protocol. One possible reason for discarding such a packet could be to free up buffer space. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
              <applications>
                <application>
                  <name>Network Interfaces</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFNAME}({#IFALIAS}): Outbound packets with errors</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.20.{#SNMPINDEX}</snmp_oid>
              <key>net.if.out.errors[ifOutErrors.{#SNMPINDEX}]</key>
              <delay>30s</delay>
              <history>1w</history>
              <description>MIB: IF-MIB For packet-oriented interfaces, the number of outbound packets that contained errors preventing them from being deliverable to a higher-layer protocol. For character-oriented or fixed-length interfaces, the number of outbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
              <applications>
                <application>
                  <name>Network Interfaces</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFNAME}({#IFALIAS}): Bits sent</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.31.1.1.1.10.{#SNMPINDEX}</snmp_oid>
              <key>net.if.out[ifHCOutOctets.{#SNMPINDEX}]</key>
              <delay>3m</delay>
              <units>bps</units>
              <description>MIB: IF-MIB The total number of octets transmitted out of the interface, including framing characters. This object is a 64-bit version of ifOutOctets.Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
              <applications>
                <application>
                  <name>Network Interfaces</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFNAME}({#IFALIAS}): Speed</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.31.1.1.1.15.{#SNMPINDEX}</snmp_oid>
              <key>net.if.speed[ifHighSpeed.{#SNMPINDEX}]</key>
              <delay>5m</delay>
              <history>1w</history>
              <trends>0</trends>
              <units>bps</units>
              <description>MIB: IF-MIB An estimate of the interface's current bandwidth in units of 1,000,000 bits per second. If this object reports a value of `n' then the speed of the interface is somewhere in the range of `n-500,000' to`n+499,999'. For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth. For a sub-layer which has no concept of bandwidth, this object should be zero.</description>
              <applications>
                <application>
                  <name>Network Interfaces</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFNAME}({#IFALIAS}): Operational status</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.8.{#SNMPINDEX}</snmp_oid>
              <key>net.if.status[ifOperStatus.{#SNMPINDEX}]</key>
              <history>2w</history>
              <trends>0</trends>
              <description>MIB: IF-MIB The current operational state of the interface. - The testing(3) state indicates that no operational packet scan be passed - If ifAdminStatus is down(2) then ifOperStatus should be down(2) - If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic - It should change todormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection) - It should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state - It should remain in the notPresent(6) state if the interface has missing(typically, hardware) components.</description>
              <applications>
                <application>
                  <name>Network Interfaces</name>
                </application>
              </applications>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{$IFCONTROL:"{#IFNAME}"}=1 and ({last()}=2 and {diff()}=1)</expression>
                  <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                  <recovery_expression>{last()}&lt;>2</recovery_expression>
                  <name>Interface {#IFNAME}({#IFALIAS}): Link down</name>
                  <status>DISABLED</status>
                  <priority>AVERAGE</priority>
                  <description>Last value: {ITEM.LASTVALUE1}. Interface is down</description>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFNAME}({#IFALIAS}): Interface type</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.3.{#SNMPINDEX}</snmp_oid>
              <key>net.if.type[ifType.{#SNMPINDEX}]</key>
              <delay>1h</delay>
              <history>1w</history>
              <trends>0</trends>
              <description>MIB: IF-MIB The type of interface. Additional values for ifType are assigned by the Internet Assigned NumbersAuthority (IANA), through updating the syntax of the IANAifType textual convention.</description>
              <applications>
                <application>
                  <name>Network Interfaces</name>
                </application>
              </applications>
            </item_prototype>
          </item_prototypes>
          <trigger_prototypes>
            <trigger_prototype>
              <expression>{Generic Cisco:net.if.speed[ifHighSpeed.{#SNMPINDEX}].change()}&lt;0 and {Generic Cisco:net.if.speed[ifHighSpeed.{#SNMPINDEX}].last()}>0 and ( {Generic Cisco:net.if.type[ifType.{#SNMPINDEX}].last()}=6 or {Generic Cisco:net.if.type[ifType.{#SNMPINDEX}].last()}=7 or {Generic Cisco:net.if.type[ifType.{#SNMPINDEX}].last()}=11 or {Generic Cisco:net.if.type[ifType.{#SNMPINDEX}].last()}=62 or {Generic Cisco:net.if.type[ifType.{#SNMPINDEX}].last()}=69 or {Generic Cisco:net.if.type[ifType.{#SNMPINDEX}].last()}=117 ) and ({Generic Cisco:net.if.status[ifOperStatus.{#SNMPINDEX}].last()}&lt;>2)</expression>
              <name>Interface {#IFNAME}({#IFALIAS}): Ethernet has changed to lower speed than it was before</name>
              <status>DISABLED</status>
              <priority>INFO</priority>
              <description>({Cisco:net.if.speed[ifHighSpeed.{#SNMPINDEX}].change()}>0 and {Cisco:net.if.speed[ifHighSpeed.{#SNMPINDEX}].prev()}>0) or ({Cisco:net.if.status[ifOperStatus.{#SNMPINDEX}].last()}=2)</description>
            </trigger_prototype>
            <trigger_prototype>
              <expression>({Generic Cisco:net.if.in[ifHCInOctets.{#SNMPINDEX}].avg(15m)}>({$IF_UTIL_MAX:"{#IFNAME}"}/100)*{Generic Cisco:net.if.speed[ifHighSpeed.{#SNMPINDEX}].last()} or {Generic Cisco:net.if.out[ifHCOutOctets.{#SNMPINDEX}].avg(15m)}>({$IF_UTIL_MAX:"{#IFNAME}"}/100)*{Generic Cisco:net.if.speed[ifHighSpeed.{#SNMPINDEX}].last()}) and {Generic Cisco:net.if.speed[ifHighSpeed.{#SNMPINDEX}].last()}>0</expression>
              <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
              <recovery_expression>{Generic Cisco:net.if.in[ifHCInOctets.{#SNMPINDEX}].avg(15m)}&lt;(({$IF_UTIL_MAX:"{#IFNAME}"}-3)/100)*{Generic Cisco:net.if.speed[ifHighSpeed.{#SNMPINDEX}].last()} and {Generic Cisco:net.if.out[ifHCOutOctets.{#SNMPINDEX}].avg(15m)}&lt;(({$IF_UTIL_MAX:"{#IFNAME}"}-3)/100)*{Generic Cisco:net.if.speed[ifHighSpeed.{#SNMPINDEX}].last()}</recovery_expression>
              <name>Interface {#IFNAME}({#IFALIAS}): High bandwidth usage >{$IF_UTIL_MAX:"{#IFNAME}"}%</name>
              <status>DISABLED</status>
              <priority>WARNING</priority>
              <description>Last value: {ITEM.LASTVALUE1}.</description>
            </trigger_prototype>
            <trigger_prototype>
              <expression>{Generic Cisco:net.if.in.errors[ifInErrors.{#SNMPINDEX}].avg(5m)}>{$IF_ERRORS_WARN:"{#IFNAME}"} or {Generic Cisco:net.if.out.errors[ifOutErrors.{#SNMPINDEX}].avg(5m)}>{$IF_ERRORS_WARN:"{#IFNAME}"}</expression>
              <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
              <recovery_expression>{Generic Cisco:net.if.in.errors[ifInErrors.{#SNMPINDEX}].avg(5m)}&lt;{$IF_ERRORS_WARN:"{#IFNAME}"}*0.8 and {Generic Cisco:net.if.out.errors[ifOutErrors.{#SNMPINDEX}].avg(5m)}&lt;{$IF_ERRORS_WARN:"{#IFNAME}"}*0.8</recovery_expression>
              <name>Interface {#IFNAME}({#IFALIAS}): High error rate</name>
              <status>DISABLED</status>
              <priority>WARNING</priority>
              <description>Last value: {ITEM.LASTVALUE1}. Recovers when below 80% of {$IF_ERRORS_WARN:"{#IFNAME}"} threshold</description>
            </trigger_prototype>
          </trigger_prototypes>
          <graph_prototypes>
            <graph_prototype>
              <name>Interface {#IFNAME}({#IFALIAS}): Network traffic</name>
              <graph_items>
                <graph_item>
                  <color>1A7C11</color>
                  <item>
                    <host>Generic Cisco</host>
                    <key>net.if.in[ifHCInOctets.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
                <graph_item>
                  <sortorder>1</sortorder>
                  <color>F63100</color>
                  <item>
                    <host>Generic Cisco</host>
                    <key>net.if.out[ifHCOutOctets.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
                <graph_item>
                  <sortorder>2</sortorder>
                  <color>2774A4</color>
                  <item>
                    <host>Generic Cisco</host>
                    <key>net.if.in.discards[ifInDiscards.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
                <graph_item>
                  <sortorder>3</sortorder>
                  <color>A54F10</color>
                  <item>
                    <host>Generic Cisco</host>
                    <key>net.if.in.errors[ifInErrors.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
                <graph_item>
                  <sortorder>4</sortorder>
                  <color>FC6EA3</color>
                  <item>
                    <host>Generic Cisco</host>
                    <key>net.if.out.discards[ifOutDiscards.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
                <graph_item>
                  <sortorder>5</sortorder>
                  <color>6C59DC</color>
                  <item>
                    <host>Generic Cisco</host>
                    <key>net.if.out.errors[ifOutErrors.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
            <graph_prototype>
              <name>Interface {#IFNAME}({#IFALIAS}): Operational Status</name>
              <graph_items>
                <graph_item>
                  <color>1A7C11</color>
                  <item>
                    <host>Generic Cisco</host>
                    <key>net.if.status[ifOperStatus.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
          </graph_prototypes>
        </discovery_rule>
        <discovery_rule>
          <name>EtherLike-MIB Discovery</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.2.1.10.7.2.1.19,{#IFOPERSTATUS},1.3.6.1.2.1.2.2.1.8,{#IFALIAS},1.3.6.1.2.1.31.1.1.1.18,{#IFNAME},1.3.6.1.2.1.31.1.1.1.1,{#IFDESCR},1.3.6.1.2.1.2.2.1.2]</snmp_oid>
          <key>net.if.duplex.discovery</key>
          <delay>1h</delay>
          <description>Discovering interfaces from IF-MIB and EtherLike-MIB. Interfaces with up(1) Operational Status are discovered.</description>
          <item_prototypes>
            <item_prototype>
              <name>Interface {#IFNAME}({#IFALIAS}): Duplex status</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.10.7.2.1.19.{#SNMPINDEX}</snmp_oid>
              <key>net.if.duplex[dot3StatsDuplexStatus.{#SNMPINDEX}]</key>
              <delay>5m</delay>
              <history>1w</history>
              <trends>0</trends>
              <description>MIB: EtherLike-MIB The current mode of operation of the MAC entity. 'unknown' indicates that the current duplex mode could not be determined. Management control of the duplex mode is accomplished through the MAU MIB. When an interface does not support autonegotiation, or when autonegotiation is not enabled, the duplex mode is controlled using ifMauDefaultType. When autonegotiation is supported and enabled, duplex mode is controlled using ifMauAutoNegAdvertisedBits. In either case, the currently operating duplex mode is reflected both in this object and in ifMauType. Note that this object provides redundant information with ifMauType. Normally, redundant objects are discouraged. However, in this instance, it allows a management application to determine the duplex status of an interface without having to know every possible value of ifMauType. This was felt to be sufficiently valuable to justify the redundancy. Reference: [IEEE 802.3 Std.], 30.3.1.1.32,aDuplexStatus.</description>
              <applications>
                <application>
                  <name>Network Interfaces</name>
                </application>
              </applications>
              <valuemap>
                <name>EtherLike-MIB::dot3StatsDuplexStatus</name>
              </valuemap>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last()}=2</expression>
                  <name>Interface {#IFNAME}({#IFALIAS}): In half-duplex mode</name>
                  <status>DISABLED</status>
                  <priority>WARNING</priority>
                  <description>Last value: {ITEM.LASTVALUE1}. Please check autonegotiation settings and cabling</description>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
          </item_prototypes>
        </discovery_rule>
      </discovery_rules>
      <screens>
        <screen>
          <name>Performance screen</name>
          <hsize>3</hsize>
          <vsize>8</vsize>
          <screen_items>
            <screen_item>
              <resourcetype>0</resourcetype>
              <style>0</style>
              <resource>
                <name>ICMP Checks</name>
                <host>Generic Cisco</host>
              </resource>
              <width>500</width>
              <height>100</height>
              <x>0</x>
              <y>0</y>
              <colspan>1</colspan>
              <rowspan>1</rowspan>
              <elements>0</elements>
              <valign>0</valign>
              <halign>0</halign>
              <dynamic>0</dynamic>
              <sort_triggers>0</sort_triggers>
              <url></url>
              <application></application>
              <max_columns>3</max_columns>
            </screen_item>
            <screen_item>
              <resourcetype>7</resourcetype>
              <style>1</style>
              <resource>0</resource>
              <width>500</width>
              <height>100</height>
              <x>0</x>
              <y>5</y>
              <colspan>1</colspan>
              <rowspan>1</rowspan>
              <elements>0</elements>
              <valign>0</valign>
              <halign>0</halign>
              <dynamic>0</dynamic>
              <sort_triggers>0</sort_triggers>
              <url></url>
              <application></application>
              <max_columns>3</max_columns>
            </screen_item>
          </screen_items>
        </screen>
      </screens>
    </template>
    <template>
      <template>Template Module ICMP Ping</template>
      <name>Template Module ICMP Ping</name>
      <description>Template Module ICMP Ping version: 0.12</description>
      <groups>
        <group>
          <name>Templates/Modules</name>
        </group>
      </groups>
      <applications>
        <application>
          <name>Status</name>
        </application>
      </applications>
      <items>
        <item>
          <name>ICMP ping</name>
          <type>SIMPLE</type>
          <key>icmpping</key>
          <delay>60</delay>
          <history>1w</history>
          <applications>
            <application>
              <name>Status</name>
            </application>
          </applications>
          <valuemap>
            <name>Service state</name>
          </valuemap>
          <triggers>
            <trigger>
              <expression>{max(#3)}=0</expression>
              <name>Unavailable by ICMP ping</name>
              <priority>HIGH</priority>
              <description>Last value: {ITEM.LASTVALUE1}. Last three attempts returned timeout. Please check device connectivity.</description>
            </trigger>
          </triggers>
        </item>
        <item>
          <name>ICMP loss</name>
          <type>SIMPLE</type>
          <key>icmppingloss</key>
          <delay>60</delay>
          <history>1w</history>
          <value_type>FLOAT</value_type>
          <units>%</units>
          <applications>
            <application>
              <name>Status</name>
            </application>
          </applications>
          <triggers>
            <trigger>
              <expression>{min(5m)}>{$ICMP_LOSS_WARN} and {min(5m)}&lt;100</expression>
              <name>High ICMP ping loss</name>
              <priority>WARNING</priority>
              <dependencies>
                <dependency>
                  <name>Unavailable by ICMP ping</name>
                  <expression>{Template Module ICMP Ping:icmpping.max(#3)}=0</expression>
                </dependency>
              </dependencies>
            </trigger>
          </triggers>
        </item>
        <item>
          <name>ICMP response time</name>
          <type>SIMPLE</type>
          <key>icmppingsec</key>
          <delay>60</delay>
          <history>1w</history>
          <value_type>FLOAT</value_type>
          <units>s</units>
          <applications>
            <application>
              <name>Status</name>
            </application>
          </applications>
          <triggers>
            <trigger>
              <expression>{avg(5m)}>{$ICMP_RESPONSE_TIME_WARN}</expression>
              <name>High ICMP ping response time</name>
              <priority>WARNING</priority>
              <dependencies>
                <dependency>
                  <name>High ICMP ping loss</name>
                  <expression>{Template Module ICMP Ping:icmppingloss.min(5m)}>{$ICMP_LOSS_WARN} and {Template Module ICMP Ping:icmppingloss.min(5m)}&lt;100</expression>
                </dependency>
                <dependency>
                  <name>Unavailable by ICMP ping</name>
                  <expression>{Template Module ICMP Ping:icmpping.max(#3)}=0</expression>
                </dependency>
              </dependencies>
            </trigger>
          </triggers>
        </item>
      </items>
      <macros>
        <macro>
          <macro>{$ICMP_LOSS_WARN}</macro>
          <value>20</value>
        </macro>
        <macro>
          <macro>{$ICMP_RESPONSE_TIME_WARN}</macro>
          <value>0.15</value>
        </macro>
      </macros>
    </template>
  </templates>
  <graphs>
    <graph>
      <name>Device Uptime</name>
      <graph_items>
        <graph_item>
          <color>1A7C11</color>
          <item>
            <host>Generic Cisco</host>
            <key>sysUpTime</key>
          </item>
        </graph_item>
      </graph_items>
    </graph>
    <graph>
      <name>ICMP Checks</name>
      <show_work_period>NO</show_work_period>
      <graph_items>
        <graph_item>
          <color>1A7C11</color>
          <item>
            <host>Generic Cisco</host>
            <key>icmppingloss</key>
          </item>
        </graph_item>
        <graph_item>
          <sortorder>1</sortorder>
          <color>F63100</color>
          <item>
            <host>Generic Cisco</host>
            <key>icmpping</key>
          </item>
        </graph_item>
        <graph_item>
          <sortorder>2</sortorder>
          <color>2774A4</color>
          <item>
            <host>Generic Cisco</host>
            <key>icmppingsec</key>
          </item>
        </graph_item>
      </graph_items>
    </graph>
    <graph>
      <name>Memory Usage</name>
      <graph_items>
        <graph_item>
          <drawtype>FILLED_REGION</drawtype>
          <color>FFBF00</color>
          <item>
            <host>Generic Cisco</host>
            <key>ciscoMemoryPoolUsed</key>
          </item>
        </graph_item>
        <graph_item>
          <sortorder>1</sortorder>
          <drawtype>BOLD_LINE</drawtype>
          <color>FF4000</color>
          <item>
            <host>Generic Cisco</host>
            <key>ciscoMemoryPoolFree</key>
          </item>
        </graph_item>
      </graph_items>
    </graph>
    <graph>
      <name>Used CPU</name>
      <graph_items>
        <graph_item>
          <color>1A7C11</color>
          <item>
            <host>Generic Cisco</host>
            <key>ciscoCpmCPUTotal5minRev</key>
          </item>
        </graph_item>
      </graph_items>
    </graph>
  </graphs>
  <value_maps>
    <value_map>
      <name>ciscoEnvMonState</name>
      <mappings>
        <mapping>
          <value>1</value>
          <newvalue>normal</newvalue>
        </mapping>
        <mapping>
          <value>2</value>
          <newvalue>warning</newvalue>
        </mapping>
        <mapping>
          <value>3</value>
          <newvalue>critical</newvalue>
        </mapping>
        <mapping>
          <value>4</value>
          <newvalue>shutdown</newvalue>
        </mapping>
        <mapping>
          <value>5</value>
          <newvalue>notPresent</newvalue>
        </mapping>
        <mapping>
          <value>6</value>
          <newvalue>notFunctioning</newvalue>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>EtherLike-MIB::dot3StatsDuplexStatus</name>
      <mappings>
        <mapping>
          <value>1</value>
          <newvalue>unknown</newvalue>
        </mapping>
        <mapping>
          <value>2</value>
          <newvalue>halfDuplex</newvalue>
        </mapping>
        <mapping>
          <value>3</value>
          <newvalue>fullDuplex</newvalue>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>Service state</name>
      <mappings>
        <mapping>
          <value>0</value>
          <newvalue>Down</newvalue>
        </mapping>
        <mapping>
          <value>1</value>
          <newvalue>Up</newvalue>
        </mapping>
      </mappings>
    </value_map>
  </value_maps>
</zabbix_export>