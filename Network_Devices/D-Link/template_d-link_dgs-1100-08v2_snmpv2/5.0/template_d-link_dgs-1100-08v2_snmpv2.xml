<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
  <version>5.0</version>
  <date>2021-10-22T10:11:51Z</date>
  <groups>
    <group>
      <name>Templates/Modules</name>
    </group>
  </groups>
  <templates>
    <template>
      <template>D-Link DGS 1100</template>
      <name>D-Link DGS 1100</name>
      <groups>
        <group>
          <name>Templates/Modules</name>
        </group>
      </groups>
      <items>
        <item>
          <name>Desctiption</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>.1.3.6.1.2.1.1.1.0</snmp_oid>
          <key>SYSDescr</key>
          <delay>24h</delay>
          <trends>0</trends>
          <value_type>TEXT</value_type>
          <inventory_link>MODEL</inventory_link>
        </item>
        <item>
          <name>Location</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>.1.3.6.1.2.1.1.6.0</snmp_oid>
          <key>SYSLocation</key>
          <delay>24h</delay>
          <trends>0</trends>
          <value_type>TEXT</value_type>
          <inventory_link>LOCATION</inventory_link>
        </item>
        <item>
          <name>Uptime</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>.1.3.6.1.2.1.1.8.0</snmp_oid>
          <key>SYSUptime</key>
          <trends>0</trends>
          <value_type>TEXT</value_type>
        </item>
      </items>
      <discovery_rules>
        <discovery_rule>
          <name>Network Interface Discovery</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#IFDESCR}, ifDescr]</snmp_oid>
          <key>net.if.discovery</key>
          <item_prototypes>
            <item_prototype>
              <name>Interface {#IFDESCR} Inbound packets discarded</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.13.{#SNMPINDEX}</snmp_oid>
              <key>net.if.in.discards[ifInDiscards.{#SNMPINDEX}]</key>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFDESCR}: Inbound packets with errors</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.14.{#SNMPINDEX}</snmp_oid>
              <key>net.if.in.errors[ifInErrors.{#SNMPINDEX}]</key>
            </item_prototype>
            <item_prototype>
              <name>Bits received: {#IFDESCR}</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.31.1.1.1.6.{#SNMPINDEX}</snmp_oid>
              <key>net.if.in[ifHCInOctets.{#SNMPINDEX}]</key>
              <units>bps</units>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFDESCR}: Outbound packets discarded</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.19.{#SNMPINDEX}</snmp_oid>
              <key>net.if.out.discards[ifOutDiscards.{#SNMPINDEX}]</key>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFDESCR}: Outbound packets with errors</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.20.{#SNMPINDEX}</snmp_oid>
              <key>net.if.out.errors[ifOutErrors.{#SNMPINDEX}]</key>
            </item_prototype>
            <item_prototype>
              <name>Bits sent: {#IFDESCR}</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.31.1.1.1.10.{#SNMPINDEX}</snmp_oid>
              <key>net.if.out[ifHCOutOctets.{#SNMPINDEX}]</key>
              <units>bps</units>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFDESCR}: Speed</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.5.{#SNMPINDEX}</snmp_oid>
              <key>net.if.speed[ifSpeed.{#SNMPINDEX}]</key>
              <delay>5m</delay>
              <units>bps</units>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFDESCR}: Operational status</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.8.{#SNMPINDEX}</snmp_oid>
              <key>net.if.status[ifOperStatus.{#SNMPINDEX}]</key>
              <trends>0</trends>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last()}=2 and {diff()}=1</expression>
                  <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                  <recovery_expression>{last()}&lt;>2</recovery_expression>
                  <name>Interface {#IFDESCR}: Link down</name>
                  <priority>AVERAGE</priority>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFDESCR}: Interface description</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.2.{#SNMPINDEX}</snmp_oid>
              <key>net.if.type[ifDescr.{#SNMPINDEX}]</key>
              <delay>1h</delay>
              <trends>0</trends>
              <value_type>TEXT</value_type>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFDESCR}: Interface last change</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.9.{#SNMPINDEX}</snmp_oid>
              <key>net.if.type[ifLastChange.{#SNMPINDEX}]</key>
              <delay>10m</delay>
              <units>uptime</units>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFDESCR}: Interface MAC address</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.6.{#SNMPINDEX}</snmp_oid>
              <key>net.if.type[ifPhysAddress.{#SNMPINDEX}]</key>
              <delay>1h</delay>
              <trends>0</trends>
              <value_type>TEXT</value_type>
            </item_prototype>
            <item_prototype>
              <name>Interface {#IFDESCR}: Interface type</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.2.1.2.2.1.3.{#SNMPINDEX}</snmp_oid>
              <key>net.if.type[ifType.{#SNMPINDEX}]</key>
              <delay>1h</delay>
              <trends>0</trends>
            </item_prototype>
          </item_prototypes>
          <graph_prototypes>
            <graph_prototype>
              <name>Bits sent/received {#IFDESCR}</name>
              <graph_items>
                <graph_item>
                  <drawtype>BOLD_LINE</drawtype>
                  <color>199C0D</color>
                  <item>
                    <host>D-Link DGS 1100</host>
                    <key>net.if.out[ifHCOutOctets.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
                <graph_item>
                  <sortorder>1</sortorder>
                  <drawtype>BOLD_LINE</drawtype>
                  <color>F63100</color>
                  <item>
                    <host>D-Link DGS 1100</host>
                    <key>net.if.in[ifHCInOctets.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
            <graph_prototype>
              <name>Inbound/Outbound packets discarded {#IFDESCR}</name>
              <graph_items>
                <graph_item>
                  <color>199C0D</color>
                  <item>
                    <host>D-Link DGS 1100</host>
                    <key>net.if.in.discards[ifInDiscards.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
                <graph_item>
                  <sortorder>1</sortorder>
                  <color>F63100</color>
                  <item>
                    <host>D-Link DGS 1100</host>
                    <key>net.if.out.discards[ifOutDiscards.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
            <graph_prototype>
              <name>Inbound/Outbound packets with errors {#IFDESCR}</name>
              <graph_items>
                <graph_item>
                  <color>199C0D</color>
                  <item>
                    <host>D-Link DGS 1100</host>
                    <key>net.if.in.errors[ifInErrors.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
                <graph_item>
                  <sortorder>1</sortorder>
                  <color>F63100</color>
                  <item>
                    <host>D-Link DGS 1100</host>
                    <key>net.if.out.errors[ifOutErrors.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
            <graph_prototype>
              <name>Speed of {#IFDESCR}</name>
              <graph_items>
                <graph_item>
                  <drawtype>GRADIENT_LINE</drawtype>
                  <color>199C0D</color>
                  <item>
                    <host>D-Link DGS 1100</host>
                    <key>net.if.speed[ifSpeed.{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
          </graph_prototypes>
        </discovery_rule>
      </discovery_rules>
    </template>
  </templates>
</zabbix_export>