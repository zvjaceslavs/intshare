<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>5.0</version><date>2021-11-21T22:02:56Z</date><groups><group><name>Templates</name></group></groups><templates><template><template>s 3CX ODBC</template><name>s 3CX ODBC</name><description>## Overview

This tempalte is used in 3CX linux servers, it is necessary to create a postgresql ODBC connector to perform the collections and to change the {$ DSN3CX} macro to the name of the created connector.


 


To check the DB credentials, I checked the file &quot;/var/lib/3cxpbx/Bin/3CXSystemService.exe.config&quot;


and edit pg\_hba.conf to release remote connections.


 


Note: only release the IP of the zabbix proxy or server for security reasons.


 


Itens: 


- Discovery of trunks and extensions


- Calls today, 7 days and this month


 


Extensions:


- User Extension Last Register


- User Extension Status


- User First Name


- User Last Name 


- User Mail


 


Trunks:


- Gateway Host


- Gateway Max Calls


- Gateway Port


- Number of associated routes



</description><groups><group><name>Templates</name></group></groups><applications><application><name>Calls</name></application></applications><items><item><name>Number of Calls in the last 7 days</name><type>ODBC</type><key>db.odbc.select[calls.7days,{$DSN3CX}]</key><delay>5m</delay><params>SELECT count(id) FROM cl_calls where start_time &gt;= current_date - interval '7 day';</params><applications><application><name>Calls</name></application></applications></item><item><name>Number of Calls in this month</name><type>ODBC</type><key>db.odbc.select[calls.month,{$DSN3CX}]</key><delay>5m</delay><params>SELECT count(id) FROM cl_calls where start_time::text LIKE TO_CHAR(now(),'YYYY-mm-%');</params><applications><application><name>Calls</name></application></applications></item><item><name>Number of Calls Today</name><type>ODBC</type><key>db.odbc.select[calls.total,{$DSN3CX}]</key><delay>5m</delay><params>SELECT count(id) FROM cl_calls where start_time &gt;= current_date;</params><applications><application><name>Calls</name></application></applications></item></items><discovery_rules><discovery_rule><name>Discovery Gateways</name><type>ODBC</type><key>db.odbc.discovery[discovery.gws,{$DSN3CX}]</key><delay>1h</delay><params>SELECT idgateway, name, model, host, port,maxlines,gatewaytype FROM gateway;</params><item_prototypes><item_prototype><name>Gateway Host</name><type>ODBC</type><key>db.odbc.select[gw.host-{#IDGATEWAY},{$DSN3CX}]</key><delay>1h</delay><trends>0</trends><value_type>TEXT</value_type><params>SELECT host FROM gateway WHERE idgateway = '{#IDGATEWAY}';</params><application_prototypes><application_prototype><name>Gateway : {#NAME}</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>Gateway Max Calls</name><type>ODBC</type><key>db.odbc.select[gw.max-calls-{#IDGATEWAY},{$DSN3CX}]</key><delay>1h</delay><params>SELECT maxcalls FROM externalline WHERE fkidgateway = '{#IDGATEWAY}';</params><application_prototypes><application_prototype><name>Gateway : {#NAME}</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>Number of associated routes</name><type>ODBC</type><key>db.odbc.select[gw.number-routes-{#IDGATEWAY},{$DSN3CX}]</key><delay>1h</delay><params>SELECT COUNT (*) FROM outboundroute WHERE fkidgateway = '{#IDGATEWAY}';</params><application_prototypes><application_prototype><name>Gateway : {#NAME}</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>Gateway Port</name><type>ODBC</type><key>db.odbc.select[gw.port-{#IDGATEWAY},{$DSN3CX}]</key><delay>1h</delay><params>SELECT port FROM gateway WHERE idgateway = '{#IDGATEWAY}';</params><application_prototypes><application_prototype><name>Gateway : {#NAME}</name></application_prototype></application_prototypes></item_prototype></item_prototypes></discovery_rule><discovery_rule><name>Discovery Users</name><type>ODBC</type><key>db.odbc.discovery[discovery.users,{$DSN3CX}]</key><delay>1h</delay><params>SELECT fkidextension, firstname, lastname, value FROM users INNER JOIN dn ON (users.fkidextension = dn.iddn );</params><item_prototypes><item_prototype><name>User Last Name</name><type>ODBC</type><key>db.odbc.select[ext.user.lastname-{#FKIDEXTENSION},{$DSN3CX}]</key><delay>1h</delay><trends>0</trends><value_type>TEXT</value_type><params>SELECT lastname FROM users WHERE fkidextension = '{#FKIDEXTENSION}';</params><application_prototypes><application_prototype><name>Extension: {#VALUE}</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>User First Name</name><type>ODBC</type><key>db.odbc.select[ext.username-{#FKIDEXTENSION},{$DSN3CX}]</key><delay>1h</delay><trends>0</trends><value_type>TEXT</value_type><params>SELECT firstname FROM users WHERE fkidextension = '{#FKIDEXTENSION}';</params><application_prototypes><application_prototype><name>Extension: {#VALUE}</name></application_prototype></application_prototypes></item_prototype><item_prototype><name>User Extension Last Register</name><type>ODBC</type><key>db.odbc.select[user-last-resgister-{#FKIDEXTENSION},{$DSN3CX}]</key><trends>0</trends><value_type>TEXT</value_type><params>SELECT timegenerated FROM eventlog WHERE params::text LIKE '{{#VALUE},&quot;registered,%' ORDER BY ideventlog DESC LIMIT 1;</params><application_prototypes><application_prototype><name>Extension: {#VALUE}</name></application_prototype></application_prototypes><preprocessing><step><type>JAVASCRIPT</type><params>if(value == '') {
   value = 0
}return value</params></step></preprocessing></item_prototype><item_prototype><name>User Extension Status</name><type>ODBC</type><key>db.odbc.select[user-last-status-{#FKIDEXTENSION},{$DSN3CX}]</key><params>SELECT params FROM eventlog WHERE params::text LIKE '{{#VALUE},&quot;%registered,%' ORDER BY ideventlog DESC LIMIT 1;</params><application_prototypes><application_prototype><name>Extension: {#VALUE}</name></application_prototype></application_prototypes><valuemap><name>3CX Status</name></valuemap><preprocessing><step><type>REGEX</type><params>unregistered
0</params><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>1</error_handler_params></step></preprocessing></item_prototype><item_prototype><name>User Mail</name><type>ODBC</type><key>db.odbc.select[user.mail-{#FKIDEXTENSION},{$DSN3CX}]</key><delay>1h</delay><trends>0</trends><value_type>TEXT</value_type><params>SELECT email FROM voicemail AS vm INNER JOIN users AS usr ON (vm.fkiduser = usr.iduser) WHERE fkidextension = '{#FKIDEXTENSION}';</params><application_prototypes><application_prototype><name>Extension: {#VALUE}</name></application_prototype></application_prototypes><preprocessing><step><type>JAVASCRIPT</type><params>if(value == '') {
   value = 0
}return value</params></step></preprocessing></item_prototype></item_prototypes></discovery_rule></discovery_rules><macros><macro><macro>{$DSN3CX}</macro><value>3CXDB</value></macro></macros></template></templates><value_maps><value_map><name>3CX Status</name><mappings><mapping><value>0</value><newvalue>unregistered</newvalue></mapping><mapping><value>1</value><newvalue>registered</newvalue></mapping></mappings></value_map></value_maps></zabbix_export>
