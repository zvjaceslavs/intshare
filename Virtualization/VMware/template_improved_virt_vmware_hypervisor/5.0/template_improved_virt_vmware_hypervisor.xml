<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>5.0</version><date>2021-11-21T21:27:53Z</date><groups><group><name>Templates</name></group></groups><templates><template><template>Template Virt VMware Hypervisor</template><name>Template Virt VMware Hypervisor</name><groups><group><name>Templates</name></group></groups><applications><application><name>CPU</name></application><application><name>Datastore</name></application><application><name>General</name></application><application><name>Hardware</name></application><application><name>Memory</name></application><application><name>Network</name></application></applications><items><item><name>Cluster name</name><type>SIMPLE</type><key>vmware.hv.cluster.name[{$URL},{HOST.HOST}]</key><delay>3600</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>Cluster name of the guest VM.</description><applications><application><name>General</name></application></applications></item><item><name>CPU usage</name><type>SIMPLE</type><key>vmware.hv.cpu.usage[{$URL},{HOST.HOST}]</key><delay>300</delay><history>7d</history><trends>30d</trends><units>Hz</units><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>Aggregated CPU usage across all cores on the host in Hz. This is only available if the host is connected.</description><applications><application><name>CPU</name></application></applications></item><item><name>Datacenter name</name><type>SIMPLE</type><key>vmware.hv.datacenter.name[{$URL},{HOST.HOST}]</key><delay>3600</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>Datacenter name of the hypervisor.</description><applications><application><name>General</name></application></applications></item><item><name>Full name</name><type>SIMPLE</type><key>vmware.hv.fullname[{$URL},{HOST.HOST}]</key><delay>3600</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>The complete product name, including the version information.</description><applications><application><name>General</name></application></applications></item><item><name>CPU frequency</name><type>SIMPLE</type><key>vmware.hv.hw.cpu.freq[{$URL},{HOST.HOST}]</key><delay>3600</delay><history>7d</history><trends>30d</trends><units>Hz</units><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>The speed of the CPU cores. This is an average value if there are multiple speeds. The product of CPU frequency and number of cores is approximately equal to the sum of the MHz for all the individual cores on the host.</description><applications><application><name>CPU</name></application><application><name>Hardware</name></application></applications></item><item><name>CPU model</name><type>SIMPLE</type><key>vmware.hv.hw.cpu.model[{$URL},{HOST.HOST}]</key><delay>3600</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>The CPU model.</description><applications><application><name>CPU</name></application><application><name>Hardware</name></application></applications></item><item><name>CPU cores</name><type>SIMPLE</type><key>vmware.hv.hw.cpu.num[{$URL},{HOST.HOST}]</key><delay>3600</delay><history>7d</history><trends>30d</trends><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>Number of physical CPU cores on the host. Physical CPU cores are the processors contained by a CPU package.</description><applications><application><name>CPU</name></application><application><name>Hardware</name></application></applications></item><item><name>CPU threads</name><type>SIMPLE</type><key>vmware.hv.hw.cpu.threads[{$URL},{HOST.HOST}]</key><delay>3600</delay><history>7d</history><trends>30d</trends><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>Number of physical CPU threads on the host.</description><applications><application><name>CPU</name></application><application><name>Hardware</name></application></applications></item><item><name>CPU Usage Percentage</name><type>CALCULATED</type><key>vmware.hv.hw.cpu.total.percent[{$URL},{HOST.HOST}]</key><delay>60</delay><value_type>FLOAT</value_type><units>%</units><params>100*last(&quot;vmware.hv.cpu.usage[{$URL},{HOST.HOST}]&quot;)/last(&quot;vmware.hv.hw.cpu.total[{$URL},{HOST.HOST}]&quot;)</params><applications><application><name>CPU</name></application></applications><triggers><trigger><expression>{avg(5m)}&gt;=90</expression><recovery_mode>RECOVERY_EXPRESSION</recovery_mode><recovery_expression>{avg(5m)}&lt;=85</recovery_expression><name>{HOST.NAME} - CPU Usage (5 min avg) is {ITEM.LASTVALUE}</name><priority>WARNING</priority><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} - CPU Usage (5 min avg) is {ITEM.LASTVALUE}</name><expression>{Template Virt VMware Hypervisor:vmware.hv.hw.cpu.total.percent[{$URL},{HOST.HOST}].avg(5m)}&gt;=95</expression></dependency></dependencies></trigger><trigger><expression>{avg(5m)}&gt;=95</expression><name>{HOST.NAME} - CPU Usage (5 min avg) is {ITEM.LASTVALUE}</name><priority>AVERAGE</priority><manual_close>YES</manual_close></trigger></triggers></item><item><name>CPU Total Frequency</name><type>CALCULATED</type><key>vmware.hv.hw.cpu.total[{$URL},{HOST.HOST}]</key><delay>60</delay><history>7d</history><trends>1d</trends><units>Hz</units><params>last(&quot;vmware.hv.hw.cpu.num[{$URL},{HOST.HOST}]&quot;)*last(&quot;vmware.hv.hw.cpu.freq[{$URL},{HOST.HOST}]&quot;)</params><applications><application><name>CPU</name></application></applications></item><item><name>Used memory percentage</name><type>CALCULATED</type><key>vmware.hv.hw.memory.total.percent[{$URL},{HOST.HOST}]</key><delay>60</delay><value_type>FLOAT</value_type><units>%</units><params>100*last(&quot;vmware.hv.memory.used[{$URL},{HOST.HOST}]&quot;)/last(&quot;vmware.hv.hw.memory[{$URL},{HOST.HOST}]&quot;)</params><applications><application><name>Memory</name></application></applications></item><item><name>Total memory</name><type>SIMPLE</type><key>vmware.hv.hw.memory[{$URL},{HOST.HOST}]</key><delay>3600</delay><history>7d</history><trends>30d</trends><units>B</units><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>The physical memory size.</description><applications><application><name>Hardware</name></application><application><name>Memory</name></application></applications></item><item><name>Model</name><type>SIMPLE</type><key>vmware.hv.hw.model[{$URL},{HOST.HOST}]</key><delay>3600</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>The system model identification.</description><applications><application><name>Hardware</name></application></applications></item><item><name>Bios UUID</name><type>SIMPLE</type><key>vmware.hv.hw.uuid[{$URL},{HOST.HOST}]</key><delay>3600</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>The hardware BIOS identification.</description><applications><application><name>Hardware</name></application></applications></item><item><name>Vendor</name><type>SIMPLE</type><key>vmware.hv.hw.vendor[{$URL},{HOST.HOST}]</key><delay>3600</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>The hardware vendor identification.</description><applications><application><name>Hardware</name></application></applications></item><item><name>Available memory</name><type>CALCULATED</type><key>vmware.hv.memory.available[{$URL},{HOST.HOST}]</key><delay>60</delay><history>7d</history><trends>30d</trends><units>B</units><params>last(&quot;vmware.hv.hw.memory[{$URL},{HOST.HOST}]&quot;)-last(&quot;vmware.hv.memory.used[{$URL},{HOST.HOST}]&quot;)</params><applications><application><name>Memory</name></application></applications></item><item><name>Ballooned memory</name><type>SIMPLE</type><key>vmware.hv.memory.size.ballooned[{$URL},{HOST.HOST}]</key><delay>300</delay><history>7d</history><trends>30d</trends><units>B</units><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>The amount of guest physical memory that is currently reclaimed through the balloon driver. Sum of all guest VMs.</description><applications><application><name>Memory</name></application></applications></item><item><name>Used memory</name><type>SIMPLE</type><key>vmware.hv.memory.used[{$URL},{HOST.HOST}]</key><delay>300</delay><history>7d</history><trends>30d</trends><units>B</units><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>Physical memory usage on the host.</description><applications><application><name>Memory</name></application></applications></item><item><name>Number of bytes received</name><type>SIMPLE</type><key>vmware.hv.network.in[{$URL},{HOST.HOST},bps]</key><delay>300</delay><history>7d</history><trends>30d</trends><units>Bps</units><username>{$USERNAME}</username><password>{$PASSWORD}</password><applications><application><name>Network</name></application></applications></item><item><name>Number of bytes transmitted</name><type>SIMPLE</type><key>vmware.hv.network.out[{$URL},{HOST.HOST},bps]</key><delay>300</delay><history>7d</history><trends>30d</trends><units>Bps</units><username>{$USERNAME}</username><password>{$PASSWORD}</password><applications><application><name>Network</name></application></applications></item><item><name>Health state rollup</name><type>SIMPLE</type><key>vmware.hv.sensor.health.state[{$URL},{HOST.HOST}]</key><delay>300</delay><history>7d</history><trends>30d</trends><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>The host health state rollup sensor value: gray - unknown, ok, red - it has a problem, yellow - it might have a problem.</description><applications><application><name>General</name></application></applications><valuemap><name>VMware status</name></valuemap><triggers><trigger><expression>{last()}=2 or {last()}=3</expression><name>{HOST.NAME} - ESXi Health State Is {ITEM.LASTVALUE}</name><priority>HIGH</priority><description>The host health state rollup sensor value: gray - unknown, green - okay, red - it has a problem, yellow - it might have a problem.</description><manual_close>YES</manual_close></trigger></triggers></item><item><name>Overall status</name><type>SIMPLE</type><key>vmware.hv.status[{$URL},{HOST.HOST}]</key><delay>300</delay><history>7d</history><trends>30d</trends><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>The overall alarm status of the host: gray - unknown, ok, red - it has a problem, yellow - it might have a problem.</description><applications><application><name>General</name></application></applications><valuemap><name>VMware status</name></valuemap><triggers><trigger><expression>{last()}=2 or {last()}=3</expression><name>{HOST.NAME} - ESXi Overall Status Is {ITEM.LASTVALUE}</name><priority>HIGH</priority><description>The host overall status sensor: gray - unknown, green - okay, red - it has a problem, yellow - it might have a problem.</description><manual_close>YES</manual_close></trigger></triggers></item><item><name>Uptime</name><type>SIMPLE</type><key>vmware.hv.uptime[{$URL},{HOST.HOST}]</key><delay>3600</delay><history>7d</history><trends>30d</trends><units>uptime</units><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>System uptime.</description><applications><application><name>General</name></application></applications></item><item><name>Version</name><type>SIMPLE</type><key>vmware.hv.version[{$URL},{HOST.HOST}]</key><delay>3600</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>Dot-separated version string.</description><applications><application><name>General</name></application></applications></item><item><name>Number of guest VMs</name><type>SIMPLE</type><key>vmware.hv.vm.num[{$URL},{HOST.HOST}]</key><delay>3600</delay><history>7d</history><trends>30d</trends><username>{$USERNAME}</username><password>{$PASSWORD}</password><description>Number of guest virtual machines.</description><applications><application><name>General</name></application></applications></item></items><discovery_rules><discovery_rule><name>Datastore discovery</name><type>SIMPLE</type><key>vmware.hv.datastore.discovery[{$URL},{HOST.HOST}]</key><delay>86400</delay><username>{$USERNAME}</username><password>{$PASSWORD}</password><lifetime>0</lifetime><item_prototypes><item_prototype><name>Average read latency of the datastore $3</name><type>SIMPLE</type><key>vmware.hv.datastore.read[{$URL},{HOST.HOST},{#DATASTORE},latency]</key><delay>300</delay><history>7d</history><trends>30d</trends><username>{$USERNAME}</username><password>{$PASSWORD}</password><applications><application><name>Datastore</name></application></applications></item_prototype><item_prototype><name>Free space on datastore $3</name><type>SIMPLE</type><key>vmware.hv.datastore.size[{$URL},{HOST.HOST},{#DATASTORE},free]</key><delay>300</delay><history>7d</history><trends>30d</trends><units>B</units><username>{$USERNAME}</username><password>{$PASSWORD}</password><applications><application><name>Datastore</name></application></applications></item_prototype><item_prototype><name>Free space on datastore $3 (percentage)</name><type>SIMPLE</type><key>vmware.hv.datastore.size[{$URL},{HOST.HOST},{#DATASTORE},pfree]</key><delay>300</delay><history>7d</history><trends>30d</trends><value_type>FLOAT</value_type><units>%</units><username>{$USERNAME}</username><password>{$PASSWORD}</password><applications><application><name>Datastore</name></application></applications></item_prototype><item_prototype><name>Total size of datastore $3</name><type>SIMPLE</type><key>vmware.hv.datastore.size[{$URL},{HOST.HOST},{#DATASTORE}]</key><delay>300</delay><history>7d</history><trends>30d</trends><units>B</units><username>{$USERNAME}</username><password>{$PASSWORD}</password><applications><application><name>Datastore</name></application></applications></item_prototype><item_prototype><name>Average write latency of the datastore $3</name><type>SIMPLE</type><key>vmware.hv.datastore.write[{$URL},{HOST.HOST},{#DATASTORE},latency]</key><delay>300</delay><history>7d</history><trends>30d</trends><username>{$USERNAME}</username><password>{$PASSWORD}</password><applications><application><name>Datastore</name></application></applications></item_prototype></item_prototypes><trigger_prototypes><trigger_prototype><expression>{Template Virt VMware Hypervisor:vmware.hv.datastore.size[{$URL},{HOST.HOST},{#DATASTORE},pfree].min(5m)}&lt;=90 and {Template Virt VMware Hypervisor:vmware.hv.datastore.size[{$URL},{HOST.HOST},{#DATASTORE},free].min(5m)}&lt;=0</expression><recovery_mode>RECOVERY_EXPRESSION</recovery_mode><recovery_expression>{Template Virt VMware Hypervisor:vmware.hv.datastore.size[{$URL},{HOST.HOST},{#DATASTORE},pfree].min(5m)}&gt;=88</recovery_expression><name>{HOST.NAME} - Free space on datastore {#DATASTORE} is {ITEM.LASTVALUE1} - {ITEM.LASTVALUE2} remaining</name><priority>AVERAGE</priority><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} - Free space on datastore {#DATASTORE} is {ITEM.LASTVALUE1} - {ITEM.LASTVALUE2} remaining</name><expression>{Template Virt VMware Hypervisor:vmware.hv.datastore.size[{$URL},{HOST.HOST},{#DATASTORE},pfree].min(5m)}&lt;=95 and {Template Virt VMware Hypervisor:vmware.hv.datastore.size[{$URL},{HOST.HOST},{#DATASTORE},free].min(5m)}&lt;=0</expression></dependency></dependencies></trigger_prototype><trigger_prototype><expression>{Template Virt VMware Hypervisor:vmware.hv.datastore.size[{$URL},{HOST.HOST},{#DATASTORE},pfree].min(5m)}&lt;=95 and {Template Virt VMware Hypervisor:vmware.hv.datastore.size[{$URL},{HOST.HOST},{#DATASTORE},free].min(5m)}&lt;=0</expression><name>{HOST.NAME} - Free space on datastore {#DATASTORE} is {ITEM.LASTVALUE1} - {ITEM.LASTVALUE2} remaining</name><priority>HIGH</priority><manual_close>YES</manual_close></trigger_prototype></trigger_prototypes></discovery_rule></discovery_rules></template></templates><triggers><trigger><expression>{Template Virt VMware Hypervisor:vmware.hv.hw.memory.total.percent[{$URL},{HOST.HOST}].avg(5m)}&gt;=95 and {Template Virt VMware Hypervisor:vmware.hv.memory.available[{$URL},{HOST.HOST}].last()}&gt;=0</expression><name>{HOST.NAME} - Memory usage (5 min avg) is {ITEM.LASTVALUE1} ({ITEM.LASTVALUE1})</name><priority>AVERAGE</priority><manual_close>YES</manual_close></trigger><trigger><expression>{Template Virt VMware Hypervisor:vmware.hv.hw.memory.total.percent[{$URL},{HOST.HOST}].avg(5m)}&gt;=90 and {Template Virt VMware Hypervisor:vmware.hv.memory.available[{$URL},{HOST.HOST}].last()}&gt;=0</expression><recovery_mode>RECOVERY_EXPRESSION</recovery_mode><recovery_expression>{Template Virt VMware Hypervisor:vmware.hv.hw.memory.total.percent[{$URL},{HOST.HOST}].avg(5m)}&lt;=85</recovery_expression><name>{HOST.NAME} - Memory usage (5 min avg) is {ITEM.LASTVALUE1} ({ITEM.LASTVALUE2})</name><priority>WARNING</priority><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} - Memory usage (5 min avg) is {ITEM.LASTVALUE1} ({ITEM.LASTVALUE1})</name><expression>{Template Virt VMware Hypervisor:vmware.hv.hw.memory.total.percent[{$URL},{HOST.HOST}].avg(5m)}&gt;=95 and {Template Virt VMware Hypervisor:vmware.hv.memory.available[{$URL},{HOST.HOST}].last()}&gt;=0</expression></dependency></dependencies></trigger></triggers><value_maps><value_map><name>VMware status</name><mappings><mapping><value>0</value><newvalue>gray</newvalue></mapping><mapping><value>1</value><newvalue>green</newvalue></mapping><mapping><value>2</value><newvalue>yellow</newvalue></mapping><mapping><value>3</value><newvalue>red</newvalue></mapping></mappings></value_map></value_maps></zabbix_export>
