<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
  <version>5.0</version>
  <date>2021-10-22T10:58:44Z</date>
  <groups>
    <group>
      <name>Templates/Modules</name>
    </group>
  </groups>
  <templates>
    <template>
      <template>Template Module Linux Active User Status by Zabbix Agent active</template>
      <name>Template Module Linux Active User Status by Zabbix Agent active</name>
      <description>This template collects and monitors active users on target hosts.</description>
      <groups>
        <group>
          <name>Templates/Modules</name>
        </group>
      </groups>
      <applications>
        <application>
          <name>Active User Status</name>
        </application>
        <application>
          <name>OS</name>
        </application>
      </applications>
      <items>
        <item>
          <name>Logged in users</name>
          <type>ZABBIX_ACTIVE</type>
          <key>system.run["TZ=UTC last -FRw | grep \"still logged\" | sed 's/still logged in//g' | awk '{$2=\"\";print $0;}' | sed 's/ /,/g'"]</key>
          <delay>1h</delay>
          <trends>0</trends>
          <value_type>TEXT</value_type>
          <description>Use linux command `last` to get those users with status "still logged in".</description>
          <applications>
            <application>
              <name>Active User Status</name>
            </application>
            <application>
              <name>OS</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>JAVASCRIPT</type>
              <params>var conns = value.split('\n'); var new_conns = []; for(var i=0; i&lt;conns.length; i++){ if (conns[i].length === 0){ continue; } var conn_info = conns[i].split(','); var user = conn_info[0]; var time = new Date(conn_info[1]); new_conns.push({user: user, login: time}); } return JSON.stringify(new_conns);</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Num of Active(logged in) users</name>
          <type>DEPENDENT</type>
          <key>system.users.loggedin.num</key>
          <delay>0</delay>
          <description>Same purpose as the Zabbix built-in metric `system.users.num`.</description>
          <applications>
            <application>
              <name>Active User Status</name>
            </application>
            <application>
              <name>OS</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>JAVASCRIPT</type>
              <params>return JSON.parse(value).length;</params>
            </step>
          </preprocessing>
          <master_item>
            <key>system.run["TZ=UTC last -FRw | grep \"still logged\" | sed 's/still logged in//g' | awk '{$2=\"\";print $0;}' | sed 's/ /,/g'"]</key>
          </master_item>
        </item>
        <item>
          <name>Overstay users on the {HOST.NAME} > {$OVERSTAY_THRESHOLD} day(s)</name>
          <type>DEPENDENT</type>
          <key>system.users.overstay.list</key>
          <delay>0</delay>
          <trends>0</trends>
          <value_type>TEXT</value_type>
          <applications>
            <application>
              <name>Active User Status</name>
            </application>
            <application>
              <name>OS</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>JAVASCRIPT</type>
              <params>var conns = JSON.parse(value); var overstay_conns = []; var threshold = '{$OVERSTAY_THRESHOLD}'; for (var i=0; i&lt;conns.length; i++){ var login_date = new Date(conns[i].login); var current_date = new Date(); var stay_days = (current_date - login_date)/(1000*60*60*24*threshold); if (stay_days >= 1) { overstay_conns.push(conns[i]); } } return JSON.stringify(overstay_conns);</params>
            </step>
          </preprocessing>
          <master_item>
            <key>system.run["TZ=UTC last -FRw | grep \"still logged\" | sed 's/still logged in//g' | awk '{$2=\"\";print $0;}' | sed 's/ /,/g'"]</key>
          </master_item>
        </item>
        <item>
          <name>Num of overstay users on the {HOST.NAME} > {$OVERSTAY_THRESHOLD} day(s)</name>
          <type>DEPENDENT</type>
          <key>system.users.overstay.num</key>
          <delay>0</delay>
          <applications>
            <application>
              <name>Active User Status</name>
            </application>
            <application>
              <name>OS</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>JAVASCRIPT</type>
              <params>return JSON.parse(value).length;</params>
            </step>
          </preprocessing>
          <master_item>
            <key>system.users.overstay.list</key>
          </master_item>
          <triggers>
            <trigger>
              <expression>{last()}>0</expression>
              <name>Some users overstay on the {HOST.NAME} > {$OVERSTAY_THRESHOLD} day(s)</name>
              <priority>WARNING</priority>
            </trigger>
          </triggers>
        </item>
      </items>
      <macros>
        <macro>
          <macro>{$OVERSTAY_THRESHOLD}</macro>
          <value>1</value>
          <description>stay on certain server too long, default: 1 day</description>
        </macro>
      </macros>
    </template>
  </templates>
</zabbix_export>