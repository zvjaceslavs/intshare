<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
  <version>5.0</version>
  <date>2021-10-19T21:24:14Z</date>
  <groups>
    <group>
      <name>GPON</name>
    </group>
    <group>
      <name>Templates</name>
    </group>
    <group>
      <name>Templates/Network</name>
    </group>
  </groups>
  <templates>
    <template>
      <template>Template ICMP Ping GPON</template>
      <name>Template ICMP Ping GPON</name>
      <groups>
        <group>
          <name>GPON</name>
        </group>
        <group>
          <name>Templates</name>
        </group>
        <group>
          <name>Templates/Network</name>
        </group>
      </groups>
      <applications>
        <application>
          <name>ICMP</name>
        </application>
      </applications>
      <items>
        <item>
          <name>ICMP ping</name>
          <type>SIMPLE</type>
          <key>icmpping</key>
          <delay>1s</delay>
          <history>12h</history>
          <trends>180d</trends>
          <applications>
            <application>
              <name>ICMP</name>
            </application>
          </applications>
          <valuemap>
            <name>Service state</name>
          </valuemap>
          <request_method>POST</request_method>
          <triggers>
            <trigger>
              <expression>{max(#3)}=0</expression>
              <name>Unavailable by ICMP</name>
              <priority>DISASTER</priority>
              <tags>
                <tag>
                  <tag>telegram</tag>
                  <value>yes</value>
                </tag>
              </tags>
            </trigger>
          </triggers>
        </item>
        <item>
          <name>ICMP loss</name>
          <type>SIMPLE</type>
          <key>icmppingloss</key>
          <delay>1s</delay>
          <history>12h</history>
          <trends>180d</trends>
          <value_type>FLOAT</value_type>
          <units>%</units>
          <applications>
            <application>
              <name>ICMP</name>
            </application>
          </applications>
          <request_method>POST</request_method>
          <triggers>
            <trigger>
              <expression>{min(5m)}>20</expression>
              <name>ICMP loss {ITEM.LASTVALUE1}%</name>
              <priority>AVERAGE</priority>
              <dependencies>
                <dependency>
                  <name>Unavailable by ICMP</name>
                  <expression>{Template ICMP Ping GPON:icmpping.max(#3)}=0</expression>
                </dependency>
              </dependencies>
              <tags>
                <tag>
                  <tag>telegram</tag>
                  <value>yes</value>
                </tag>
              </tags>
            </trigger>
          </triggers>
        </item>
        <item>
          <name>ICMP response time</name>
          <type>SIMPLE</type>
          <key>icmppingsec</key>
          <delay>1s</delay>
          <history>12h</history>
          <trends>180d</trends>
          <value_type>FLOAT</value_type>
          <units>ms</units>
          <applications>
            <application>
              <name>ICMP</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>MULTIPLIER</type>
              <params>1000</params>
            </step>
          </preprocessing>
          <request_method>POST</request_method>
          <triggers>
            <trigger>
              <expression>{last()}>100</expression>
              <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
              <recovery_expression>{last()}&lt;100</recovery_expression>
              <name>ICMP reply {ITEM.LASTVALUE1}ms</name>
              <priority>WARNING</priority>
              <dependencies>
                <dependency>
                  <name>Unavailable by ICMP</name>
                  <expression>{Template ICMP Ping GPON:icmpping.max(#3)}=0</expression>
                </dependency>
              </dependencies>
              <tags>
                <tag>
                  <tag>telegram</tag>
                  <value>yes</value>
                </tag>
              </tags>
            </trigger>
          </triggers>
        </item>
      </items>
    </template>
    <template>
      <template>Template SNMP Device GPON PARKS</template>
      <name>Template SNMP Device GPON PARKS</name>
      <templates>
        <template>
          <name>Template ICMP Ping GPON</name>
        </template>
      </templates>
      <groups>
        <group>
          <name>GPON</name>
        </group>
        <group>
          <name>Templates</name>
        </group>
        <group>
          <name>Templates/Network</name>
        </group>
      </groups>
      <applications>
        <application>
          <name>General</name>
        </application>
        <application>
          <name>Health</name>
        </application>
        <application>
          <name>Interfaces</name>
        </application>
        <application>
          <name>Traps</name>
        </application>
      </applications>
      <items>
        <item>
          <name>CPU Load</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>1.3.6.1.4.1.3893.4.4.1.2.0</snmp_oid>
          <key>cpu-la</key>
          <delay>10m</delay>
          <history>1d</history>
          <trends>180d</trends>
          <units>%</units>
          <applications>
            <application>
              <name>Health</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>MULTIPLIER</type>
              <params>0.1</params>
            </step>
          </preprocessing>
          <request_method>POST</request_method>
          <triggers>
            <trigger>
              <expression>{last()}>85</expression>
              <name>CPU above 85%</name>
              <priority>HIGH</priority>
              <tags>
                <tag>
                  <tag>telegram</tag>
                  <value>yes</value>
                </tag>
              </tags>
            </trigger>
          </triggers>
        </item>
        <item>
          <name>Memory</name>
          <type>CALCULATED</type>
          <key>memory</key>
          <delay>10m</delay>
          <history>7d</history>
          <trends>180d</trends>
          <units>%</units>
          <params>100*last("memory-used")/last("memory-total")</params>
          <applications>
            <application>
              <name>Health</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Memory Total</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>.1.3.6.1.4.1.3893.4.4.2.1.0</snmp_oid>
          <key>memory-total</key>
          <delay>1h</delay>
          <history>1d</history>
          <trends>180d</trends>
          <units>B</units>
          <applications>
            <application>
              <name>Health</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>MULTIPLIER</type>
              <params>1000</params>
            </step>
          </preprocessing>
          <request_method>POST</request_method>
        </item>
        <item>
          <name>Memory Used</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>.1.3.6.1.4.1.3893.4.4.2.3.0</snmp_oid>
          <key>memory-used</key>
          <delay>10m</delay>
          <history>1d</history>
          <trends>180d</trends>
          <units>B</units>
          <applications>
            <application>
              <name>Health</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>MULTIPLIER</type>
              <params>1000</params>
            </step>
          </preprocessing>
          <request_method>POST</request_method>
        </item>
        <item>
          <name>Device contact details</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>SNMPv2-MIB::sysContact.0</snmp_oid>
          <key>sysContact</key>
          <delay>1d</delay>
          <history>1d</history>
          <trends>0</trends>
          <value_type>CHAR</value_type>
          <description>The textual identification of the contact person for this managed node, together with information on how to contact this person. If no contact information is known, the value is the zero-length string.</description>
          <inventory_link>CONTACT</inventory_link>
          <applications>
            <application>
              <name>General</name>
            </application>
          </applications>
          <request_method>POST</request_method>
        </item>
        <item>
          <name>Device description</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>SNMPv2-MIB::sysDescr.0</snmp_oid>
          <key>sysDescr</key>
          <delay>1d</delay>
          <history>1d</history>
          <trends>0</trends>
          <value_type>CHAR</value_type>
          <description>A textual description of the entity. This value should include the full name and version identification of the system's hardware type, software operating-system, and networking software.</description>
          <inventory_link>HARDWARE</inventory_link>
          <applications>
            <application>
              <name>General</name>
            </application>
          </applications>
          <request_method>POST</request_method>
        </item>
        <item>
          <name>Device location</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>SNMPv2-MIB::sysLocation.0</snmp_oid>
          <key>sysLocation</key>
          <delay>1d</delay>
          <history>1d</history>
          <trends>0</trends>
          <value_type>CHAR</value_type>
          <description>The physical location of this node (e.g., `telephone closet, 3rd floor'). If the location is unknown, the value is the zero-length string.</description>
          <inventory_link>LOCATION</inventory_link>
          <applications>
            <application>
              <name>General</name>
            </application>
          </applications>
          <request_method>POST</request_method>
        </item>
        <item>
          <name>Device name</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>SNMPv2-MIB::sysName.0</snmp_oid>
          <key>sysName</key>
          <delay>1d</delay>
          <history>1d</history>
          <trends>0</trends>
          <value_type>CHAR</value_type>
          <description>An administratively-assigned name for this managed node. By convention, this is the node's fully-qualified domain name. If the name is unknown, the value is the zero-length string.</description>
          <inventory_link>NAME</inventory_link>
          <applications>
            <application>
              <name>General</name>
            </application>
          </applications>
          <request_method>POST</request_method>
        </item>
        <item>
          <name>Temperature</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>iso.3.6.1.4.1.3893.1.27.1.1.3.2</snmp_oid>
          <key>temperature</key>
          <delay>10m</delay>
          <history>7d</history>
          <trends>180d</trends>
          <applications>
            <application>
              <name>Health</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Uptime</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>.1.3.6.1.2.1.1.3.0</snmp_oid>
          <key>uptime</key>
          <delay>10m</delay>
          <history>1d</history>
          <trends>90d</trends>
          <value_type>FLOAT</value_type>
          <units>s</units>
          <applications>
            <application>
              <name>Health</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>MULTIPLIER</type>
              <params>0.01</params>
            </step>
          </preprocessing>
          <request_method>POST</request_method>
          <triggers>
            <trigger>
              <expression>{prev(0)}&lt;120</expression>
              <name>Device has rebooted</name>
              <priority>HIGH</priority>
              <description>Device rebooted in the last 2min</description>
              <tags>
                <tag>
                  <tag>telegram</tag>
                  <value>yes</value>
                </tag>
              </tags>
            </trigger>
          </triggers>
        </item>
      </items>
      <discovery_rules>
        <discovery_rule>
          <name>Network interfaces</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#SNMPVALUE},ifDescr]</snmp_oid>
          <key>ifDescr</key>
          <delay>1d</delay>
          <lifetime>0</lifetime>
          <item_prototypes>
            <item_prototype>
              <name>Incoming traffic on interface $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>IF-MIB::ifHCInOctets.{#SNMPINDEX}</snmp_oid>
              <key>ifInOctets[{#SNMPVALUE}]</key>
              <delay>10m</delay>
              <history>7d</history>
              <trends>180d</trends>
              <units>bps</units>
              <applications>
                <application>
                  <name>Interfaces</name>
                </application>
              </applications>
              <preprocessing>
                <step>
                  <type>CHANGE_PER_SECOND</type>
                  <params></params>
                </step>
                <step>
                  <type>MULTIPLIER</type>
                  <params>8</params>
                </step>
              </preprocessing>
              <request_method>POST</request_method>
            </item_prototype>
            <item_prototype>
              <name>Operational status of interface $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>IF-MIB::ifOperStatus.{#SNMPINDEX}</snmp_oid>
              <key>ifOperStatus[{#SNMPVALUE}]</key>
              <delay>10m</delay>
              <history>7d</history>
              <trends>180d</trends>
              <applications>
                <application>
                  <name>Interfaces</name>
                </application>
              </applications>
              <valuemap>
                <name>SNMP interface status (ifOperStatus)</name>
              </valuemap>
              <request_method>POST</request_method>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{diff(0)}=1</expression>
                  <name>Interface {#SNMPVALUE} operational status changed</name>
                  <priority>AVERAGE</priority>
                  <tags>
                    <tag>
                      <tag>telegram</tag>
                      <value>yes</value>
                    </tag>
                  </tags>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>Outgoing traffic on interface $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>IF-MIB::ifHCOutOctets.{#SNMPINDEX}</snmp_oid>
              <key>ifOutOctets[{#SNMPVALUE}]</key>
              <delay>10m</delay>
              <history>7d</history>
              <trends>180d</trends>
              <units>bps</units>
              <applications>
                <application>
                  <name>Interfaces</name>
                </application>
              </applications>
              <preprocessing>
                <step>
                  <type>CHANGE_PER_SECOND</type>
                  <params></params>
                </step>
                <step>
                  <type>MULTIPLIER</type>
                  <params>8</params>
                </step>
              </preprocessing>
              <request_method>POST</request_method>
            </item_prototype>
          </item_prototypes>
          <graph_prototypes>
            <graph_prototype>
              <name>Traffic on interface {#SNMPVALUE}</name>
              <graph_items>
                <graph_item>
                  <drawtype>GRADIENT_LINE</drawtype>
                  <color>1A7C11</color>
                  <item>
                    <host>Template SNMP Device GPON PARKS</host>
                    <key>ifInOctets[{#SNMPVALUE}]</key>
                  </item>
                </graph_item>
                <graph_item>
                  <sortorder>1</sortorder>
                  <drawtype>GRADIENT_LINE</drawtype>
                  <color>F63100</color>
                  <item>
                    <host>Template SNMP Device GPON PARKS</host>
                    <key>ifOutOctets[{#SNMPVALUE}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
          </graph_prototypes>
          <request_method>POST</request_method>
        </discovery_rule>
        <discovery_rule>
          <name>ONUs</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#SNMPVALUE},.1.3.6.1.4.1.6771.10.1.5.1.62]</snmp_oid>
          <key>onuAlias</key>
          <delay>1d</delay>
          <lifetime>0</lifetime>
          <item_prototypes>
            <item_prototype>
              <name>ONU $1 DOWNSTREAM SIGNAL</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>.1.3.6.1.4.1.6771.10.1.5.1.15.{#SNMPINDEX}</snmp_oid>
              <key>onuDwRx[{#SNMPVALUE}]</key>
              <delay>600s</delay>
              <history>7d</history>
              <trends>180d</trends>
              <units>dbm</units>
              <applications>
                <application>
                  <name>Interfaces</name>
                </application>
              </applications>
              <preprocessing>
                <step>
                  <type>MULTIPLIER</type>
                  <params>0.01</params>
                </step>
              </preprocessing>
              <request_method>POST</request_method>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last()}>28</expression>
                  <name>ONU {#SNMPVALUE} LOW SIGNAL</name>
                  <priority>INFO</priority>
                  <tags>
                    <tag>
                      <tag>telegram</tag>
                      <value>no</value>
                    </tag>
                  </tags>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
          </item_prototypes>
          <request_method>POST</request_method>
        </discovery_rule>
      </discovery_rules>
    </template>
    <template>
      <template>Template SNMP Device GPON ZTE fw 2.1</template>
      <name>Template SNMP Device GPON ZTE fw 2.1</name>
      <templates>
        <template>
          <name>Template ICMP Ping GPON</name>
        </template>
      </templates>
      <groups>
        <group>
          <name>GPON</name>
        </group>
        <group>
          <name>Templates</name>
        </group>
        <group>
          <name>Templates/Network</name>
        </group>
      </groups>
      <applications>
        <application>
          <name>General</name>
        </application>
        <application>
          <name>Health</name>
        </application>
        <application>
          <name>Interfaces</name>
        </application>
        <application>
          <name>ONU</name>
        </application>
        <application>
          <name>Traps</name>
        </application>
      </applications>
      <items>
        <item>
          <name>OLT Current #0</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>1.3.6.1.4.1.3902.1015.2.1.3.9.2.1.6.1.1.0</snmp_oid>
          <key>olt[current0]</key>
          <history>7d</history>
          <trends>180d</trends>
          <value_type>FLOAT</value_type>
          <units>A</units>
          <applications>
            <application>
              <name>Health</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>MULTIPLIER</type>
              <params>0.001</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>OLT Current #1</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>1.3.6.1.4.1.3902.1015.2.1.3.9.2.1.6.1.1.1</snmp_oid>
          <key>olt[current1]</key>
          <history>7d</history>
          <trends>180d</trends>
          <value_type>FLOAT</value_type>
          <units>A</units>
          <applications>
            <application>
              <name>Health</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>MULTIPLIER</type>
              <params>0.001</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>OLT Power #0</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>1.3.6.1.4.1.3902.1015.2.1.3.9.2.1.8.1.1.0</snmp_oid>
          <key>olt[power0]</key>
          <history>7d</history>
          <trends>180d</trends>
          <units>W</units>
          <applications>
            <application>
              <name>Health</name>
            </application>
          </applications>
        </item>
        <item>
          <name>OLT Power #1</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>1.3.6.1.4.1.3902.1015.2.1.3.9.2.1.8.1.1.1</snmp_oid>
          <key>olt[power1]</key>
          <history>7d</history>
          <trends>180d</trends>
          <units>W</units>
          <applications>
            <application>
              <name>Health</name>
            </application>
          </applications>
        </item>
        <item>
          <name>OLT Temperature</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>1.3.6.1.4.1.3902.1015.2.1.3.2.0</snmp_oid>
          <key>olt[temperature]</key>
          <history>7d</history>
          <trends>180d</trends>
          <applications>
            <application>
              <name>Health</name>
            </application>
          </applications>
          <request_method>POST</request_method>
          <triggers>
            <trigger>
              <expression>{last()}>26</expression>
              <name>Temperature {ITEM.LASTVALUE1}</name>
              <priority>HIGH</priority>
              <tags>
                <tag>
                  <tag>telegram</tag>
                  <value>yes</value>
                </tag>
              </tags>
            </trigger>
            <trigger>
              <expression>{last()}>31</expression>
              <name>Temperature {ITEM.LASTVALUE1}</name>
              <priority>DISASTER</priority>
              <tags>
                <tag>
                  <tag>telegram</tag>
                  <value>yes</value>
                </tag>
              </tags>
            </trigger>
          </triggers>
        </item>
        <item>
          <name>OLT Voltage #0</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>1.3.6.1.4.1.3902.1015.2.1.3.9.2.1.3.1.1.0</snmp_oid>
          <key>olt[voltage0]</key>
          <history>7d</history>
          <trends>180d</trends>
          <value_type>FLOAT</value_type>
          <units>V</units>
          <applications>
            <application>
              <name>Health</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>MULTIPLIER</type>
              <params>0.001</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>OLT Voltage #1</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>1.3.6.1.4.1.3902.1015.2.1.3.9.2.1.3.1.1.1</snmp_oid>
          <key>olt[voltage1]</key>
          <history>7d</history>
          <trends>180d</trends>
          <value_type>FLOAT</value_type>
          <units>V</units>
          <applications>
            <application>
              <name>Health</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>MULTIPLIER</type>
              <params>0.001</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Traps UNMATCHED</name>
          <type>SNMP_TRAP</type>
          <key>snmptrap.fallback</key>
          <delay>0</delay>
          <history>1d</history>
          <trends>0</trends>
          <value_type>LOG</value_type>
          <applications>
            <application>
              <name>Traps</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Traps Login</name>
          <type>SNMP_TRAP</type>
          <key>snmptrap["zte\.1015\.1\.1\.3\.53\.1\.3\.2"]</key>
          <delay>0</delay>
          <history>7d</history>
          <trends>0</trends>
          <value_type>LOG</value_type>
          <applications>
            <application>
              <name>Traps</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Traps Looping</name>
          <type>SNMP_TRAP</type>
          <key>snmptrap["zxAnGponRmEthUniLoopIndicat"]</key>
          <delay>0</delay>
          <history>7d</history>
          <trends>0</trends>
          <value_type>LOG</value_type>
          <description>ONU detects a loop at the Ethernet UNI Varbinds: 0. zxAnGponRmEthUniExpectedType (INTEGER32) The following coding is used for this attribute: 0x00 = by autosensing, 0x01 to 0xFE (1 to 254) = one of the values from Table 3 that is compatible with the type of the LIM. Upon autonomous instantiation, the value 0x00 is used.</description>
          <applications>
            <application>
              <name>Traps</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>REGEX</type>
              <params>(LoopIndicatAlm\b|LoopIndicatClr\b).*?(ZTEGC.{7}) \1 \2</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Traps DGi</name>
          <type>SNMP_TRAP</type>
          <key>snmptrap["zxGponOltDGi"]</key>
          <delay>0</delay>
          <history>7d</history>
          <trends>0</trends>
          <value_type>LOG</value_type>
          <description>ONU is powering off imminently due to loss of power to the ONU itself. Varbinds: 0. zxAnGponRmOnuSerialNum (OCTETSTR) The serial number is unique for each ONU. It is defined in [ITU-T G.984.3] and [ITU-T G.987.3] and contains the vendor ID and version number. The first four bytes are an ASCII-encoded four-letter vendor ID. The second four bytes are a binary encoded serial number, under the control of the ONU vendor.</description>
          <applications>
            <application>
              <name>Traps</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>REGEX</type>
              <params>(zxGponOltDGi\b|zxGponOltDGiRestore\b).*?(ZTEGC.{7}) \1 \2</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Traps LOAMi</name>
          <type>SNMP_TRAP</type>
          <key>snmptrap["zxGponOltLOAMi"]</key>
          <delay>0</delay>
          <history>7d</history>
          <trends>0</trends>
          <value_type>LOG</value_type>
          <description>LOAMi is Loss of PLOAM for ONUi. Send 3 times Deactivate_ONU-ID messages. Generate Loss_of_phy_layer_I notification. Varbinds: 0. zxAnGponOnuMgmtName (OCTETSTR) The name of the ONU. 1. zxAnGponOnuMgmtTypeName (OCTETSTR) The ONU type name which should refer to the entry of zxAnPonOnuTypeTable. 2. zxAnGponOnuMgmtDesc (OCTETSTR) The description of the ONU. 3. zxAnGponOnuMgmtRegistrationInfo (OCTETSTR) ONU registration information. This attribute is made up of registration mode and registration values. Commas are used to separate registration mode and registration values. A number is used to represent registration mode of the attribute. The number's value is on the list of zxAnGponOnuMgmtRegMode defined values. Correspondingly, the registration values' formats are also defined in zxAnGponOnuMgmtRegMode's description. The valid ONU registration information formats are as follows: 1, SN 2, password 3, SN,password 4, register ID 5, register ID,8021x 6, register ID,mutual 7, hex password 8, SN,hex password 9, LOID 10, LOID,password 11, SN,register ID 12, PSK It's used for trap only. When read this object always returns SN.</description>
          <applications>
            <application>
              <name>Traps</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>REGEX</type>
              <params>(zxGponOltLOAMi\b|zxGponOltLOAMiRestore\b).*?(ZTEGC.{7}) \1 \2</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Traps LOFi</name>
          <type>SNMP_TRAP</type>
          <key>snmptrap["zxGponOltLOFi"]</key>
          <delay>0</delay>
          <history>7d</history>
          <trends>0</trends>
          <value_type>LOG</value_type>
          <description>LOFi is Loss of Frame of ONUi. Send 3 times Deactivate_ONU-ID messages. Generate Loss_of_phy_layer_I notification. Varbinds: 0. zxAnGponOnuMgmtName (OCTETSTR) The name of the ONU. 1. zxAnGponOnuMgmtTypeName (OCTETSTR) The ONU type name which should refer to the entry of zxAnPonOnuTypeTable. 2. zxAnGponOnuMgmtDesc (OCTETSTR) The description of the ONU. 3. zxAnGponOnuMgmtRegistrationInfo (OCTETSTR) ONU registration information. This attribute is made up of registration mode and registration values. Commas are used to separate registration mode and registration values. A number is used to represent registration mode of the attribute. The number's value is on the list of zxAnGponOnuMgmtRegMode defined values. Correspondingly, the registration values' formats are also defined in zxAnGponOnuMgmtRegMode's description. The valid ONU registration information formats are as follows: 1, SN 2, password 3, SN,password 4, register ID 5, register ID,8021x 6, register ID,mutual 7, hex password 8, SN,hex password 9, LOID 10, LOID,password 11, SN,register ID 12, PSK It's used for trap only. When read this object always returns SN.</description>
          <applications>
            <application>
              <name>Traps</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>REGEX</type>
              <params>(zxGponOltLOFi\b|zxGponOltLOFiRestore\b).*?(ZTEGC.{7}) \1 \2</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Traps LOSi</name>
          <type>SNMP_TRAP</type>
          <key>snmptrap["zxGponOltLOSi|zxGponOltLosi"]</key>
          <delay>0</delay>
          <history>7d</history>
          <trends>0</trends>
          <value_type>LOG</value_type>
          <description>LOSi is Loss of Signal for ONUi. Generate notification. Varbinds: 0. zxAnGponOnuMgmtName (OCTETSTR) The name of the ONU. 1. zxAnGponOnuMgmtTypeName (OCTETSTR) The ONU type name which should refer to the entry of zxAnPonOnuTypeTable. 2. zxAnGponOnuMgmtDesc (OCTETSTR) The description of the ONU. 3. zxAnGponOnuMgmtRegistrationInfo (OCTETSTR) ONU registration information. This attribute is made up of registration mode and registration values. Commas are used to separate registration mode and registration values. A number is used to represent registration mode of the attribute. The number's value is on the list of zxAnGponOnuMgmtRegMode defined values. Correspondingly, the registration values' formats are also defined in zxAnGponOnuMgmtRegMode's description. The valid ONU registration information formats are as follows: 1, SN 2, password 3, SN,password 4, register ID 5, register ID,8021x 6, register ID,mutual 7, hex password 8, SN,hex password 9, LOID 10, LOID,password 11, SN,register ID 12, PSK It's used for trap only. When read this object always returns SN. 4. zxAnPonProtectGroupName</description>
          <applications>
            <application>
              <name>Traps</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>REGEX</type>
              <params>(zxGponOltLosi\b|zxGponOltLosiRestore\b|zxGponOltLOSi\b|zxGponOltLOSiRestore\b).*?(ZTEGC.{7}) \1 \2</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Traps MEMi</name>
          <type>SNMP_TRAP</type>
          <key>snmptrap["zxGponOltMEMi"]</key>
          <delay>0</delay>
          <history>7d</history>
          <trends>0</trends>
          <value_type>LOG</value_type>
          <description>MEMi is Message_Error Message from ONUi. Varbinds: 0. zxAnGponOnuMgmtName (OCTETSTR) The name of the ONU. 1. zxAnGponOnuMgmtTypeName (OCTETSTR) The ONU type name which should refer to the entry of zxAnPonOnuTypeTable. 2. zxAnGponOnuMgmtDesc (OCTETSTR) The description of the ONU. 3. zxAnGponOnuMgmtRegistrationInfo (OCTETSTR) ONU registration information. This attribute is made up of registration mode and registration values. Commas are used to separate registration mode and registration values. A number is used to represent registration mode of the attribute. The number's value is on the list of zxAnGponOnuMgmtRegMode defined values. Correspondingly, the registration values' formats are also defined in zxAnGponOnuMgmtRegMode's description. The valid ONU registration information formats are as follows: 1, SN 2, password 3, SN,password 4, register ID 5, register ID,8021x 6, register ID,mutual 7, hex password 8, SN,hex password 9, LOID 10, LOID,password 11, SN,register ID 12, PSK It's used for trap only. When read this object always returns SN.</description>
          <applications>
            <application>
              <name>Traps</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>REGEX</type>
              <params>(zxGponOltMEMi\b|zxGponOltMEMiRestore\b).*?(ZTEGC.{7}) \1 \2</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Traps RDIi</name>
          <type>SNMP_TRAP</type>
          <key>snmptrap["zxGponOltRDIi"]</key>
          <delay>0</delay>
          <history>7d</history>
          <trends>0</trends>
          <value_type>LOG</value_type>
          <description>RDIi is Remote Defect Indication of ONUi. Varbinds: 0. zxAnGponOnuMgmtName (OCTETSTR) The name of the ONU. 1. zxAnGponOnuMgmtTypeName (OCTETSTR) The ONU type name which should refer to the entry of zxAnPonOnuTypeTable. 2. zxAnGponOnuMgmtDesc (OCTETSTR) The description of the ONU. 3. zxAnGponOnuMgmtRegistrationInfo (OCTETSTR) ONU registration information. This attribute is made up of registration mode and registration values. Commas are used to separate registration mode and registration values. A number is used to represent registration mode of the attribute. The number's value is on the list of zxAnGponOnuMgmtRegMode defined values. Correspondingly, the registration values' formats are also defined in zxAnGponOnuMgmtRegMode's description. The valid ONU registration information formats are as follows: 1, SN 2, password 3, SN,password 4, register ID 5, register ID,8021x 6, register ID,mutual 7, hex password 8, SN,hex password 9, LOID 10, LOID,password 11, SN,register ID 12, PSK It's used for trap only. When read this object always returns SN.</description>
          <applications>
            <application>
              <name>Traps</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>REGEX</type>
              <params>(zxGponOltRDIi\b|zxGponOltRDIiRestore\b).*?(ZTEGC.{7}) \1 \2</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Traps SDi</name>
          <type>SNMP_TRAP</type>
          <key>snmptrap["zxGponOltSDi"]</key>
          <delay>0</delay>
          <history>7d</history>
          <trends>0</trends>
          <value_type>LOG</value_type>
          <description>SDi is Signal Degraded of ONUi. Varbinds: 0. zxAnGponOnuMgmtName (OCTETSTR) The name of the ONU. 1. zxAnGponOnuMgmtTypeName (OCTETSTR) The ONU type name which should refer to the entry of zxAnPonOnuTypeTable. 2. zxAnGponOnuMgmtDesc (OCTETSTR) The description of the ONU. 3. zxAnGponOnuMgmtRegistrationInfo (OCTETSTR) ONU registration information. This attribute is made up of registration mode and registration values. Commas are used to separate registration mode and registration values. A number is used to represent registration mode of the attribute. The number's value is on the list of zxAnGponOnuMgmtRegMode defined values. Correspondingly, the registration values' formats are also defined in zxAnGponOnuMgmtRegMode's description. The valid ONU registration information formats are as follows: 1, SN 2, password 3, SN,password 4, register ID 5, register ID,8021x 6, register ID,mutual 7, hex password 8, SN,hex password 9, LOID 10, LOID,password 11, SN,register ID 12, PSK It's used for trap only. When read this object always returns SN.</description>
          <applications>
            <application>
              <name>Traps</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>REGEX</type>
              <params>(zxGponOltSDi\b|zxGponOltSDiRestore\b).*?(ZTEGC.{7}) \1 \2</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Traps SFi</name>
          <type>SNMP_TRAP</type>
          <key>snmptrap["zxGponOltSFi"]</key>
          <delay>0</delay>
          <history>7d</history>
          <trends>0</trends>
          <value_type>LOG</value_type>
          <description>SFi is Signal Fail of ONUi. Send 3 times Deactivate_ONU-ID messages. Generate Loss_of_phy_layer_I notification. Varbinds: 0. zxAnGponOnuMgmtName (OCTETSTR) The name of the ONU. 1. zxAnGponOnuMgmtTypeName (OCTETSTR) The ONU type name which should refer to the entry of zxAnPonOnuTypeTable. 2. zxAnGponOnuMgmtDesc (OCTETSTR) The description of the ONU. 3. zxAnGponOnuMgmtRegistrationInfo (OCTETSTR) ONU registration information. This attribute is made up of registration mode and registration values. Commas are used to separate registration mode and registration values. A number is used to represent registration mode of the attribute. The number's value is on the list of zxAnGponOnuMgmtRegMode defined values. Correspondingly, the registration values' formats are also defined in zxAnGponOnuMgmtRegMode's description. The valid ONU registration information formats are as follows: 1, SN 2, password 3, SN,password 4, register ID 5, register ID,8021x 6, register ID,mutual 7, hex password 8, SN,hex password 9, LOID 10, LOID,password 11, SN,register ID 12, PSK It's used for trap only. When read this object always returns SN.</description>
          <applications>
            <application>
              <name>Traps</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>REGEX</type>
              <params>(zxGponOltSFi\b|zxGponOltSFiRestore\b).*?(ZTEGC.{7}) \1 \2</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Traps SUFi</name>
          <type>SNMP_TRAP</type>
          <key>snmptrap["zxGponOltSUFi"]</key>
          <delay>0</delay>
          <history>7d</history>
          <trends>0</trends>
          <value_type>LOG</value_type>
          <description>SUFi is Start-up Failure of ONUi. Send 3 times Deactivate_ONU-ID messages. Varbinds: 0. zxAnGponOnuMgmtName (OCTETSTR) The name of the ONU. 1. zxAnGponOnuMgmtTypeName (OCTETSTR) The ONU type name which should refer to the entry of zxAnPonOnuTypeTable. 2. zxAnGponOnuMgmtDesc (OCTETSTR) The description of the ONU. 3. zxAnGponOnuMgmtRegistrationInfo (OCTETSTR) ONU registration information. This attribute is made up of registration mode and registration values. Commas are used to separate registration mode and registration values. A number is used to represent registration mode of the attribute. The number's value is on the list of zxAnGponOnuMgmtRegMode defined values. Correspondingly, the registration values' formats are also defined in zxAnGponOnuMgmtRegMode's description. The valid ONU registration information formats are as follows: 1, SN 2, password 3, SN,password 4, register ID 5, register ID,8021x 6, register ID,mutual 7, hex password 8, SN,hex password 9, LOID 10, LOID,password 11, SN,register ID 12, PSK It's used for trap only. When read this object always returns SN.</description>
          <applications>
            <application>
              <name>Traps</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>REGEX</type>
              <params>(zxGponOltSUFi\b|zxGponOltSUFiRestore\b).*?(ZTEGC.{7}) \1 \2</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Traps Onu Uni Lan Los</name>
          <type>SNMP_TRAP</type>
          <key>snmptrap["zxGponRootMib\.50\.6\.1\.1\.1"]</key>
          <delay>0</delay>
          <history>7d</history>
          <trends>0</trends>
          <value_type>LOG</value_type>
          <description>No carrier at the Ethernet UNI Varbinds: 0. zxAnGponRmEthUniExpectedType (INTEGER32) The following coding is used for this attribute: 0x00 = by autosensing, 0x01 to 0xFE (1 to 254) = one of the values from Table 3 that is compatible with the type of the LIM. Upon autonomous instantiation, the value 0x00 is used.</description>
          <applications>
            <application>
              <name>Traps</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>REGEX</type>
              <params>(Description .*\b).*?(ZTEGC.{7}) Uni Lan Los \1 \2</params>
            </step>
          </preprocessing>
        </item>
        <item>
          <name>Traps UnCfg</name>
          <type>SNMP_TRAP</type>
          <key>snmptrap["zxGponUnCfg"]</key>
          <delay>0</delay>
          <history>7d</history>
          <trends>0</trends>
          <value_type>LOG</value_type>
          <applications>
            <application>
              <name>Traps</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Device contact details</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>SNMPv2-MIB::sysContact.0</snmp_oid>
          <key>sysContact</key>
          <delay>1d</delay>
          <history>1d</history>
          <trends>0</trends>
          <value_type>CHAR</value_type>
          <description>The textual identification of the contact person for this managed node, together with information on how to contact this person. If no contact information is known, the value is the zero-length string.</description>
          <inventory_link>CONTACT</inventory_link>
          <applications>
            <application>
              <name>General</name>
            </application>
          </applications>
          <request_method>POST</request_method>
        </item>
        <item>
          <name>Device description</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>SNMPv2-MIB::sysDescr.0</snmp_oid>
          <key>sysDescr</key>
          <delay>1d</delay>
          <history>1d</history>
          <trends>0</trends>
          <value_type>CHAR</value_type>
          <description>A textual description of the entity. This value should include the full name and version identification of the system's hardware type, software operating-system, and networking software.</description>
          <inventory_link>HARDWARE</inventory_link>
          <applications>
            <application>
              <name>General</name>
            </application>
          </applications>
          <request_method>POST</request_method>
        </item>
        <item>
          <name>Device location</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>SNMPv2-MIB::sysLocation.0</snmp_oid>
          <key>sysLocation</key>
          <delay>1d</delay>
          <history>1d</history>
          <trends>0</trends>
          <value_type>CHAR</value_type>
          <description>The physical location of this node (e.g., `telephone closet, 3rd floor'). If the location is unknown, the value is the zero-length string.</description>
          <inventory_link>LOCATION</inventory_link>
          <applications>
            <application>
              <name>General</name>
            </application>
          </applications>
          <request_method>POST</request_method>
        </item>
        <item>
          <name>Device name</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>SNMPv2-MIB::sysName.0</snmp_oid>
          <key>sysName</key>
          <delay>1d</delay>
          <history>1d</history>
          <trends>0</trends>
          <value_type>CHAR</value_type>
          <description>An administratively-assigned name for this managed node. By convention, this is the node's fully-qualified domain name. If the name is unknown, the value is the zero-length string.</description>
          <inventory_link>NAME</inventory_link>
          <applications>
            <application>
              <name>General</name>
            </application>
          </applications>
          <request_method>POST</request_method>
        </item>
        <item>
          <name>Uptime</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>.1.3.6.1.2.1.1.3.0</snmp_oid>
          <key>uptime</key>
          <delay>10m</delay>
          <history>1d</history>
          <trends>90d</trends>
          <value_type>FLOAT</value_type>
          <units>s</units>
          <applications>
            <application>
              <name>Health</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>MULTIPLIER</type>
              <params>0.01</params>
            </step>
          </preprocessing>
          <request_method>POST</request_method>
          <triggers>
            <trigger>
              <expression>{prev(0)}&lt;120</expression>
              <name>{HOST.NAME} Rebooted</name>
              <priority>HIGH</priority>
              <description>Device rebooted in the last 2min</description>
              <tags>
                <tag>
                  <tag>telegram</tag>
                  <value>yes</value>
                </tag>
              </tags>
            </trigger>
          </triggers>
        </item>
      </items>
      <discovery_rules>
        <discovery_rule>
          <name>OLT Cards</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.3902.1015.2.1.1.3.1.4]</snmp_oid>
          <key>cardindex</key>
          <delay>1d;wd1-5h3</delay>
          <lifetime>0d</lifetime>
          <item_prototypes>
            <item_prototype>
              <name>OLT CARD CPU LOAD {#SNMPVALUE} $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.4.1.3902.1015.2.1.1.3.1.9.{#SNMPINDEX}</snmp_oid>
              <key>cardcpu[{#SNMPINDEX}]</key>
              <delay>60s</delay>
              <history>1d</history>
              <trends>180d</trends>
              <applications>
                <application>
                  <name>Health</name>
                </application>
              </applications>
              <request_method>POST</request_method>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{avg(10m)}>90</expression>
                  <name>CARD {#SNMPVALUE} {#SNMPINDEX} CPU too high!</name>
                  <priority>HIGH</priority>
                  <tags>
                    <tag>
                      <tag>telegram</tag>
                      <value>yes</value>
                    </tag>
                  </tags>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>OLT CARD MEMORY {#SNMPVALUE} $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.4.1.3902.1015.2.1.1.3.1.11.{#SNMPINDEX}</snmp_oid>
              <key>cardmem[{#SNMPINDEX}]</key>
              <delay>60s</delay>
              <history>1d</history>
              <trends>180d</trends>
              <units>%</units>
              <applications>
                <application>
                  <name>Health</name>
                </application>
              </applications>
              <request_method>POST</request_method>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{avg(10m)}>85</expression>
                  <name>CARD {#SNMPVALUE} {#SNMPINDEX} MEMORY too high!</name>
                  <priority>HIGH</priority>
                  <tags>
                    <tag>
                      <tag>telegram</tag>
                      <value>yes</value>
                    </tag>
                  </tags>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>OLT CARD OPERATIONAL STATUS {#SNMPVALUE} $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.4.1.3902.1015.2.1.1.3.1.5.{#SNMPINDEX}</snmp_oid>
              <key>cardoperstat[{#SNMPINDEX}]</key>
              <delay>60s</delay>
              <history>1d</history>
              <trends>180d</trends>
              <applications>
                <application>
                  <name>Health</name>
                </application>
              </applications>
              <valuemap>
                <name>ZTE Card Operational Status</name>
              </valuemap>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last()}&lt;>1</expression>
                  <name>CARD {#SNMPVALUE} operational status changed</name>
                  <priority>HIGH</priority>
                  <tags>
                    <tag>
                      <tag>telegram</tag>
                      <value>yes</value>
                    </tag>
                  </tags>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>OLT CARD STANDBY STATUS {#SNMPVALUE} $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.4.1.3902.1015.2.1.1.3.1.13.{#SNMPINDEX}</snmp_oid>
              <key>cardstandby[{#SNMPINDEX}]</key>
              <delay>60s</delay>
              <history>1d</history>
              <trends>180d</trends>
              <applications>
                <application>
                  <name>Health</name>
                </application>
              </applications>
              <valuemap>
                <name>ZTE Card Standby Status</name>
              </valuemap>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last()}&lt;>1 and {last()}&lt;>2</expression>
                  <name>CARD {#SNMPVALUE} standby status changed</name>
                  <priority>HIGH</priority>
                  <tags>
                    <tag>
                      <tag>telegram</tag>
                      <value>yes</value>
                    </tag>
                  </tags>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
          </item_prototypes>
          <graph_prototypes>
            <graph_prototype>
              <name>OLT CARD CPU LOAD {#SNMPVALUE} {#SNMPINDEX}</name>
              <graph_items>
                <graph_item>
                  <color>199C0D</color>
                  <item>
                    <host>Template SNMP Device GPON ZTE fw 2.1</host>
                    <key>cardcpu[{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
            <graph_prototype>
              <name>OLT CARD MEMORY {#SNMPVALUE} {#SNMPINDEX}</name>
              <graph_items>
                <graph_item>
                  <color>199C0D</color>
                  <item>
                    <host>Template SNMP Device GPON ZTE fw 2.1</host>
                    <key>cardmem[{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
          </graph_prototypes>
          <request_method>POST</request_method>
        </discovery_rule>
        <discovery_rule>
          <name>Network interfaces</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#SNMPVALUE},ifName]</snmp_oid>
          <key>ifDescr</key>
          <delay>1d;wd1-5h4</delay>
          <lifetime>0</lifetime>
          <item_prototypes>
            <item_prototype>
              <name>Incoming traffic on interface $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>IF-MIB::ifHCInOctets.{#SNMPINDEX}</snmp_oid>
              <key>ifInOctets[{#SNMPVALUE}]</key>
              <delay>10m</delay>
              <history>7d</history>
              <trends>180d</trends>
              <units>bps</units>
              <applications>
                <application>
                  <name>Interfaces</name>
                </application>
              </applications>
              <preprocessing>
                <step>
                  <type>CHANGE_PER_SECOND</type>
                  <params></params>
                </step>
                <step>
                  <type>MULTIPLIER</type>
                  <params>8</params>
                </step>
              </preprocessing>
              <request_method>POST</request_method>
            </item_prototype>
            <item_prototype>
              <name>Operational status of interface $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>IF-MIB::ifOperStatus.{#SNMPINDEX}</snmp_oid>
              <key>ifOperStatus[{#SNMPVALUE}]</key>
              <delay>10m</delay>
              <history>7d</history>
              <trends>180d</trends>
              <applications>
                <application>
                  <name>Interfaces</name>
                </application>
              </applications>
              <valuemap>
                <name>SNMP interface status (ifOperStatus)</name>
              </valuemap>
              <request_method>POST</request_method>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{diff(0)}=1</expression>
                  <name>Interface {#SNMPVALUE} operational status changed</name>
                  <priority>HIGH</priority>
                  <tags>
                    <tag>
                      <tag>telegram</tag>
                      <value>yes</value>
                    </tag>
                  </tags>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>Outgoing traffic on interface $1</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>IF-MIB::ifHCOutOctets.{#SNMPINDEX}</snmp_oid>
              <key>ifOutOctets[{#SNMPVALUE}]</key>
              <delay>10m</delay>
              <history>7d</history>
              <trends>180d</trends>
              <units>bps</units>
              <applications>
                <application>
                  <name>Interfaces</name>
                </application>
              </applications>
              <preprocessing>
                <step>
                  <type>CHANGE_PER_SECOND</type>
                  <params></params>
                </step>
                <step>
                  <type>MULTIPLIER</type>
                  <params>8</params>
                </step>
              </preprocessing>
              <request_method>POST</request_method>
            </item_prototype>
          </item_prototypes>
          <graph_prototypes>
            <graph_prototype>
              <name>Traffic on interface {#SNMPVALUE}</name>
              <graph_items>
                <graph_item>
                  <drawtype>GRADIENT_LINE</drawtype>
                  <color>1A7C11</color>
                  <item>
                    <host>Template SNMP Device GPON ZTE fw 2.1</host>
                    <key>ifInOctets[{#SNMPVALUE}]</key>
                  </item>
                </graph_item>
                <graph_item>
                  <sortorder>1</sortorder>
                  <drawtype>GRADIENT_LINE</drawtype>
                  <color>F63100</color>
                  <item>
                    <host>Template SNMP Device GPON ZTE fw 2.1</host>
                    <key>ifOutOctets[{#SNMPVALUE}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
          </graph_prototypes>
          <request_method>POST</request_method>
        </discovery_rule>
        <discovery_rule>
          <name>ONUs</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#SNMPVALUE},.1.3.6.1.4.1.3902.1012.3.28.1.1.2, {#ONUDESC}, .1.3.6.1.4.1.3902.1012.3.28.1.1.3]</snmp_oid>
          <key>onuindex</key>
          <delay>1d;wd1-5h2</delay>
          <status>DISABLED</status>
          <lifetime>1d</lifetime>
          <item_prototypes>
            <item_prototype>
              <name>rx 1310nm {#ONUDESC}</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.4.1.3902.1015.1010.11.2.1.2.{#SNMPINDEX}</snmp_oid>
              <key>rx1310[{#SNMPINDEX}]</key>
              <delay>1h</delay>
              <history>1d</history>
              <trends>90d</trends>
              <value_type>FLOAT</value_type>
              <applications>
                <application>
                  <name>ONU</name>
                </application>
              </applications>
              <preprocessing>
                <step>
                  <type>MULTIPLIER</type>
                  <params>0.001</params>
                </step>
              </preprocessing>
              <request_method>POST</request_method>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last()}&lt;=-30 and {last()}&lt;>-80</expression>
                  <name>SIGNAL LOW rx 1310nm {#ONUDESC}</name>
                  <priority>INFO</priority>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>rx 1490nm {#ONUDESC}</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>1.3.6.1.4.1.3902.1012.3.50.12.1.1.10.{#SNMPINDEX}.1</snmp_oid>
              <key>rx1490[{#SNMPINDEX}]</key>
              <delay>1h</delay>
              <history>1d</history>
              <trends>90d</trends>
              <value_type>FLOAT</value_type>
              <applications>
                <application>
                  <name>ONU</name>
                </application>
              </applications>
              <preprocessing>
                <step>
                  <type>MULTIPLIER</type>
                  <params>0.002</params>
                </step>
              </preprocessing>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last()}&lt;=6 and {last()}&lt;>131.07</expression>
                  <name>SIGNAL LOW rx 1490nm {#ONUDESC}</name>
                  <priority>INFO</priority>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
          </item_prototypes>
          <request_method>POST</request_method>
        </discovery_rule>
      </discovery_rules>
    </template>
  </templates>
  <triggers>
    <trigger>
      <expression>({Template SNMP Device GPON PARKS:memory-used.last()}/{Template SNMP Device GPON PARKS:memory-total.last()})*100>85</expression>
      <name>Memory above 85%</name>
      <priority>HIGH</priority>
      <tags>
        <tag>
          <tag>telegram</tag>
          <value>yes</value>
        </tag>
      </tags>
    </trigger>
  </triggers>
  <graphs>
    <graph>
      <name>CPU</name>
      <graph_items>
        <graph_item>
          <color>1A7C11</color>
          <item>
            <host>Template SNMP Device GPON PARKS</host>
            <key>cpu-la</key>
          </item>
        </graph_item>
      </graph_items>
    </graph>
    <graph>
      <name>MEMORY</name>
      <graph_items>
        <graph_item>
          <color>1A7C11</color>
          <item>
            <host>Template SNMP Device GPON PARKS</host>
            <key>memory-total</key>
          </item>
        </graph_item>
        <graph_item>
          <sortorder>1</sortorder>
          <drawtype>GRADIENT_LINE</drawtype>
          <color>F63100</color>
          <item>
            <host>Template SNMP Device GPON PARKS</host>
            <key>memory-used</key>
          </item>
        </graph_item>
      </graph_items>
    </graph>
    <graph>
      <name>OLT Current</name>
      <graph_items>
        <graph_item>
          <color>199C0D</color>
          <item>
            <host>Template SNMP Device GPON ZTE fw 2.1</host>
            <key>olt[current0]</key>
          </item>
        </graph_item>
        <graph_item>
          <sortorder>1</sortorder>
          <color>F63100</color>
          <item>
            <host>Template SNMP Device GPON ZTE fw 2.1</host>
            <key>olt[current1]</key>
          </item>
        </graph_item>
      </graph_items>
    </graph>
    <graph>
      <name>OLT Power</name>
      <graph_items>
        <graph_item>
          <color>199C0D</color>
          <item>
            <host>Template SNMP Device GPON ZTE fw 2.1</host>
            <key>olt[power0]</key>
          </item>
        </graph_item>
        <graph_item>
          <sortorder>1</sortorder>
          <color>F63100</color>
          <item>
            <host>Template SNMP Device GPON ZTE fw 2.1</host>
            <key>olt[power1]</key>
          </item>
        </graph_item>
      </graph_items>
    </graph>
    <graph>
      <name>OLT Temperature</name>
      <graph_items>
        <graph_item>
          <color>199C0D</color>
          <item>
            <host>Template SNMP Device GPON ZTE fw 2.1</host>
            <key>olt[temperature]</key>
          </item>
        </graph_item>
      </graph_items>
    </graph>
    <graph>
      <name>OLT Voltage</name>
      <graph_items>
        <graph_item>
          <color>199C0D</color>
          <item>
            <host>Template SNMP Device GPON ZTE fw 2.1</host>
            <key>olt[voltage0]</key>
          </item>
        </graph_item>
        <graph_item>
          <sortorder>1</sortorder>
          <color>F63100</color>
          <item>
            <host>Template SNMP Device GPON ZTE fw 2.1</host>
            <key>olt[voltage1]</key>
          </item>
        </graph_item>
      </graph_items>
    </graph>
  </graphs>
  <value_maps>
    <value_map>
      <name>Service state</name>
      <mappings>
        <mapping>
          <value>0</value>
          <newvalue>Down</newvalue>
        </mapping>
        <mapping>
          <value>1</value>
          <newvalue>Up</newvalue>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>SNMP interface status (ifOperStatus)</name>
      <mappings>
        <mapping>
          <value>1</value>
          <newvalue>up</newvalue>
        </mapping>
        <mapping>
          <value>2</value>
          <newvalue>down</newvalue>
        </mapping>
        <mapping>
          <value>3</value>
          <newvalue>testing</newvalue>
        </mapping>
        <mapping>
          <value>4</value>
          <newvalue>unknown</newvalue>
        </mapping>
        <mapping>
          <value>5</value>
          <newvalue>dormant</newvalue>
        </mapping>
        <mapping>
          <value>6</value>
          <newvalue>notPresent</newvalue>
        </mapping>
        <mapping>
          <value>7</value>
          <newvalue>lowerLayerDown</newvalue>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>ZTE Card Operational Status</name>
      <mappings>
        <mapping>
          <value>1</value>
          <newvalue>INSERVICE</newvalue>
        </mapping>
        <mapping>
          <value>3</value>
          <newvalue>HWONLINE</newvalue>
        </mapping>
        <mapping>
          <value>4</value>
          <newvalue>OFFLINE</newvalue>
        </mapping>
        <mapping>
          <value>9</value>
          <newvalue>FAULT</newvalue>
        </mapping>
        <mapping>
          <value>10</value>
          <newvalue>FAILURE</newvalue>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>ZTE Card Standby Status</name>
      <mappings>
        <mapping>
          <value>1</value>
          <newvalue>Active</newvalue>
        </mapping>
        <mapping>
          <value>2</value>
          <newvalue>Standby</newvalue>
        </mapping>
        <mapping>
          <value>15</value>
          <newvalue>Unknown</newvalue>
        </mapping>
      </mappings>
    </value_map>
  </value_maps>
</zabbix_export>