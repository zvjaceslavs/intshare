<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>5.0</version><date>2021-11-21T21:48:19Z</date><groups><group><name>UPS</name></group></groups><templates><template><template>Monitoring UPS</template><name>Monitoring UPS</name><description>## Overview

Hi


Here is a template for Socomec UPS. 


It is made mostly with traps. 


Triggers are included. 


 


Do not hesitate to ask me questions if you have some.


Thanks.



## Author

Vincent MATIAS

</description><groups><group><name>UPS</name></group></groups><applications><application><name>Alarm</name></application><application><name>Battery</name></application><application><name>Fallback</name></application><application><name>Load</name></application><application><name>Output</name></application><application><name>Power</name></application><application><name>Redoundancy</name></application><application><name>Status</name></application><application><name>Temperature</name></application><application><name>Test</name></application></applications><items><item><name>{HOST.NAME} ping</name><type>SIMPLE</type><key>icmpping[]</key><delay>30s</delay><history>2d</history><applications><application><name>Status</name></application></applications></item><item><name>UPS trap fallback</name><type>SNMP_TRAP</type><key>snmptrap.fallback</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><applications><application><name>Fallback</name></application></applications><triggers><trigger><expression>{strlen()}&gt;1</expression><name>Unknown trap received from {HOST.NAME}</name><priority>AVERAGE</priority><manual_close>YES</manual_close></trigger></triggers></item><item><name>{HOST.NAME} alarm entry added</name><type>SNMP_TRAP</type><key>snmptrap[&quot;upsTrapAlarmEntryAdded&quot;]</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><description>This trap is sent each time an alarm is inserted into
 to the alarm table. It is sent on the insertion of
 all alarms except for upsAlarmOnBattery and
 upsAlarmTestInProgress.</description><applications><application><name>Alarm</name></application></applications><triggers><trigger><expression>{last()}=1</expression><name>{HOST.NAME} alarm entry added</name><status>DISABLED</status><priority>INFO</priority><description>This trap is sent each time an alarm is inserted into&#13;
 to the alarm table. It is sent on the insertion of&#13;
 all alarms except for upsAlarmOnBattery and&#13;
 upsAlarmTestInProgress.</description><manual_close>YES</manual_close></trigger></triggers></item><item><name>{HOST.NAME} alarm entry removed</name><type>SNMP_TRAP</type><key>snmptrap[&quot;upsTrapAlarmEntryRemoved&quot;]</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><description>This trap is sent each time an alarm is removed from
 the alarm table. It is sent on the removal of all
 alarms except for upsAlarmTestInProgress.</description><applications><application><name>Alarm</name></application></applications><triggers><trigger><expression>{last()}=1</expression><name>{HOST.NAME} alarm entry removed</name><status>DISABLED</status><priority>INFO</priority><description>This trap is sent each time an alarm is removed from&#13;
 the alarm table. It is sent on the removal of all&#13;
 alarms except for upsAlarmTestInProgress.</description><manual_close>YES</manual_close></trigger></triggers></item><item><name>{HOST.NAME} battery low</name><type>SNMP_TRAP</type><key>snmptrap[&quot;upsTrapBatteryLow&quot;]</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><description>SEVERE: Battery is near to be discharged.</description><applications><application><name>Battery</name></application></applications></item><item><name>{HOST.NAME} battery test failed</name><type>SNMP_TRAP</type><key>snmptrap[&quot;upsTrapBattTestFailed&quot;]</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><description>SEVERE: UPS failed the last test of battery.</description><applications><application><name>Test</name></application></applications><triggers><trigger><expression>{last()}=1</expression><name>{HOST.NAME} battery test failed</name><priority>AVERAGE</priority><description>SEVERE: UPS failed the last test of battery.</description><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} injoignable</name><expression>{Monitoring UPS:icmpping[].last(#3)}=0 or {Monitoring UPS:upsIdentModel.0.nodata(180)}=1</expression></dependency></dependencies></trigger></triggers></item><item><name>{HOST.NAME} imminent stop</name><type>SNMP_TRAP</type><key>snmptrap[&quot;upsTrapImminentStop&quot;]</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><description>SEVERE: The UPS is near to switch off the
 output power.</description><applications><application><name>Output</name></application></applications></item><item><name>{HOST.NAME} output is on Battery</name><type>SNMP_TRAP</type><key>snmptrap[&quot;upsTrapOnBattery&quot;]</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><description>The UPS is operating on battery power. This trap is
 persistent and is resent at one minute intervals until
 the UPS either turns off or is no longer running on
 battery.</description><applications><application><name>Output</name></application></applications></item><item><name>{HOST.NAME} est sur batterie</name><type>SNMP_TRAP</type><key>snmptrap[&quot;upsTrapOnBatteryPower&quot;]</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><description>WARNING: The UPS has switched to battery backup power.</description><applications><application><name>Battery</name></application></applications></item><item><name>{HOST.NAME} output is on mains</name><type>SNMP_TRAP</type><key>snmptrap[&quot;upsTrapOnMains&quot;]</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><description>SEVERE: The UPS output is on mains.</description><applications><application><name>Output</name></application></applications></item><item><name>{HOST.NAME} overloading</name><type>SNMP_TRAP</type><key>snmptrap[&quot;upsTrapOverload&quot;]</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><description>SEVERE: The UPS has sensed a load greater than 100 percent
 of its rated capacity.</description><applications><application><name>Load</name></application></applications></item><item><name>{HOST.NAME} temperature higher than its limit</name><type>SNMP_TRAP</type><key>snmptrap[&quot;upsTrapOverTemperature&quot;]</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><description>SEVERE: The UPS has sensed a temperature 
 greater than its limit.</description><applications><application><name>Temperature</name></application></applications></item><item><name>{HOST.NAME} : Power restored</name><type>SNMP_TRAP</type><key>snmptrap[&quot;upsTrapPowerRestored&quot;]</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><description>INFORMATION: Input power has been restored.</description><applications><application><name>Power</name></application></applications></item><item><name>{HOST.NAME} redundancy lost</name><type>SNMP_TRAP</type><key>snmptrap[&quot;upsTrapRedoundancyLost&quot;]</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><description>SEVERE: Redoundancy is lost.</description><applications><application><name>Redoundancy</name></application></applications></item><item><name>{HOST.NAME} test completed</name><type>SNMP_TRAP</type><key>snmptrap[&quot;upsTrapTestCompleted&quot;]</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><description>This trap is sent upon completion of a UPS diagnostic
 test.</description><applications><application><name>Test</name></application></applications><triggers><trigger><expression>{last()}=1</expression><name>{HOST.NAME} test completed</name><priority>INFO</priority><description>This trap is sent upon completion of a UPS diagnostic&#13;
 test.</description><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} injoignable</name><expression>{Monitoring UPS:icmpping[].last(#3)}=0 or {Monitoring UPS:upsIdentModel.0.nodata(180)}=1</expression></dependency></dependencies></trigger></triggers></item><item><name>{HOST.NAME} status is normal</name><type>SNMP_TRAP</type><key>snmptrap[&quot;upsTrapUpsNormal&quot;]</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><description>INFORMATION: The UPS status is normal.</description><applications><application><name>Status</name></application></applications></item><item><name>{HOST.NAME} turned off</name><type>SNMP_TRAP</type><key>snmptrap[&quot;upsTurnedOff&quot;]</key><delay>0</delay><history>2d</history><trends>0</trends><value_type>LOG</value_type><description>WARNING: The UPS has been turned off by the management station.</description><applications><application><name>Status</name></application></applications></item><item><name>{HOST.NAME} status</name><type>SNMP_AGENT</type><snmp_oid>.1.3.6.1.4.1.4555.1.1.1.1.1.1.0</snmp_oid><key>upsIdentModel.0</key><history>2d</history><trends>0</trends><value_type>TEXT</value_type><applications><application><name>Status</name></application></applications></item></items><macros><macro><macro>{$SNMP_COMMUNITY}</macro></macro></macros></template></templates><triggers><trigger><expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryAdded&quot;].str(&quot;upsTrapBatteryLow&quot;)}=1</expression><recovery_mode>RECOVERY_EXPRESSION</recovery_mode><recovery_expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryRemoved&quot;].str(&quot;upsTrapBatteryLow&quot;)}=1</recovery_expression><name>{HOST.NAME} battery low</name><priority>AVERAGE</priority><description>SEVERE: Battery is near to be discharged.</description><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} injoignable</name><expression>{Monitoring UPS:icmpping[].last(#3)}=0 or {Monitoring UPS:upsIdentModel.0.nodata(180)}=1</expression></dependency></dependencies></trigger><trigger><expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryAdded&quot;].str(&quot;upsTrapImminentStop&quot;)}=1</expression><recovery_mode>RECOVERY_EXPRESSION</recovery_mode><recovery_expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryRemoved&quot;].str(&quot;upsTrapImminentStop&quot;)}=1</recovery_expression><name>{HOST.NAME} imminent stop</name><priority>AVERAGE</priority><description>SEVERE: The UPS is near to switch off the&#13;
 output power.</description><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} injoignable</name><expression>{Monitoring UPS:icmpping[].last(#3)}=0 or {Monitoring UPS:upsIdentModel.0.nodata(180)}=1</expression></dependency></dependencies></trigger><trigger><expression>{Monitoring UPS:icmpping[].last(#3)}=0 or {Monitoring UPS:upsIdentModel.0.nodata(180)}=1</expression><name>{HOST.NAME} injoignable</name><priority>HIGH</priority></trigger><trigger><expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryAdded&quot;].str(&quot;upsTrapOverload&quot;)}=1</expression><recovery_mode>RECOVERY_EXPRESSION</recovery_mode><recovery_expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryRemoved&quot;].str(&quot;upsTrapOverload&quot;)}=1</recovery_expression><name>{HOST.NAME} is overloading</name><priority>AVERAGE</priority><description>SEVERE: The UPS has sensed a load greater than 100 percent&#13;
 of its rated capacity.</description><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} injoignable</name><expression>{Monitoring UPS:icmpping[].last(#3)}=0 or {Monitoring UPS:upsIdentModel.0.nodata(180)}=1</expression></dependency></dependencies></trigger><trigger><expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryAdded&quot;].str(&quot;upsTrapOnBattery&quot;)}=1</expression><recovery_mode>RECOVERY_EXPRESSION</recovery_mode><recovery_expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryRemoved&quot;].str(&quot;upsTrapOnBattery&quot;)}=1</recovery_expression><name>{HOST.NAME} output is on Battery</name><priority>WARNING</priority><description>The UPS is operating on battery power. This trap is persistent and is resent at one minute intervals until the UPS either turns off or is no longer running on&#13;
 battery.</description><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} injoignable</name><expression>{Monitoring UPS:icmpping[].last(#3)}=0 or {Monitoring UPS:upsIdentModel.0.nodata(180)}=1</expression></dependency></dependencies></trigger><trigger><expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryAdded&quot;].str(&quot;upsTrapOnMains&quot;)}=1</expression><recovery_mode>RECOVERY_EXPRESSION</recovery_mode><recovery_expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryRemoved&quot;].str(&quot;upsTrapOnMains&quot;)}=1</recovery_expression><name>{HOST.NAME} output is on mains</name><priority>AVERAGE</priority><description>SEVERE: The UPS output is on mains.</description><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} injoignable</name><expression>{Monitoring UPS:icmpping[].last(#3)}=0 or {Monitoring UPS:upsIdentModel.0.nodata(180)}=1</expression></dependency></dependencies></trigger><trigger><expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryAdded&quot;].str(&quot;upsTrapPowerRestored&quot;)}=1</expression><recovery_mode>RECOVERY_EXPRESSION</recovery_mode><recovery_expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryRemoved&quot;].str(&quot;upsTrapPowerRestored&quot;)}=1</recovery_expression><name>{HOST.NAME} Power has been restored</name><priority>INFO</priority><description>INFORMATION: Input power has been restored.</description><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} injoignable</name><expression>{Monitoring UPS:icmpping[].last(#3)}=0 or {Monitoring UPS:upsIdentModel.0.nodata(180)}=1</expression></dependency></dependencies></trigger><trigger><expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryAdded&quot;].str(&quot;upsTrapRedoundancyLost&quot;)}=1</expression><recovery_mode>RECOVERY_EXPRESSION</recovery_mode><recovery_expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryRemoved&quot;].str(&quot;upsTrapRedoundancyLost&quot;)}=1</recovery_expression><name>{HOST.NAME} redundancy lost</name><priority>AVERAGE</priority><description>SEVERE: Redoundancy is lost.</description><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} injoignable</name><expression>{Monitoring UPS:icmpping[].last(#3)}=0 or {Monitoring UPS:upsIdentModel.0.nodata(180)}=1</expression></dependency></dependencies></trigger><trigger><expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryAdded&quot;].str(&quot;upsTrapUpsNormal&quot;)}=1</expression><recovery_mode>RECOVERY_EXPRESSION</recovery_mode><recovery_expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryRemoved&quot;].str(&quot;upsTrapUpsNormal&quot;)}=1</recovery_expression><name>{HOST.NAME} status is normal</name><priority>INFO</priority><description>INFORMATION: The UPS status is normal.</description><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} injoignable</name><expression>{Monitoring UPS:icmpping[].last(#3)}=0 or {Monitoring UPS:upsIdentModel.0.nodata(180)}=1</expression></dependency></dependencies></trigger><trigger><expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryAdded&quot;].str(&quot;upsTrapOnBatteryPower&quot;)}=1</expression><recovery_mode>RECOVERY_EXPRESSION</recovery_mode><recovery_expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryRemoved&quot;].str(&quot;upsTrapOnBatteryPower&quot;)}=1</recovery_expression><name>{HOST.NAME} switched to battery backup power</name><priority>WARNING</priority><description>WARNING: The UPS has switched to battery backup power.</description><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} injoignable</name><expression>{Monitoring UPS:icmpping[].last(#3)}=0 or {Monitoring UPS:upsIdentModel.0.nodata(180)}=1</expression></dependency></dependencies></trigger><trigger><expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryAdded&quot;].str(&quot;upsTrapOverTemperature&quot;)}=1</expression><recovery_mode>RECOVERY_EXPRESSION</recovery_mode><recovery_expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryRemoved&quot;].str(&quot;upsTrapOverTemperature&quot;)}=1</recovery_expression><name>{HOST.NAME} temperature higher than its limit</name><priority>AVERAGE</priority><description>SEVERE: The UPS has sensed a temperature &#13;
 greater than its limit.</description><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} injoignable</name><expression>{Monitoring UPS:icmpping[].last(#3)}=0 or {Monitoring UPS:upsIdentModel.0.nodata(180)}=1</expression></dependency></dependencies></trigger><trigger><expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryAdded&quot;].str(&quot;upsTurnedOff&quot;)}=1</expression><recovery_mode>RECOVERY_EXPRESSION</recovery_mode><recovery_expression>{Monitoring UPS:snmptrap[&quot;upsTrapAlarmEntryRemoved&quot;].str(&quot;upsTurnedOff&quot;)}=1</recovery_expression><name>{HOST.NAME} turned off</name><priority>WARNING</priority><description>WARNING: The UPS has been turned off by the management station.</description><manual_close>YES</manual_close><dependencies><dependency><name>{HOST.NAME} injoignable</name><expression>{Monitoring UPS:icmpping[].last(#3)}=0 or {Monitoring UPS:upsIdentModel.0.nodata(180)}=1</expression></dependency></dependencies></trigger></triggers></zabbix_export>
