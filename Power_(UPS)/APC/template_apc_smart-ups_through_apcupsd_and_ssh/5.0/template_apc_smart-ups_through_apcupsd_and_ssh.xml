<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>5.0</version><date>2021-11-21T21:34:23Z</date><groups><group><name>UPS</name></group></groups><templates><template><template>APC Smart-UPS through apcupsd and ssh</template><name>APC Smart-UPS through apcupsd and ssh</name><description>## Overview

This template is for situation when you have apcupsd, but cannot install zabbix agent. Tested with Centos 6.x.


You have to install apcupsd and configure it, configure ssh access for user by certificate. 


Provides:


Items: model, serial number, number of switching (xfers), name (set in apcupsd config), status (ONLINE and etc), charge level, timeleft.


Triggers: minimal timeleft is equal or less then {$APC\_SMARTUPS\_MINIMAL\_TIMELEFT}, status is not ONLINE.


Requires macroses: 


{$UPS\_GET\_MAININFO\_PERIOD} - period of getting model and etc.


{$UPS\_GET\_STATUS\_PERIOD} – period of getting status, timeleft, status.


{$APC\_SMARTUPS\_MINIMAL\_TIMELEFT} –minimal timeleft for trigger.


{$SSH\_CONNECT\_USERNAME} – user for connecting by ssh.


If you have any ideas to make this template better, comment, please.



</description><groups><group><name>UPS</name></group></groups><applications><application><name>APC UPC Battery Info</name></application><application><name>APC UPC Device Info</name></application></applications><items><item><name>apc battery charge level</name><type>DEPENDENT</type><key>apc_battery.chargelevel</key><delay>0</delay><history>30d</history><trends>90d</trends><applications><application><name>APC UPC Battery Info</name></application></applications><preprocessing><step><type>REGEX</type><params>BCHARGE\s*:(\s*)+(\d+)
\2</params></step></preprocessing><master_item><key>ssh.run[apc_device.statusinfo]</key></master_item></item><item><name>apc battery timeleft</name><type>DEPENDENT</type><key>apc_battery.timeleft</key><delay>0</delay><history>30d</history><trends>90d</trends><applications><application><name>APC UPC Battery Info</name></application></applications><preprocessing><step><type>REGEX</type><params>TIMELEFT\s*:(\s*)+(\d+)
\2</params></step></preprocessing><master_item><key>ssh.run[apc_device.statusinfo]</key></master_item><triggers><trigger><expression>{last()}={$APC_SMARTUPS_MINIMAL_TIMELEFT} or {last()}&lt;{$APC_SMARTUPS_MINIMAL_TIMELEFT}</expression><name>apc timeleft is {ITEM.LASTVALUE} on {HOST.HOST}</name><priority>HIGH</priority><manual_close>YES</manual_close></trigger></triggers></item><item><name>apc device model</name><type>DEPENDENT</type><key>apc_device.model</key><delay>0</delay><history>30d</history><trends>0</trends><value_type>TEXT</value_type><applications><application><name>APC UPC Device Info</name></application></applications><preprocessing><step><type>REGEX</type><params>MODEL\s*:(\s*)+(.+)
\2</params></step></preprocessing><master_item><key>ssh.run[apc_device.info]</key></master_item></item><item><name>apc device name</name><type>DEPENDENT</type><key>apc_device.name</key><delay>0</delay><history>30d</history><trends>0</trends><value_type>TEXT</value_type><inventory_link>SITE_NOTES</inventory_link><applications><application><name>APC UPC Device Info</name></application></applications><preprocessing><step><type>REGEX</type><params>UPSNAME\s*:(\s*)+(.+)
\2</params></step></preprocessing><master_item><key>ssh.run[apc_device.info]</key></master_item></item><item><name>apc device numxfers</name><type>DEPENDENT</type><key>apc_device.numxfers</key><delay>0</delay><history>30d</history><trends>90d</trends><applications><application><name>APC UPC Device Info</name></application></applications><preprocessing><step><type>REGEX</type><params>NUMXFERS\s*:(\s*)+(.+)
\2</params></step></preprocessing><master_item><key>ssh.run[apc_device.info]</key></master_item></item><item><name>apc device serial number</name><type>DEPENDENT</type><key>apc_device.sn</key><delay>0</delay><history>30d</history><trends>0</trends><value_type>TEXT</value_type><applications><application><name>APC UPC Device Info</name></application></applications><preprocessing><step><type>REGEX</type><params>SERIALNO\s*:(\s*)+(.+)
\2</params></step></preprocessing><master_item><key>ssh.run[apc_device.info]</key></master_item></item><item><name>apc device status</name><type>DEPENDENT</type><key>apc_device.status</key><delay>0</delay><history>30d</history><trends>0</trends><value_type>TEXT</value_type><applications><application><name>APC UPC Device Info</name></application></applications><preprocessing><step><type>REGEX</type><params>STATUS\s*:(\s*)+(.+)
\2</params></step></preprocessing><master_item><key>ssh.run[apc_device.statusinfo]</key></master_item><triggers><trigger><expression>{str(ONLINE)}&lt;&gt;1</expression><name>apc status is {ITEM.LASTVALUE} on {HOST.HOST}</name><priority>HIGH</priority><manual_close>YES</manual_close></trigger></triggers></item><item><name>apc device info</name><type>SSH</type><key>ssh.run[apc_device.info]</key><delay>{$UPS_GET_MAININFO_PERIOD}</delay><history>0d</history><trends>0</trends><value_type>TEXT</value_type><params>/sbin/apcaccess | /bin/egrep 'STATUS   :|BCHARGE  :|TIMELEFT :|UPSNAME'</params><authtype>PUBLIC_KEY</authtype><username>{$SSH_CONNECT_USERNAME}</username><publickey>id_rsa.pub</publickey><privatekey>id_rsa</privatekey><applications><application><name>APC UPC Device Info</name></application></applications></item><item><name>apc device status info</name><type>SSH</type><key>ssh.run[apc_device.statusinfo]</key><delay>{$UPS_GET_STATUS_PERIOD}</delay><history>0d</history><trends>0</trends><value_type>TEXT</value_type><params>/sbin/apcaccess | /bin/egrep 'STATUS   :|BCHARGE  :|TIMELEFT :'</params><authtype>PUBLIC_KEY</authtype><username>{$SSH_CONNECT_USERNAME}</username><publickey>id_rsa.pub</publickey><privatekey>id_rsa</privatekey><applications><application><name>APC UPC Device Info</name></application></applications></item></items></template></templates></zabbix_export>
