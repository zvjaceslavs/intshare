<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
  <version>5.0</version>
  <date>2021-10-19T20:38:34Z</date>
  <groups>
    <group>
      <name>Templates</name>
    </group>
  </groups>
  <templates>
    <template>
      <template>bl7000_EN</template>
      <name>HP C7000 Chassis (EN)</name>
      <description>This template requires the MIBs: CPQRACK-MIB CPQHOST-MIB These are referenced in the template, not the full numeric OID.</description>
      <groups>
        <group>
          <name>Templates</name>
        </group>
      </groups>
      <applications>
        <application>
          <name>Environment</name>
        </application>
        <application>
          <name>Inventory</name>
        </application>
        <application>
          <name>State</name>
        </application>
      </applications>
      <items>
        <item>
          <name>FW version of Chassis</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>CPQRACK-MIB::cpqRackCommonEnclosureFWRev.1</snmp_oid>
          <key>cpqRackCommonEnclosureFWRev.1</key>
          <delay>72000</delay>
          <history>10d</history>
          <trends>0</trends>
          <value_type>TEXT</value_type>
          <inventory_link>SOFTWARE</inventory_link>
          <applications>
            <application>
              <name>Inventory</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Name of Chassis</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>CPQRACK-MIB::cpqRackCommonEnclosureName.1</snmp_oid>
          <key>cpqRackCommonEnclosureName.1</key>
          <delay>72000</delay>
          <history>10d</history>
          <trends>0</trends>
          <value_type>TEXT</value_type>
          <inventory_link>NAME</inventory_link>
          <applications>
            <application>
              <name>Inventory</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Part number of Chassis</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>CPQRACK-MIB::cpqRackCommonEnclosurePartNumber.1</snmp_oid>
          <key>cpqRackCommonEnclosurePartNumber.1</key>
          <delay>72000</delay>
          <history>10d</history>
          <trends>0</trends>
          <value_type>TEXT</value_type>
          <inventory_link>MODEL</inventory_link>
          <applications>
            <application>
              <name>Inventory</name>
            </application>
          </applications>
        </item>
        <item>
          <name>S/N of Chassis</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>CPQRACK-MIB::cpqRackCommonEnclosureSerialNum.1</snmp_oid>
          <key>cpqRackCommonEnclosureSerialNum.1</key>
          <delay>72000</delay>
          <history>10d</history>
          <trends>0</trends>
          <value_type>TEXT</value_type>
          <inventory_link>SERIALNO_A</inventory_link>
          <applications>
            <application>
              <name>Inventory</name>
            </application>
          </applications>
        </item>
        <item>
          <name>Power redundancy state</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>CPQRACK-MIB::cpqRackPowerEnclosureRedundant.1</snmp_oid>
          <key>cpqRackPowerEnclosureRedundant.1</key>
          <delay>600</delay>
          <history>30d</history>
          <trends>90d</trends>
          <applications>
            <application>
              <name>State</name>
            </application>
          </applications>
          <valuemap>
            <name>C7000 - Power redundancy</name>
          </valuemap>
          <triggers>
            <trigger>
              <expression>{last()}&lt;>3</expression>
              <name>Redundancy of chassis power {HOST.NAME}</name>
              <priority>AVERAGE</priority>
            </trigger>
          </triggers>
        </item>
        <item>
          <name>Uptime</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>sysUpTime.0</snmp_oid>
          <key>sysUpTime.0</key>
          <delay>300</delay>
          <history>30d</history>
          <trends>90d</trends>
          <units>uptime</units>
          <applications>
            <application>
              <name>State</name>
            </application>
          </applications>
          <preprocessing>
            <step>
              <type>MULTIPLIER</type>
              <params>0.01</params>
            </step>
          </preprocessing>
          <triggers>
            <trigger>
              <expression>{nodata(1200)}=1</expression>
              <name>{HOST.NAME} : No data more than 20 minutes</name>
              <priority>AVERAGE</priority>
            </trigger>
            <trigger>
              <expression>{last()}&lt;600</expression>
              <name>{HOST.NAME} was rebooted</name>
              <priority>INFO</priority>
            </trigger>
          </triggers>
        </item>
      </items>
      <discovery_rules>
        <discovery_rule>
          <name>Device slots</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>disovery[{#SNMPVALUE},CPQRACK-MIB::cpqRackServerBladeName,{#BLADE_PRESENT},CPQRACK-MIB::cpqRackServerBladePresent]</snmp_oid>
          <key>snmp.discovery_bays</key>
          <delay>43200</delay>
          <filter>
            <conditions>
              <condition>
                <macro>{#BLADE_PRESENT}</macro>
                <value>3</value>
                <formulaid>A</formulaid>
              </condition>
            </conditions>
          </filter>
          <lifetime>1d</lifetime>
          <item_prototypes>
            <item_prototype>
              <name>PN blade {#SNMPVALUE} (Slot: {#SNMPINDEX})</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackServerBladePartNumber.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackServerBladePartNumber[{#SNMPINDEX}]</key>
              <delay>3600</delay>
              <trends>0</trends>
              <value_type>TEXT</value_type>
              <applications>
                <application>
                  <name>Inventory</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>SN blade {#SNMPVALUE} (Slot: {#SNMPINDEX})</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackServerBladeSerialNum.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackServerBladeSerialNum[{#SNMPINDEX}]</key>
              <delay>3600</delay>
              <trends>0</trends>
              <value_type>TEXT</value_type>
              <applications>
                <application>
                  <name>Inventory</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>Blade state {#SNMPVALUE} (Slot: {#SNMPINDEX})</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackServerBladeStatus.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackServerBladeStatus[{#SNMPINDEX}]</key>
              <delay>180</delay>
              <history>45d</history>
              <trends>180d</trends>
              <applications>
                <application>
                  <name>State</name>
                </application>
              </applications>
              <valuemap>
                <name>C7000 - Health Status</name>
              </valuemap>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last()}&lt;>2</expression>
                  <name>Blade state {#SNMPVALUE} (Slot: {#SNMPINDEX})</name>
                  <priority>HIGH</priority>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
          </item_prototypes>
        </discovery_rule>
        <discovery_rule>
          <name>Temperature sensors</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#SNMPVALUE}, CPQRACK-MIB::cpqRackCommonEnclosureTempLocation, {#TEMPTHRESHOLD}, CPQRACK-MIB::cpqRackCommonEnclosureTempThreshold]</snmp_oid>
          <key>snmp.discovery_env</key>
          <delay>43200</delay>
          <filter>
            <conditions>
              <condition>
                <macro>{#TEMPTHRESHOLD}</macro>
                <value>-1</value>
                <operator>NOT_MATCHES_REGEX</operator>
                <formulaid>A</formulaid>
              </condition>
            </conditions>
          </filter>
          <lifetime>1d</lifetime>
          <description>The filter on this item prototype excludes temperature sensors with a threshold of -1.</description>
          <item_prototypes>
            <item_prototype>
              <name>Temperature ({#SNMPVALUE}, ID: {#SNMPINDEX})</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackCommonEnclosureTempCurrent.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackCommonEnclosureTempCurrent[{#SNMPINDEX}]</key>
              <delay>300</delay>
              <history>60d</history>
              <trends>180d</trends>
              <units>C</units>
              <applications>
                <application>
                  <name>Environment</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>Critical temperature ({#SNMPVALUE} ID: {#SNMPINDEX})</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackCommonEnclosureTempThreshold.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackCommonEnclosureTempThreshold[{#SNMPINDEX}]</key>
              <delay>300</delay>
              <history>60d</history>
              <trends>180d</trends>
              <units>C</units>
              <applications>
                <application>
                  <name>Environment</name>
                </application>
              </applications>
            </item_prototype>
          </item_prototypes>
          <trigger_prototypes>
            <trigger_prototype>
              <expression>{bl7000_EN:cpqRackCommonEnclosureTempThreshold[{#SNMPINDEX}].last()}-{bl7000_EN:cpqRackCommonEnclosureTempCurrent[{#SNMPINDEX}].last()}&lt;20 and {bl7000_EN:cpqRackCommonEnclosureTempCurrent[{#SNMPINDEX}].last()}>0</expression>
              <name>Temperature {#SNMPVALUE} is high (20C)</name>
              <priority>AVERAGE</priority>
            </trigger_prototype>
            <trigger_prototype>
              <expression>{bl7000_EN:cpqRackCommonEnclosureTempThreshold[{#SNMPINDEX}].last()}-{bl7000_EN:cpqRackCommonEnclosureTempCurrent[{#SNMPINDEX}].last()}&lt;10 and {bl7000_EN:cpqRackCommonEnclosureTempCurrent[{#SNMPINDEX}].last()}>0</expression>
              <name>Temperature {#SNMPVALUE} is too high (10C)</name>
              <priority>HIGH</priority>
            </trigger_prototype>
          </trigger_prototypes>
          <graph_prototypes>
            <graph_prototype>
              <name>Temperature {#SNMPVALUE} (ID: {#SNMPINDEX})</name>
              <graph_items>
                <graph_item>
                  <drawtype>GRADIENT_LINE</drawtype>
                  <color>0000DD</color>
                  <calc_fnc>MAX</calc_fnc>
                  <item>
                    <host>bl7000_EN</host>
                    <key>cpqRackCommonEnclosureTempCurrent[{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
                <graph_item>
                  <sortorder>1</sortorder>
                  <color>990000</color>
                  <calc_fnc>MAX</calc_fnc>
                  <item>
                    <host>bl7000_EN</host>
                    <key>cpqRackCommonEnclosureTempThreshold[{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
          </graph_prototypes>
        </discovery_rule>
        <discovery_rule>
          <name>Fan modules</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#FAN_PRESENT}, CPQRACK-MIB::cpqRackCommonEnclosureFanPresent]</snmp_oid>
          <key>snmp.discovery_fans</key>
          <delay>43200</delay>
          <filter>
            <conditions>
              <condition>
                <macro>{#FAN_PRESENT}</macro>
                <value>3</value>
                <formulaid>A</formulaid>
              </condition>
            </conditions>
          </filter>
          <lifetime>1d</lifetime>
          <item_prototypes>
            <item_prototype>
              <name>Fan module state {#SNMPINDEX}</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackCommonEnclosureFanCondition.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackCommonEnclosureFanCondition[{#SNMPINDEX}]</key>
              <delay>600</delay>
              <history>60d</history>
              <trends>90d</trends>
              <applications>
                <application>
                  <name>State</name>
                </application>
              </applications>
              <valuemap>
                <name>C7000 - Health Status</name>
              </valuemap>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last()}&lt;>2</expression>
                  <name>Fan module state {#SNMPINDEX}</name>
                  <priority>HIGH</priority>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
          </item_prototypes>
        </discovery_rule>
        <discovery_rule>
          <name>Onboard Administrator modules</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#MGR_INDEX}, CPQRACK-MIB::cpqRackCommonEnclosureManagerRole, {#MGR_PRESENT}, CPQRACK-MIB::cpqRackCommonEnclosureManagerPresent]</snmp_oid>
          <key>snmp.discovery_mgr</key>
          <delay>43200</delay>
          <filter>
            <conditions>
              <condition>
                <macro>{#MGR_PRESENT}</macro>
                <value>3</value>
                <formulaid>A</formulaid>
              </condition>
            </conditions>
          </filter>
          <lifetime>1d</lifetime>
          <item_prototypes>
            <item_prototype>
              <name>OA {#MGR_INDEX} Condition</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackCommonEnclosureManagerCondition.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackCommonEnclosureManagerCondition[{#SNMPINDEX}]</key>
              <delay>60s</delay>
              <applications>
                <application>
                  <name>State</name>
                </application>
              </applications>
              <valuemap>
                <name>C7000 - Health Status</name>
              </valuemap>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last()}&lt;>2</expression>
                  <name>OA module {#MGR_INDEX} condition</name>
                  <priority>HIGH</priority>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>OA {#MGR_INDEX} Firmware</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackCommonEnclosureManagerFWRev.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackCommonEnclosureManagerFWRev[{#SNMPINDEX}]</key>
              <delay>3600</delay>
              <history>60d</history>
              <trends>0</trends>
              <value_type>TEXT</value_type>
              <applications>
                <application>
                  <name>Inventory</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>OA {#MGR_INDEX} Part Number</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackCommonEnclosureManagerPartNumber.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackCommonEnclosureManagerPartNumber[{#SNMPINDEX}]</key>
              <delay>86400</delay>
              <history>60d</history>
              <trends>0</trends>
              <value_type>TEXT</value_type>
              <applications>
                <application>
                  <name>Inventory</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>OA {#MGR_INDEX} Redundant</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackCommonEnclosureManagerRedundant.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackCommonEnclosureManagerRedundant[{#SNMPINDEX}]</key>
              <delay>60s</delay>
              <applications>
                <application>
                  <name>State</name>
                </application>
              </applications>
              <valuemap>
                <name>C7000 - OA Redundant</name>
              </valuemap>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last()}&lt;>3</expression>
                  <name>OA module {#MGR_INDEX} redundancy</name>
                  <priority>HIGH</priority>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>OA {#MGR_INDEX} Role</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackCommonEnclosureManagerRole.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackCommonEnclosureManagerRole[{#SNMPINDEX}]</key>
              <delay>60s</delay>
              <applications>
                <application>
                  <name>State</name>
                </application>
              </applications>
              <valuemap>
                <name>C7000 - OA Role</name>
              </valuemap>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{diff()}=1</expression>
                  <name>OA module {#MGR_INDEX} role</name>
                  <priority>WARNING</priority>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>OA {#MGR_INDEX} Serial Number</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackCommonEnclosureManagerSerialNum.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackCommonEnclosureManagerSerialNum[{#SNMPINDEX}]</key>
              <delay>86400</delay>
              <history>60d</history>
              <trends>0</trends>
              <value_type>TEXT</value_type>
              <applications>
                <application>
                  <name>Inventory</name>
                </application>
              </applications>
            </item_prototype>
          </item_prototypes>
        </discovery_rule>
        <discovery_rule>
          <name>Interconnect modules</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#SNMPVALUE}, CPQRACK-MIB::cpqRackNetConnectorPresent]</snmp_oid>
          <key>snmp.discovery_net</key>
          <delay>43200</delay>
          <filter>
            <conditions>
              <condition>
                <macro>{#SNMPVALUE}</macro>
                <value>3</value>
                <formulaid>A</formulaid>
              </condition>
            </conditions>
          </filter>
          <lifetime>1d</lifetime>
          <item_prototypes>
            <item_prototype>
              <name>PN Interconnect-module (Slot: {#SNMPINDEX})</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackNetConnectorPartNumber.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackNetConnectorPartNumber[{#SNMPINDEX}]</key>
              <delay>3600</delay>
              <history>10d</history>
              <trends>0</trends>
              <value_type>TEXT</value_type>
              <applications>
                <application>
                  <name>Inventory</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>SN Interconnect-module (Slot: {#SNMPINDEX})</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackNetConnectorSerialNum.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackNetConnectorSerialNum[{#SNMPINDEX}]</key>
              <delay>3600</delay>
              <history>10d</history>
              <trends>0</trends>
              <value_type>TEXT</value_type>
              <applications>
                <application>
                  <name>Inventory</name>
                </application>
              </applications>
            </item_prototype>
          </item_prototypes>
        </discovery_rule>
        <discovery_rule>
          <name>Power units</name>
          <type>SNMP_AGENT</type>
          <snmp_oid>discovery[{#SNMPVALUE}, CPQRACK-MIB::cpqRackPowerSupplyPresent]</snmp_oid>
          <key>snmp.discovery_power</key>
          <delay>43200</delay>
          <filter>
            <conditions>
              <condition>
                <macro>{#SNMPVALUE}</macro>
                <value>3</value>
                <formulaid>A</formulaid>
              </condition>
            </conditions>
          </filter>
          <lifetime>1d</lifetime>
          <item_prototypes>
            <item_prototype>
              <name>Output load on PU {#SNMPINDEX}</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackPowerSupplyCurPwrOutput.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackPowerSupplyCurPwrOutput[{#SNMPINDEX}]</key>
              <delay>600</delay>
              <history>60d</history>
              <trends>180d</trends>
              <units>W</units>
              <applications>
                <application>
                  <name>State</name>
                </application>
              </applications>
            </item_prototype>
            <item_prototype>
              <name>PU Input status {#SNMPINDEX}</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackPowerSupplyInputLineStatus.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackPowerSupplyInputLineStatus[{#SNMPINDEX}]</key>
              <delay>600</delay>
              <history>60d</history>
              <trends>180d</trends>
              <applications>
                <application>
                  <name>State</name>
                </application>
              </applications>
              <valuemap>
                <name>C7000 - Input power status</name>
              </valuemap>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last()}&lt;>1</expression>
                  <name>Input power status on PU {#SNMPINDEX}</name>
                  <priority>HIGH</priority>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
            <item_prototype>
              <name>PU Status {#SNMPINDEX}</name>
              <type>SNMP_AGENT</type>
              <snmp_oid>CPQRACK-MIB::cpqRackPowerSupplyStatus.{#SNMPINDEX}</snmp_oid>
              <key>cpqRackPowerSupplyStatus[{#SNMPINDEX}]</key>
              <delay>600</delay>
              <history>60d</history>
              <trends>180d</trends>
              <applications>
                <application>
                  <name>State</name>
                </application>
              </applications>
              <valuemap>
                <name>C7000 - Power status</name>
              </valuemap>
              <trigger_prototypes>
                <trigger_prototype>
                  <expression>{last()}&lt;>1</expression>
                  <name>PU Status {#SNMINDEX}</name>
                  <priority>HIGH</priority>
                </trigger_prototype>
              </trigger_prototypes>
            </item_prototype>
          </item_prototypes>
          <graph_prototypes>
            <graph_prototype>
              <name>PU Load {#SNMPINDEX}</name>
              <graph_items>
                <graph_item>
                  <drawtype>BOLD_LINE</drawtype>
                  <color>C80000</color>
                  <item>
                    <host>bl7000_EN</host>
                    <key>cpqRackPowerSupplyCurPwrOutput[{#SNMPINDEX}]</key>
                  </item>
                </graph_item>
              </graph_items>
            </graph_prototype>
          </graph_prototypes>
        </discovery_rule>
      </discovery_rules>
    </template>
  </templates>
  <value_maps>
    <value_map>
      <name>C7000 - Health Status</name>
      <mappings>
        <mapping>
          <value>1</value>
          <newvalue>other</newvalue>
        </mapping>
        <mapping>
          <value>2</value>
          <newvalue>ok</newvalue>
        </mapping>
        <mapping>
          <value>3</value>
          <newvalue>degraded</newvalue>
        </mapping>
        <mapping>
          <value>4</value>
          <newvalue>failed</newvalue>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>C7000 - Input power status</name>
      <mappings>
        <mapping>
          <value>1</value>
          <newvalue>noError</newvalue>
        </mapping>
        <mapping>
          <value>2</value>
          <newvalue>lineOverVoltage</newvalue>
        </mapping>
        <mapping>
          <value>3</value>
          <newvalue>lineUnderVoltage</newvalue>
        </mapping>
        <mapping>
          <value>4</value>
          <newvalue>lineHit</newvalue>
        </mapping>
        <mapping>
          <value>5</value>
          <newvalue>brownOut</newvalue>
        </mapping>
        <mapping>
          <value>6</value>
          <newvalue>linePowerLoss</newvalue>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>C7000 - OA Redundant</name>
      <mappings>
        <mapping>
          <value>notRedundant</value>
          <newvalue>2</newvalue>
        </mapping>
        <mapping>
          <value>other</value>
          <newvalue>1</newvalue>
        </mapping>
        <mapping>
          <value>redundant</value>
          <newvalue>3</newvalue>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>C7000 - OA Role</name>
      <mappings>
        <mapping>
          <value>1</value>
          <newvalue>standby</newvalue>
        </mapping>
        <mapping>
          <value>2</value>
          <newvalue>active</newvalue>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>C7000 - Power redundancy</name>
      <mappings>
        <mapping>
          <value>1</value>
          <newvalue>Other</newvalue>
        </mapping>
        <mapping>
          <value>2</value>
          <newvalue>Not redundant</newvalue>
        </mapping>
        <mapping>
          <value>3</value>
          <newvalue>Redundant</newvalue>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>C7000 - Power status</name>
      <mappings>
        <mapping>
          <value>1</value>
          <newvalue>noError</newvalue>
        </mapping>
        <mapping>
          <value>2</value>
          <newvalue>generalFailure</newvalue>
        </mapping>
        <mapping>
          <value>3</value>
          <newvalue>bistFailure</newvalue>
        </mapping>
        <mapping>
          <value>4</value>
          <newvalue>fanFailure</newvalue>
        </mapping>
        <mapping>
          <value>5</value>
          <newvalue>tempFailure</newvalue>
        </mapping>
        <mapping>
          <value>6</value>
          <newvalue>interlockOpen</newvalue>
        </mapping>
        <mapping>
          <value>7</value>
          <newvalue>epromFailed</newvalue>
        </mapping>
        <mapping>
          <value>8</value>
          <newvalue>vrefFailed</newvalue>
        </mapping>
        <mapping>
          <value>9</value>
          <newvalue>dacFailed</newvalue>
        </mapping>
        <mapping>
          <value>10</value>
          <newvalue>ramTestFailed</newvalue>
        </mapping>
        <mapping>
          <value>11</value>
          <newvalue>voltageChannelFailed</newvalue>
        </mapping>
        <mapping>
          <value>12</value>
          <newvalue>orringdiodeFailed</newvalue>
        </mapping>
        <mapping>
          <value>13</value>
          <newvalue>brownOut</newvalue>
        </mapping>
        <mapping>
          <value>14</value>
          <newvalue>giveupOnStartup</newvalue>
        </mapping>
        <mapping>
          <value>15</value>
          <newvalue>nvramInvalid</newvalue>
        </mapping>
        <mapping>
          <value>16</value>
          <newvalue>calibrationTableInvalid</newvalue>
        </mapping>
      </mappings>
    </value_map>
  </value_maps>
</zabbix_export>