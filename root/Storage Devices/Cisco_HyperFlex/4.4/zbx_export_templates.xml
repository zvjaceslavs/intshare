<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>4.4</version>
    <date>2020-06-16T08:14:46Z</date>
    <groups>
        <group>
            <name>Templates/Virtualization</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template - Cisco - HyperFlex</template>
            <name>Template - Cisco - HyperFlex</name>
            <description>Used Macros:&#13;
&#13;
{$HYPERFLEX_HOST} = IP or DNS of the Cluster Management IP&#13;
{$HYPERFLEX_USER} = User for connecting to HyperFlex RestAPI&#13;
{$HYPERFLEX_PASSWORD} = Password for Connecting to HyperFlex RestAPI</description>
            <groups>
                <group>
                    <name>Templates/Virtualization</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>HyperFlex Cluster - Performance</name>
                </application>
                <application>
                    <name>HyperFlex Web Scenario</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>IOPS - Read</name>
                    <type>HTTP_AGENT</type>
                    <key>hyperflex.cluster.performance.iops.read</key>
                    <history>1w</history>
                    <units>IOPS</units>
                    <authtype>BASIC</authtype>
                    <username>{$HYPERFLEX_USER}</username>
                    <password>{$HYPERFLEX_PASSWORD}</password>
                    <applications>
                        <application>
                            <name>HyperFlex Cluster - Performance</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params> if (!value) {
	 return 0;
	 }
try {
	var idata = JSON.parse(value);
	if (!idata) {
		return 0;
	}
    if (Array.isArray(idata)) {
		if (idata.length &gt; 0) {
			idata = idata[0];
		}
		else {
			return 0;
		}
	}
	var dpa = idata.datapoints;
	if (!dpa) {
		return 0;
	}
	if (Array.isArray(dpa)) {
		while (dpa.length &gt; 0) {
			var dp = dpa.pop();
			if (dp) {
				if (Array.isArray(dp)) {
					if (dp.length &gt; 0) {
						var el = parseFloat(dp[0]);
						if (!Number.isNaN(el)) {
							return el.toFixed(0);
						}
					}
				}
			}
		}
	}
	return 0;
}
catch (err) {
	//alert(&quot;Error: &quot; + err.message + &quot;\n&quot; + iops.substring(0,10));
}
return 0;</params>
                        </step>
                    </preprocessing>
                    <url>https://{$HYPERFLEX_HOST}/stats?target=stats.counters.scvmclient.allhosts.nfsReads.cluster.rate&amp;format=json</url>
                </item>
                <item>
                    <name>IOPS - Write</name>
                    <type>HTTP_AGENT</type>
                    <key>hyperflex.cluster.performance.iops.write</key>
                    <history>1w</history>
                    <units>IOPS</units>
                    <authtype>BASIC</authtype>
                    <username>{$HYPERFLEX_USER}</username>
                    <password>{$HYPERFLEX_PASSWORD}</password>
                    <applications>
                        <application>
                            <name>HyperFlex Cluster - Performance</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params> if (!value) {
	 return 0;
	 }
try {
	var idata = JSON.parse(value);
	if (!idata) {
		return 0;
	}
    if (Array.isArray(idata)) {
		if (idata.length &gt; 0) {
			idata = idata[0];
		}
		else {
			return 0;
		}
	}
	var dpa = idata.datapoints;
	if (!dpa) {
		return 0;
	}
	if (Array.isArray(dpa)) {
		while (dpa.length &gt; 0) {
			var dp = dpa.pop();
			if (dp) {
				if (Array.isArray(dp)) {
					if (dp.length &gt; 0) {
						var el = parseFloat(dp[0]);
						if (!Number.isNaN(el)) {
							return el.toFixed(0);
						}
					}
				}
			}
		}
	}
	return 0;
}
catch (err) {
	//alert(&quot;Error: &quot; + err.message + &quot;\n&quot; + iops.substring(0,10));
}
return 0;</params>
                        </step>
                    </preprocessing>
                    <url>https://{$HYPERFLEX_HOST}/stats?target=stats.counters.scvmclient.allhosts.nfsWrites.cluster.rate&amp;format=json</url>
                </item>
                <item>
                    <name>Latency - Read</name>
                    <type>HTTP_AGENT</type>
                    <key>hyperflex.cluster.performance.latency.read</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <authtype>BASIC</authtype>
                    <username>{$HYPERFLEX_USER}</username>
                    <password>{$HYPERFLEX_PASSWORD}</password>
                    <applications>
                        <application>
                            <name>HyperFlex Cluster - Performance</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params> if (!value) {
	 return 0;
	 }
try {
	var idata = JSON.parse(value);
	if (!idata) {
		return 0;
	}
    if (Array.isArray(idata)) {
		if (idata.length &gt; 0) {
			idata = idata[0];
		}
		else {
			return 0;
		}
	}
	var dpa = idata.datapoints;
	if (!dpa) {
		return 0;
	}
	if (Array.isArray(dpa)) {
		while (dpa.length &gt; 0) {
			var dp = dpa.pop();
			if (dp) {
				if (Array.isArray(dp)) {
					if (dp.length &gt; 0) {
						var el = parseFloat(dp[0]);
						if (!Number.isNaN(el)) {
							var el = el * 0.001
							return el;
						}
					}
				}
			}
		}
	}
	return 0;
}
catch (err) {
	//alert(&quot;Error: &quot; + err.message + &quot;\n&quot; + iops.substring(0,10));
}
return 0;</params>
                        </step>
                    </preprocessing>
                    <url>https://{$HYPERFLEX_HOST}/stats?target=divideSeries(stats.timers.scvmclient.allhosts.nfsReadLatency.cluster.total%2Cstats.counters.scvmclient.allhosts.nfsReads.cluster.count)&amp;format=json</url>
                </item>
                <item>
                    <name>Latency - Write</name>
                    <type>HTTP_AGENT</type>
                    <key>hyperflex.cluster.performance.latency.write</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <authtype>BASIC</authtype>
                    <username>{$HYPERFLEX_USER}</username>
                    <password>{$HYPERFLEX_PASSWORD}</password>
                    <applications>
                        <application>
                            <name>HyperFlex Cluster - Performance</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params> if (!value) {
	 return 0;
	 }
try {
	var idata = JSON.parse(value);
	if (!idata) {
		return 0;
	}
    if (Array.isArray(idata)) {
		if (idata.length &gt; 0) {
			idata = idata[0];
		}
		else {
			return 0;
		}
	}
	var dpa = idata.datapoints;
	if (!dpa) {
		return 0;
	}
	if (Array.isArray(dpa)) {
		while (dpa.length &gt; 0) {
			var dp = dpa.pop();
			if (dp) {
				if (Array.isArray(dp)) {
					if (dp.length &gt; 0) {
						var el = parseFloat(dp[0]);
						if (!Number.isNaN(el)) {
							var el = el * 0.001
							return el;
						}
					}
				}
			}
		}
	}
	return 0;
}
catch (err) {
	//alert(&quot;Error: &quot; + err.message + &quot;\n&quot; + iops.substring(0,10));
}
return 0;</params>
                        </step>
                    </preprocessing>
                    <url>https://{$HYPERFLEX_HOST}/stats?target=divideSeries(stats.timers.scvmclient.allhosts.nfsWriteLatency.cluster.total,stats.counters.scvmclient.allhosts.nfsWrites.cluster.count)&amp;format=json</url>
                </item>
                <item>
                    <name>Throughput - Read</name>
                    <type>HTTP_AGENT</type>
                    <key>hyperflex.cluster.performance.throughput.read</key>
                    <history>1w</history>
                    <units>bps</units>
                    <authtype>BASIC</authtype>
                    <username>{$HYPERFLEX_USER}</username>
                    <password>{$HYPERFLEX_PASSWORD}</password>
                    <applications>
                        <application>
                            <name>HyperFlex Cluster - Performance</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params> if (!value) {
	 return 0;
	 }
try {
	var idata = JSON.parse(value);
	if (!idata) {
		return 0;
	}
    if (Array.isArray(idata)) {
		if (idata.length &gt; 0) {
			idata = idata[0];
		}
		else {
			return 0;
		}
	}
	var dpa = idata.datapoints;
	if (!dpa) {
		return 0;
	}
	if (Array.isArray(dpa)) {
		while (dpa.length &gt; 0) {
			var dp = dpa.pop();
			if (dp) {
				if (Array.isArray(dp)) {
					if (dp.length &gt; 0) {
						var el = parseFloat(dp[0]);
						if (!Number.isNaN(el)) {
							return el.toFixed(0);
						}
					}
				}
			}
		}
	}
	return 0;
}
catch (err) {
	//alert(&quot;Error: &quot; + err.message + &quot;\n&quot; + iops.substring(0,10));
}
return 0;</params>
                        </step>
                    </preprocessing>
                    <url>https://{$HYPERFLEX_HOST}/stats?target=scale(stats.counters.scvmclient.allhosts.nfsBytesRead.cluster.rate%2C%201)&amp;format=json</url>
                </item>
                <item>
                    <name>Throughput - Write</name>
                    <type>HTTP_AGENT</type>
                    <key>hyperflex.cluster.performance.throughput.write</key>
                    <history>1w</history>
                    <units>bps</units>
                    <authtype>BASIC</authtype>
                    <username>{$HYPERFLEX_USER}</username>
                    <password>{$HYPERFLEX_PASSWORD}</password>
                    <applications>
                        <application>
                            <name>HyperFlex Cluster - Performance</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params> if (!value) {
	 return 0;
	 }
try {
	var idata = JSON.parse(value);
	if (!idata) {
		return 0;
	}
    if (Array.isArray(idata)) {
		if (idata.length &gt; 0) {
			idata = idata[0];
		}
		else {
			return 0;
		}
	}
	var dpa = idata.datapoints;
	if (!dpa) {
		return 0;
	}
	if (Array.isArray(dpa)) {
		while (dpa.length &gt; 0) {
			var dp = dpa.pop();
			if (dp) {
				if (Array.isArray(dp)) {
					if (dp.length &gt; 0) {
						var el = parseFloat(dp[0]);
						if (!Number.isNaN(el)) {
							return el.toFixed(0);
						}
					}
				}
			}
		}
	}
	return 0;
}
catch (err) {
	//alert(&quot;Error: &quot; + err.message + &quot;\n&quot; + iops.substring(0,10));
}
return 0;</params>
                        </step>
                    </preprocessing>
                    <url>https://{$HYPERFLEX_HOST}/stats?target=scale(stats.counters.scvmclient.allhosts.nfsBytesWritten.cluster.rate%2C%201)&amp;format=json</url>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>HyperFlex Cluster Discovery</name>
                    <type>HTTP_AGENT</type>
                    <key>hyperflex.cluster.discovery</key>
                    <delay>12h</delay>
                    <authtype>BASIC</authtype>
                    <username>{$HYPERFLEX_USER}</username>
                    <password>{$HYPERFLEX_PASSWORD}</password>
                    <lifetime>14d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>Version</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.about.version.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - General</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.displayVersion</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.monitoring.about.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Savings - Compression</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.compressionSavings.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - Storage Usage</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.compressionSavings</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.monitoring.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Savings - Deduplication</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.deduplicationSavings.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - Storage Usage</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.deduplicationSavings</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.monitoring.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Capacity - Free (percentage)</name>
                            <type>CALCULATED</type>
                            <key>hyperflex.cluster.freeCapacityInBytes.percentage[{#HX.CLUSTER.NAME}]</key>
                            <history>1d</history>
                            <units>%</units>
                            <params>100/&#13;
&#13;
100/last(&quot;hyperflex.cluster.totalCapacityInBytes.[{#HX.CLUSTER.NAME}]&quot;)*last(&quot;hyperflex.cluster.freeCapacityInBytes.[{#HX.CLUSTER.NAME}]&quot;)</params>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - Storage Usage</name>
                                </application_prototype>
                            </application_prototypes>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}&lt;10</expression>
                                    <name>HyperFlex - Free disk space is less than 10%</name>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{last()}&lt;15</expression>
                                    <name>HyperFlex - Free disk space is less than 15%</name>
                                    <priority>WARNING</priority>
                                    <dependencies>
                                        <dependency>
                                            <name>HyperFlex - Free disk space is less than 10%</name>
                                            <expression>{Template - Cisco - HyperFlex:hyperflex.cluster.freeCapacityInBytes.percentage[{#HX.CLUSTER.NAME}].last()}&lt;10</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Capacity - Free</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.freeCapacityInBytes.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - Storage Usage</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.freeCapacityInBytes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.monitoring.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>RestAPI Call - Cluster - About</name>
                            <type>HTTP_AGENT</type>
                            <key>hyperflex.cluster.monitoring.about.[{#HX.CLUSTER.NAME}]</key>
                            <delay>2h</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <authtype>BASIC</authtype>
                            <username>{$HYPERFLEX_USER}</username>
                            <password>{$HYPERFLEX_PASSWORD}</password>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex RestAPI</name>
                                </application_prototype>
                            </application_prototypes>
                            <url>https://{$HYPERFLEX_HOST}/coreapi/v1/clusters/{{#HX.CLUSTER.UID}.regsub(&quot;^([0-9]+):([0-9]+)&quot;,&quot;\1%3A\2&quot;)}/about</url>
                        </item_prototype>
                        <item_prototype>
                            <name>Resiliency Policy Compliance Status</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.monitoring.policyCompliance.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - State</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.resiliencyDetails.policyCompliance</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.monitoring.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{regexp(^COMPLIANT$)}=0</expression>
                                    <name>HyperFlex Resiliency Policy Compliance Status {ITEM.VALUE}</name>
                                    <priority>WARNING</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Resiliency Status</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.monitoring.resiliencyStatus.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - State</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.resiliencyDetails.resiliencyState</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.monitoring.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{regexp(^HEALTHY$)}=0</expression>
                                    <name>HyperFlex Resiliency Status {ITEM.VALUE}</name>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Cluster Status</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.monitoring.state.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - State</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.state</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.monitoring.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{regexp(^ONLINE$)}=0</expression>
                                    <name>HyperFlex Cluster {ITEM.VALUE}</name>
                                    <priority>DISASTER</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Witness Status</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.monitoring.witness.state.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - State</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.state</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.monitoring.witness.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{regexp(^ONLINE$)}=0</expression>
                                    <name>HyperFlex Witness Node {ITEM.VALUE}</name>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>RestAPI Call - Cluster - Witness</name>
                            <type>HTTP_AGENT</type>
                            <key>hyperflex.cluster.monitoring.witness.[{#HX.CLUSTER.NAME}]</key>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <authtype>BASIC</authtype>
                            <username>{$HYPERFLEX_USER}</username>
                            <password>{$HYPERFLEX_PASSWORD}</password>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex RestAPI</name>
                                </application_prototype>
                            </application_prototypes>
                            <url>https://{$HYPERFLEX_HOST}/coreapi/v1/clusters/{{#HX.CLUSTER.UID}.regsub(&quot;^([0-9]+):([0-9]+)&quot;,&quot;\1%3A\2&quot;)}/witness</url>
                        </item_prototype>
                        <item_prototype>
                            <name>RestAPI Call - Cluster</name>
                            <type>HTTP_AGENT</type>
                            <key>hyperflex.cluster.monitoring.[{#HX.CLUSTER.NAME}]</key>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <authtype>BASIC</authtype>
                            <username>{$HYPERFLEX_USER}</username>
                            <password>{$HYPERFLEX_PASSWORD}</password>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex RestAPI</name>
                                </application_prototype>
                            </application_prototypes>
                            <url>https://{$HYPERFLEX_HOST}/coreapi/v1/clusters/{{#HX.CLUSTER.UID}.regsub(&quot;^([0-9]+):([0-9]+)&quot;,&quot;\1%3A\2&quot;)}</url>
                        </item_prototype>
                        <item_prototype>
                            <name>Nodes (Active)</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.numActiveNodes.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <history>1w</history>
                            <trends>0</trends>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - General</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.numActiveNodes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.monitoring.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Nodes</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.numNodes.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <history>1w</history>
                            <trends>0</trends>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - General</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.numNodes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.monitoring.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Enabled</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.rebalance.rebalanceEnabled.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <history>1w</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - Rebalance</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.rebalanceEnabled</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.rebalance.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{regexp(^true$)}=0</expression>
                                    <name>HyperFlex Rebalance not enabled</name>
                                    <priority>WARNING</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>State</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.rebalance.rebalanceStatus.rebalanceState.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <history>1w</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - Rebalance</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.rebalanceStatus.rebalanceState</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.rebalance.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>RestAPI Call - Rebalance</name>
                            <type>HTTP_AGENT</type>
                            <key>hyperflex.cluster.rebalance.[{#HX.CLUSTER.NAME}]</key>
                            <delay>15m</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <authtype>BASIC</authtype>
                            <username>{$HYPERFLEX_USER}</username>
                            <password>{$HYPERFLEX_PASSWORD}</password>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex RestAPI</name>
                                </application_prototype>
                            </application_prototypes>
                            <url>https://{$HYPERFLEX_HOST}/rest/rebalance/status</url>
                        </item_prototype>
                        <item_prototype>
                            <name>Capacity - Total</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.totalCapacityInBytes.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - Storage Usage</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.totalCapacityInBytes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.monitoring.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Savings - Total</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.totalSavings.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - Storage Usage</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.totalSavings</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.monitoring.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Uptime</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.uptime.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - General</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.uptime</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.monitoring.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Capacity - Used (percentage)</name>
                            <type>CALCULATED</type>
                            <key>hyperflex.cluster.usedCapacityInBytes.percentage[{#HX.CLUSTER.NAME}]</key>
                            <history>1d</history>
                            <units>%</units>
                            <params>100/&#13;
&#13;
100/last(&quot;hyperflex.cluster.totalCapacityInBytes.[{#HX.CLUSTER.NAME}]&quot;)*last(&quot;hyperflex.cluster.usedCapacityInBytes.[{#HX.CLUSTER.NAME}]&quot;)</params>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - Storage Usage</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Capacity - Used</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.usedCapacityInBytes.[{#HX.CLUSTER.NAME}]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Cluster - {#HX.CLUSTER.NAME} - Storage Usage</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.usedCapacityInBytes</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.monitoring.[{#HX.CLUSTER.NAME}]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <url>https://{$HYPERFLEX_HOST}/coreapi/v1/clusters</url>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#HX.CLUSTER.NAME}</lld_macro>
                            <path>$.name</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#HX.CLUSTER.UID}</lld_macro>
                            <path>$.uuid</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                </discovery_rule>
                <discovery_rule>
                    <name>HyperFlex Datastore Discovery</name>
                    <type>HTTP_AGENT</type>
                    <key>hyperflex.datastore.discovery</key>
                    <delay>12h</delay>
                    <authtype>BASIC</authtype>
                    <username>{$HYPERFLEX_USER}</username>
                    <password>{$HYPERFLEX_PASSWORD}</password>
                    <lifetime>14d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>RestAPI Call - Datastore - {#HX.DATASTORE.UID}</name>
                            <type>HTTP_AGENT</type>
                            <key>hyperflex.datastore.monitoring.[{#HX.DATASTORE.UID}]</key>
                            <delay>15m</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <authtype>BASIC</authtype>
                            <username>{$HYPERFLEX_USER}</username>
                            <password>{$HYPERFLEX_PASSWORD}</password>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex RestAPI</name>
                                </application_prototype>
                            </application_prototypes>
                            <url>https://{$HYPERFLEX_HOST}/rest/datastores/{{#HX.DATASTORE.UID}.regsub(&quot;^([a-z0-9]+):([a-z0-9]+)&quot;,&quot;\1%3A\2&quot;)}</url>
                        </item_prototype>
                        <item_prototype>
                            <name>Free Space</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.datastore.stPlatDatastore.freeCapacity.[{#HX.DATASTORE.UID}]</key>
                            <delay>0</delay>
                            <history>1d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Datastore - {#HX.DATASTORE.NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.stPlatDatastore.freeCapacity</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.datastore.monitoring.[{#HX.DATASTORE.UID}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Total Space</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.datastore.stPlatDatastore.totalCapacity.[{#HX.DATASTORE.UID}]</key>
                            <delay>0</delay>
                            <history>1d</history>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Datastore - {#HX.DATASTORE.NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.stPlatDatastore.totalCapacity</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.datastore.monitoring.[{#HX.DATASTORE.UID}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Used Space</name>
                            <type>CALCULATED</type>
                            <key>hyperflex.datastore.usedCapacity.[{#HX.DATASTORE.UID}]</key>
                            <delay>15m</delay>
                            <history>1d</history>
                            <units>B</units>
                            <params>last(&quot;hyperflex.datastore.stPlatDatastore.totalCapacity.[{#HX.DATASTORE.UID}]&quot;)-last(&quot;hyperflex.datastore.stPlatDatastore.freeCapacity.[{#HX.DATASTORE.UID}]&quot;)</params>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Datastore - {#HX.DATASTORE.NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Accessibility Summary</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.datastore.virtDatastore.accessibilitySummary.[{#HX.DATASTORE.UID}]</key>
                            <delay>0</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Datastore - {#HX.DATASTORE.NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.virtDatastore.accessibilitySummary</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.datastore.monitoring.[{#HX.DATASTORE.UID}]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{regexp(^ACCESSIBLE$)}=0</expression>
                                    <name>{#HX.DATASTORE.NAME} {ITEM.VALUE}</name>
                                    <priority>WARNING</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Mount Status</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.datastore.virtDatastore.mountSummary.[{#HX.DATASTORE.UID}]</key>
                            <delay>0</delay>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Datastore - {#HX.DATASTORE.NAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.virtDatastore.mountSummary</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.datastore.monitoring.[{#HX.DATASTORE.UID}]</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{regexp(^MOUNTED$)}=0</expression>
                                    <name>{#HX.DATASTORE.NAME} {ITEM.VALUE}</name>
                                    <priority>WARNING</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <url>https://{$HYPERFLEX_HOST}/rest/datastores</url>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#HX.DATASTORE.UID}</lld_macro>
                            <path>$.entityRef.id</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#HX.DATASTORE.NAME}</lld_macro>
                            <path>$.entityRef.name</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                </discovery_rule>
                <discovery_rule>
                    <name>HyperFlex Node Discovery</name>
                    <type>HTTP_AGENT</type>
                    <key>hyperflex.node.discovery</key>
                    <delay>12h</delay>
                    <authtype>BASIC</authtype>
                    <username>{$HYPERFLEX_USER}</username>
                    <password>{$HYPERFLEX_PASSWORD}</password>
                    <lifetime>14d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>State</name>
                            <type>DEPENDENT</type>
                            <key>hyperflex.cluster.monitoring.state.[{#HX.NODE.UID}]</key>
                            <delay>0</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Node - {#HX.NODE.IP}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.state</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>hyperflex.cluster.monitoring.[{#HX.NODE.UID}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>RestAPI Call - Node - {#HX.NODE.UID}</name>
                            <type>HTTP_AGENT</type>
                            <key>hyperflex.cluster.monitoring.[{#HX.NODE.UID}]</key>
                            <history>1d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <authtype>BASIC</authtype>
                            <username>{$HYPERFLEX_USER}</username>
                            <password>{$HYPERFLEX_PASSWORD}</password>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex RestAPI</name>
                                </application_prototype>
                            </application_prototypes>
                            <url>https://{$HYPERFLEX_HOST}/coreapi/v1/hypervisor/hosts/{#HX.NODE.UID}/controllervm</url>
                        </item_prototype>
                        <item_prototype>
                            <name>ICMP loss</name>
                            <type>SIMPLE</type>
                            <key>icmppingloss[{#HX.NODE.IP}]</key>
                            <history>1w</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Node - {#HX.NODE.IP}</name>
                                </application_prototype>
                            </application_prototypes>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$ICMP_LOSS_WARN} and {min(5m)}&lt;100</expression>
                                    <name>HyperFlex Node - {#HX.NODE.IP} - High ICMP ping loss</name>
                                    <priority>WARNING</priority>
                                    <dependencies>
                                        <dependency>
                                            <name>HyperFlex Node - {#HX.NODE.IP}  - Unavailable by ICMP ping</name>
                                            <expression>{Template - Cisco - HyperFlex:icmpping[{#HX.NODE.IP}].max(#3)}=0</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>ICMP response time</name>
                            <type>SIMPLE</type>
                            <key>icmppingsec[{#HX.NODE.IP}]</key>
                            <history>1w</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Node - {#HX.NODE.IP}</name>
                                </application_prototype>
                            </application_prototypes>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{avg(5m)}&gt;{$ICMP_RESPONSE_TIME_WARN}</expression>
                                    <name>HyperFlex Node - {#HX.NODE.IP}  - High ICMP ping response time</name>
                                    <priority>WARNING</priority>
                                    <dependencies>
                                        <dependency>
                                            <name>HyperFlex Node - {#HX.NODE.IP} - High ICMP ping loss</name>
                                            <expression>{Template - Cisco - HyperFlex:icmppingloss[{#HX.NODE.IP}].min(5m)}&gt;{$ICMP_LOSS_WARN} and {Template - Cisco - HyperFlex:icmppingloss[{#HX.NODE.IP}].min(5m)}&lt;100</expression>
                                        </dependency>
                                        <dependency>
                                            <name>HyperFlex Node - {#HX.NODE.IP}  - Unavailable by ICMP ping</name>
                                            <expression>{Template - Cisco - HyperFlex:icmpping[{#HX.NODE.IP}].max(#3)}=0</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>ICMP ping</name>
                            <type>SIMPLE</type>
                            <key>icmpping[{#HX.NODE.IP}]</key>
                            <history>1w</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HyperFlex Node - {#HX.NODE.IP}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Service state</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{max(#3)}=0</expression>
                                    <name>HyperFlex Node - {#HX.NODE.IP}  - Unavailable by ICMP ping</name>
                                    <priority>HIGH</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <url>https://{$HYPERFLEX_HOST}/coreapi/v1/hypervisor/controllervms</url>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#HX.NODE.UID}</lld_macro>
                            <path>$.hIdentity.uuid</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#HX.NODE.IP}</lld_macro>
                            <path>$.mgmtIp.ip</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                </discovery_rule>
            </discovery_rules>
            <httptests>
                <httptest>
                    <name>HyperFlex API Explorer</name>
                    <application>
                        <name>HyperFlex Web Scenario</name>
                    </application>
                    <authentication>BASIC</authentication>
                    <http_user>{$HYPERFLEX_USER}</http_user>
                    <http_password>{$HYPERFLEX_PASSWORD}</http_password>
                    <steps>
                        <step>
                            <name>HyperFlex API Explorer</name>
                            <url>https://{$HYPERFLEX_HOST}/apiexplorer/</url>
                            <follow_redirects>NO</follow_redirects>
                            <status_codes>200</status_codes>
                        </step>
                    </steps>
                </httptest>
                <httptest>
                    <name>HyperFlex Connect</name>
                    <application>
                        <name>HyperFlex Web Scenario</name>
                    </application>
                    <steps>
                        <step>
                            <name>HyperFlex Connect</name>
                            <url>https://{$HYPERFLEX_HOST}/</url>
                            <follow_redirects>NO</follow_redirects>
                            <status_codes>200</status_codes>
                        </step>
                    </steps>
                </httptest>
                <httptest>
                    <name>HyperFlex REST About</name>
                    <application>
                        <name>HyperFlex Web Scenario</name>
                    </application>
                    <steps>
                        <step>
                            <name>HyperFlex REST About</name>
                            <url>https://{$HYPERFLEX_HOST}/rest/about</url>
                            <follow_redirects>NO</follow_redirects>
                            <status_codes>200</status_codes>
                        </step>
                    </steps>
                </httptest>
            </httptests>
            <macros>
                <macro>
                    <macro>{$ICMP_LOSS_WARN}</macro>
                    <value>20</value>
                </macro>
                <macro>
                    <macro>{$ICMP_RESPONSE_TIME_WARN}</macro>
                    <value>0.15</value>
                </macro>
            </macros>
            <screens>
                <screen>
                    <name>Performance</name>
                    <hsize>1</hsize>
                    <vsize>3</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>IOPS</name>
                                <host>Template - Cisco - HyperFlex</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Throughput</name>
                                <host>Template - Cisco - HyperFlex</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>0</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>Latency</name>
                                <host>Template - Cisco - HyperFlex</host>
                            </resource>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>2</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                    </screen_items>
                </screen>
            </screens>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>{Template - Cisco - HyperFlex:web.test.rspcode[HyperFlex REST About,HyperFlex REST About].last()}&lt;&gt;200 or {Template - Cisco - HyperFlex:web.test.fail[HyperFlex REST About].last()}&gt;0</expression>
            <name>HyperFlex 'API' not reachable</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template - Cisco - HyperFlex:web.test.rspcode[HyperFlex API Explorer,HyperFlex API Explorer].last()}&lt;&gt;200 or {Template - Cisco - HyperFlex:web.test.fail[HyperFlex API Explorer].last()}&gt;0</expression>
            <name>HyperFlex 'API Explorer' not reachable</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template - Cisco - HyperFlex:web.test.rspcode[HyperFlex Connect,HyperFlex Connect].last()}&lt;&gt;200 or {Template - Cisco - HyperFlex:web.test.fail[HyperFlex Connect].last()}&gt;0</expression>
            <name>HyperFlex 'HyperFlex Connect' not reachable</name>
            <priority>WARNING</priority>
        </trigger>
    </triggers>
    <graphs>
        <graph>
            <name>IOPS</name>
            <show_triggers>NO</show_triggers>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>Template - Cisco - HyperFlex</host>
                        <key>hyperflex.cluster.performance.iops.read</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template - Cisco - HyperFlex</host>
                        <key>hyperflex.cluster.performance.iops.write</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Latency</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>Template - Cisco - HyperFlex</host>
                        <key>hyperflex.cluster.performance.latency.read</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template - Cisco - HyperFlex</host>
                        <key>hyperflex.cluster.performance.latency.write</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Throughput</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>Template - Cisco - HyperFlex</host>
                        <key>hyperflex.cluster.performance.throughput.read</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template - Cisco - HyperFlex</host>
                        <key>hyperflex.cluster.performance.throughput.write</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
    <value_maps>
        <value_map>
            <name>Service state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Down</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Up</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
