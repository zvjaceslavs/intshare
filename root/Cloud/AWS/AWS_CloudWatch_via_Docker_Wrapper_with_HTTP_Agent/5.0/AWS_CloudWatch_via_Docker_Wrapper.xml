<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <date>2020-08-03T16:16:55Z</date>
    <groups>
        <group>
            <name>Templates</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>AWS CloudWatch via Docker Wrapper</template>
            <name>AWS CloudWatch via Docker Wrapper</name>
            <description>Monitorizacion de AWS via CloudWatch utilizando un Wrapper desarrollado en NodeJS.</description>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <discovery_rules>
                <discovery_rule>
                    <name>Get Credentials</name>
                    <type>HTTP_AGENT</type>
                    <key>get.bearer.token</key>
                    <delay>1h</delay>
                    <description>Recupera el Bearer token con el cual podremos acceder a la API</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>EC2 CPUUtilization</name>
                            <type>HTTP_AGENT</type>
                            <key>get.ec2.CPUUtilization[{#ACCOUNT}]</key>
                            <delay>5m</delay>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>The percentage of CPU utilization.&#13;
&#13;
Units: Percent</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Average</params>
                                </step>
                            </preprocessing>
                            <url>{$API_SERVER}/api/v1/aws/getmetrics</url>
                            <posts>{&#13;
    &quot;Config&quot;: {&#13;
        &quot;Account&quot;: &quot;{#ACCOUNT}&quot;,&#13;
        &quot;Region&quot;: &quot;{$REGION}&quot;&#13;
    },&#13;
    &quot;Metric&quot;: {&#13;
        &quot;Namespace&quot;: &quot;AWS/EC2&quot;,&#13;
        &quot;MetricName&quot;: &quot;CPUUtilization&quot;,&#13;
        &quot;Dimensions&quot;: [{&#13;
                    &quot;Name&quot;: &quot;InstanceType&quot;,&#13;
                    &quot;Value&quot;: &quot;m5.2xlarge&quot;&#13;
         }]&#13;
    }&#13;
}</posts>
                            <post_type>JSON</post_type>
                            <headers>
                                <header>
                                    <name>Authorization</name>
                                    <value>Bearer {#TOKEN}</value>
                                </header>
                                <header>
                                    <name>Content-Type</name>
                                    <value>application/json</value>
                                </header>
                            </headers>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <name>ElastiCache CacheHitRate</name>
                            <type>HTTP_AGENT</type>
                            <key>get.ElastiCache.CacheHitRate[{#ACCOUNT}]</key>
                            <delay>5m</delay>
                            <description>The number of unsuccessful read-only key lookups in the main dictionary. This is derived fromkeyspace_misses statistic at Redis INFO.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Average</params>
                                </step>
                            </preprocessing>
                            <url>{$API_SERVER}/api/v1/aws/getmetrics</url>
                            <posts>{&#13;
    &quot;Config&quot;: {&#13;
        &quot;Account&quot;: &quot;{#ACCOUNT}&quot;,&#13;
        &quot;Region&quot;: &quot;{$REGION}&quot;&#13;
    },&#13;
    &quot;Metric&quot;: {&#13;
        &quot;Namespace&quot;: &quot;AWS/ElastiCache&quot;,&#13;
        &quot;MetricName&quot;: &quot;CacheHitRate&quot;,&#13;
        &quot;Dimensions&quot;: [{&#13;
                    &quot;Name&quot;: &quot;CacheClusterId&quot;,&#13;
                    &quot;Value&quot;: &quot;{$REDISDBNAME}&quot;&#13;
                }]&#13;
    }&#13;
}</posts>
                            <post_type>JSON</post_type>
                            <headers>
                                <header>
                                    <name>Authorization</name>
                                    <value>Bearer {#TOKEN}</value>
                                </header>
                                <header>
                                    <name>Content-Type</name>
                                    <value>application/json</value>
                                </header>
                            </headers>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <name>ElastiCache CPUUtilization</name>
                            <type>HTTP_AGENT</type>
                            <key>get.ElastiCache.CPUUtilization[{#ACCOUNT}]</key>
                            <delay>5m</delay>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>The percentage of CPU utilization for the entire host. Because Redis is single-threaded, we recommend you monitor EngineCPUUtilization metric for nodes with 4 or more vCPUs.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Average</params>
                                </step>
                            </preprocessing>
                            <url>{$API_SERVER}/api/v1/aws/getmetrics</url>
                            <posts>{&#13;
    &quot;Config&quot;: {&#13;
        &quot;Account&quot;: &quot;{#ACCOUNT}&quot;,&#13;
        &quot;Region&quot;: &quot;{$REGION}&quot;&#13;
    },&#13;
    &quot;Metric&quot;: {&#13;
        &quot;Namespace&quot;: &quot;AWS/ElastiCache&quot;,&#13;
        &quot;MetricName&quot;: &quot;CPUUtilization&quot;,&#13;
        &quot;Dimensions&quot;: [{&#13;
                    &quot;Name&quot;: &quot;CacheClusterId&quot;,&#13;
                    &quot;Value&quot;: &quot;{$REDISDBNAME}&quot;&#13;
                }]&#13;
    }&#13;
}</posts>
                            <post_type>JSON</post_type>
                            <headers>
                                <header>
                                    <name>Authorization</name>
                                    <value>Bearer {#TOKEN}</value>
                                </header>
                                <header>
                                    <name>Content-Type</name>
                                    <value>application/json</value>
                                </header>
                            </headers>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <name>ElastiCache CurrConnections</name>
                            <type>HTTP_AGENT</type>
                            <key>get.ElastiCache.CurrConnections[{#ACCOUNT}]</key>
                            <delay>5m</delay>
                            <value_type>FLOAT</value_type>
                            <description>The number of client connections, excluding connections from read replicas. ElastiCache uses two to four of the connections to monitor the cluster in each case. This is derived from the connected_clients statistic at Redis INFO.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Average</params>
                                </step>
                            </preprocessing>
                            <url>{$API_SERVER}/api/v1/aws/getmetrics</url>
                            <posts>{&#13;
    &quot;Config&quot;: {&#13;
        &quot;Account&quot;: &quot;{#ACCOUNT}&quot;,&#13;
        &quot;Region&quot;: &quot;{$REGION}&quot;&#13;
    },&#13;
    &quot;Metric&quot;: {&#13;
        &quot;Namespace&quot;: &quot;AWS/ElastiCache&quot;,&#13;
        &quot;MetricName&quot;: &quot;CurrConnections&quot;,&#13;
        &quot;Dimensions&quot;: [{&#13;
                    &quot;Name&quot;: &quot;CacheClusterId&quot;,&#13;
                    &quot;Value&quot;: &quot;{$REDISDBNAME}&quot;&#13;
                }]&#13;
    }&#13;
}</posts>
                            <post_type>JSON</post_type>
                            <headers>
                                <header>
                                    <name>Authorization</name>
                                    <value>Bearer {#TOKEN}</value>
                                </header>
                                <header>
                                    <name>Content-Type</name>
                                    <value>application/json</value>
                                </header>
                            </headers>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <name>ElastiCache SwapUsage</name>
                            <type>HTTP_AGENT</type>
                            <key>get.ElastiCache.SwapUsage[{#ACCOUNT}]</key>
                            <delay>5m</delay>
                            <value_type>FLOAT</value_type>
                            <units>b</units>
                            <description>The amount of swap used on the host.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Average</params>
                                </step>
                            </preprocessing>
                            <url>{$API_SERVER}/api/v1/aws/getmetrics</url>
                            <posts>{&#13;
    &quot;Config&quot;: {&#13;
        &quot;Account&quot;: &quot;{#ACCOUNT}&quot;,&#13;
        &quot;Region&quot;: &quot;{$REGION}&quot;&#13;
    },&#13;
    &quot;Metric&quot;: {&#13;
        &quot;Namespace&quot;: &quot;AWS/ElastiCache&quot;,&#13;
        &quot;MetricName&quot;: &quot;SwapUsage&quot;,&#13;
        &quot;Dimensions&quot;: [{&#13;
                    &quot;Name&quot;: &quot;CacheClusterId&quot;,&#13;
                    &quot;Value&quot;: &quot;{$REDISDBNAME}&quot;&#13;
                }]&#13;
    }&#13;
}</posts>
                            <post_type>JSON</post_type>
                            <headers>
                                <header>
                                    <name>Authorization</name>
                                    <value>Bearer {#TOKEN}</value>
                                </header>
                                <header>
                                    <name>Content-Type</name>
                                    <value>application/json</value>
                                </header>
                            </headers>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS CPUUtilization</name>
                            <type>HTTP_AGENT</type>
                            <key>get.rds.CPUUtilization[{#ACCOUNT}]</key>
                            <delay>5m</delay>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>The percentage of CPU utilization.&#13;
&#13;
Units: Percent</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Average</params>
                                </step>
                            </preprocessing>
                            <url>{$API_SERVER}/api/v1/aws/getmetrics</url>
                            <posts>{&#13;
    &quot;Config&quot;: {&#13;
        &quot;Account&quot;: &quot;{#ACCOUNT}&quot;,&#13;
        &quot;Region&quot;: &quot;{$REGION}&quot;&#13;
    },&#13;
    &quot;Metric&quot;: {&#13;
        &quot;Namespace&quot;: &quot;AWS/RDS&quot;,&#13;
        &quot;MetricName&quot;: &quot;CPUUtilization&quot;,&#13;
        &quot;Dimensions&quot;: [{&#13;
                    &quot;Name&quot;: &quot;EngineName&quot;,&#13;
                    &quot;Value&quot;: &quot;postgres&quot;&#13;
         }]&#13;
    }&#13;
}</posts>
                            <post_type>JSON</post_type>
                            <headers>
                                <header>
                                    <name>Authorization</name>
                                    <value>Bearer {#TOKEN}</value>
                                </header>
                                <header>
                                    <name>Content-Type</name>
                                    <value>application/json</value>
                                </header>
                            </headers>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS DatabaseConnections</name>
                            <type>HTTP_AGENT</type>
                            <key>get.rds.DatabaseConnections[{#ACCOUNT}]</key>
                            <delay>5m</delay>
                            <description>The number of database connections in use.&#13;
&#13;
The metric value might not include broken database connections that haven't been cleaned up by your database yet. So, the number of database connections recorded by your database might be higher than the metric value.&#13;
&#13;
Units: Count</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Average</params>
                                </step>
                            </preprocessing>
                            <url>{$API_SERVER}/api/v1/aws/getmetrics</url>
                            <posts>{&#13;
    &quot;Config&quot;: {&#13;
        &quot;Account&quot;: &quot;{#ACCOUNT}&quot;,&#13;
        &quot;Region&quot;: &quot;{$REGION}&quot;&#13;
    },&#13;
    &quot;Metric&quot;: {&#13;
        &quot;Namespace&quot;: &quot;AWS/RDS&quot;,&#13;
        &quot;MetricName&quot;: &quot;DatabaseConnections&quot;,&#13;
        &quot;Dimensions&quot;: [{&#13;
                    &quot;Name&quot;: &quot;EngineName&quot;,&#13;
                    &quot;Value&quot;: &quot;postgres&quot;&#13;
         }]&#13;
    }&#13;
}</posts>
                            <post_type>JSON</post_type>
                            <headers>
                                <header>
                                    <name>Authorization</name>
                                    <value>Bearer {#TOKEN}</value>
                                </header>
                                <header>
                                    <name>Content-Type</name>
                                    <value>application/json</value>
                                </header>
                            </headers>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS FreeableMemory</name>
                            <type>HTTP_AGENT</type>
                            <key>get.rds.FreeableMemory[{#ACCOUNT}]</key>
                            <delay>5m</delay>
                            <value_type>FLOAT</value_type>
                            <units>b</units>
                            <description>&quot;The amount of available random access memory.&#13;
&#13;
For MariaDB, MySQL, Oracle, and PostgreSQL DB instances, this metric reports the value of the MemAvailable field of /proc/meminfo.&#13;
&#13;
Units: Bytes&quot;</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Average</params>
                                </step>
                            </preprocessing>
                            <url>{$API_SERVER}/api/v1/aws/getmetrics</url>
                            <posts>{&#13;
    &quot;Config&quot;: {&#13;
        &quot;Account&quot;: &quot;{#ACCOUNT}&quot;,&#13;
        &quot;Region&quot;: &quot;{$REGION}&quot;&#13;
    },&#13;
    &quot;Metric&quot;: {&#13;
        &quot;Namespace&quot;: &quot;AWS/RDS&quot;,&#13;
        &quot;MetricName&quot;: &quot;FreeableMemory&quot;,&#13;
        &quot;Dimensions&quot;: [{&#13;
                    &quot;Name&quot;: &quot;EngineName&quot;,&#13;
                    &quot;Value&quot;: &quot;postgres&quot;&#13;
         }]&#13;
    }&#13;
}</posts>
                            <post_type>JSON</post_type>
                            <headers>
                                <header>
                                    <name>Authorization</name>
                                    <value>Bearer {#TOKEN}</value>
                                </header>
                                <header>
                                    <name>Content-Type</name>
                                    <value>application/json</value>
                                </header>
                            </headers>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS FreeStorageSpace</name>
                            <type>HTTP_AGENT</type>
                            <key>get.rds.FreeStorageSpace[{#ACCOUNT}]</key>
                            <delay>5m</delay>
                            <value_type>FLOAT</value_type>
                            <units>b</units>
                            <description>&quot;The amount of available storage space.&#13;
&#13;
Units: Bytes&quot;</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Average</params>
                                </step>
                            </preprocessing>
                            <url>{$API_SERVER}/api/v1/aws/getmetrics</url>
                            <posts>{&#13;
    &quot;Config&quot;: {&#13;
        &quot;Account&quot;: &quot;{#ACCOUNT}&quot;,&#13;
        &quot;Region&quot;: &quot;{$REGION}&quot;&#13;
    },&#13;
    &quot;Metric&quot;: {&#13;
        &quot;Namespace&quot;: &quot;AWS/RDS&quot;,&#13;
        &quot;MetricName&quot;: &quot;FreeStorageSpace&quot;,&#13;
        &quot;Dimensions&quot;: [{&#13;
                    &quot;Name&quot;: &quot;EngineName&quot;,&#13;
                    &quot;Value&quot;: &quot;postgres&quot;&#13;
         }]&#13;
    }&#13;
}</posts>
                            <post_type>JSON</post_type>
                            <headers>
                                <header>
                                    <name>Authorization</name>
                                    <value>Bearer {#TOKEN}</value>
                                </header>
                                <header>
                                    <name>Content-Type</name>
                                    <value>application/json</value>
                                </header>
                            </headers>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS List Metrics</name>
                            <type>HTTP_AGENT</type>
                            <key>get.rds.metrics[{#ACCOUNT}]</key>
                            <delay>1d</delay>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <url>{$API_SERVER}/api/v1/aws/listmetrics</url>
                            <posts>{&#13;
    &quot;Config&quot;: {&#13;
        &quot;Account&quot;: &quot;{#ACCOUNT}&quot;,&#13;
        &quot;Region&quot;: &quot;{$REGION}&quot;&#13;
    },&#13;
    &quot;Metric&quot;: {&#13;
        &quot;Namespace&quot;: &quot;AWS/RDS&quot;,&#13;
        &quot;Dimensions&quot;: []&#13;
    }&#13;
}</posts>
                            <post_type>JSON</post_type>
                            <headers>
                                <header>
                                    <name>Authorization</name>
                                    <value>Bearer {#TOKEN}</value>
                                </header>
                                <header>
                                    <name>Content-Type</name>
                                    <value>application/json</value>
                                </header>
                            </headers>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS SwapUsage</name>
                            <type>HTTP_AGENT</type>
                            <key>get.rds.SwapUsage[{#ACCOUNT}]</key>
                            <delay>5m</delay>
                            <value_type>FLOAT</value_type>
                            <units>b</units>
                            <description>&quot;The amount of swap space used on the DB instance. This metric is not available for SQL Server.&#13;
&#13;
Units: Bytes&quot;</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.Average</params>
                                </step>
                            </preprocessing>
                            <url>{$API_SERVER}/api/v1/aws/getmetrics</url>
                            <posts>{&#13;
    &quot;Config&quot;: {&#13;
        &quot;Account&quot;: &quot;{#ACCOUNT}&quot;,&#13;
        &quot;Region&quot;: &quot;{$REGION}&quot;&#13;
    },&#13;
    &quot;Metric&quot;: {&#13;
        &quot;Namespace&quot;: &quot;AWS/RDS&quot;,&#13;
        &quot;MetricName&quot;: &quot;SwapUsage&quot;,&#13;
        &quot;Dimensions&quot;: [{&#13;
                    &quot;Name&quot;: &quot;EngineName&quot;,&#13;
                    &quot;Value&quot;: &quot;postgres&quot;&#13;
         }]&#13;
    }&#13;
}</posts>
                            <post_type>JSON</post_type>
                            <headers>
                                <header>
                                    <name>Authorization</name>
                                    <value>Bearer {#TOKEN}</value>
                                </header>
                                <header>
                                    <name>Content-Type</name>
                                    <value>application/json</value>
                                </header>
                            </headers>
                            <request_method>POST</request_method>
                        </item_prototype>
                    </item_prototypes>
                    <timeout>10s</timeout>
                    <url>{$API_SERVER}/auth/get/credentials</url>
                    <headers>
                        <header>
                            <name>Authorization</name>
                            <value>Basic YWRtaW46emFiYml4</value>
                        </header>
                        <header>
                            <name>Content-Type</name>
                            <value>application/json</value>
                        </header>
                        <header>
                            <name>Cache-Control</name>
                            <value>No-Store</value>
                        </header>
                    </headers>
                    <request_method>POST</request_method>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#TOKEN}</lld_macro>
                            <path>$.token</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#ACCOUNT}</lld_macro>
                            <path>$.account</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#TTL}</lld_macro>
                            <path>$.ttl</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$API_SERVER}</macro>
                    <value>http://10.1.2.100:3000</value>
                    <description>IP y Puerto en que escucha la API</description>
                </macro>
                <macro>
                    <macro>{$BASICTOKEN}</macro>
                    <value>YWRtaW46emFiYml4</value>
                    <description>Usr: admin Psw: zabbix</description>
                </macro>
                <macro>
                    <macro>{$REGION}</macro>
                    <value>eu-west-1</value>
                    <description>Region de AWS</description>
                </macro>
            </macros>
        </template>
    </templates>
</zabbix_export>
