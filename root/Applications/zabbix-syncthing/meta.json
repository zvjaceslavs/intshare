{"link_name": "zabbix-syncthing", "type": "Zabbix Tool", "OS": "", "vendor": "Others", "minZabbVer": "3.0.x", "link_desc": "<h2><a id=\"user-content-about\" class=\"anchor\" href=\"#about\"></a>About</h2>\n<p>It was about Christmas and I started to feel a little nerdy. So inside of me a wish was growing up: I wanted to have an overview over all the backup- and sync-processes I run during the day. So I installed Zabbix and started to play around with its extensions. This is a Bash-script consuming (one says so, right?) the RestAPI of Syncthing. When installed in your Zabbix-scripts-directory and after deploying the Template you may see the following data per Syncthing-folder:</p>\n<ul>\n<li>device-last-seen (string): when was the remote device seen for the last time?</li>\n<li>last-folder-scan-time (string): when happened the last local scan of the folder?</li>\n<li>last-sync-time (string): when was a file synced for the last time?</li>\n<li>last-synced-file (string): guess what?!? ;-)</li>\n</ul>\n<p>Furthermore a quite expensive /rest/db/status-call is done to catch values like:</p>\n<ul>\n<li>globalBytes, inSyncBytes, needBytes: amount of bytes in total, in sync and to by synced</li>\n<li>globalFiles, inSyncFiles, needFiles: amount of files in total, in sync and to be synced</li>\n<li>errors, pullErrors: amount of files that failed</li>\n</ul>\n<h2><a id=\"user-content-install-and-configure\" class=\"anchor\" href=\"#install-and-configure\"></a>Install and Configure</h2>\n<ol>\n<li>download syncthing.sh and install it to you ExternalScripts-directory (zabbix_server.conf -> ExternalScripts)</li>\n<li>make it executable: <code>chmod a+x syncthing.sh</code></li>\n<li>carefully read the output of <code>./syncthing.sh --help</code> - I hate to document and I did it just for you! ;-)</li>\n</ol>\n<p>To access Syncthing you need an API-Key. You get it by looking in Syncthing's WebApp at Actions -> Advanced. By default the Syncthing-Server can be defined via commandline (--ip, --port, --apikey -> the template is intended to use this too). But there might be situations in which you don't want to have your API-Key stored on Zabbix. In these cases you may add one or many Syncthing-hosts by:</p>\n<ul>\n<li>opening syncthing.sh</li>\n<li>searching for the line <code>## Adding static syncthing-hosts</code></li>\n<li>adding your host: <code>add_syncthing_host \"INTERNALHOSTNAME\" \"IP\" \"PORT\" \"API Key\"</code> You may address such an host by using the <code>--host=INTERNALHOSTNAME</code>-parameter.</li>\n</ul>\n<p>Now download the template (template_syncthing.xml) and add it to your Zabbix via Configuration -> Templates -> Import. In the template directly go to the Macros-menu (well hidden as sub-tab in the first tab) and either add your Syncthing-Server-details or create a new <code>--host</code>-macro and edit all the items to use it.</p>\n<h2> </h2>", "features": "Zabbix Trapper|Custom Script|Other", "address": "", "city": "", "state": "", "country": "", "postcode": "", "telephone": "", "fax": "", "email": "", "website": "https://github.com/aroesler-privat/zabbix-syncthing/", "price": 0, "link_hits": 2970, "link_votes": null, "link_rating": 0, "link_featured": null, "link_created": "2019-01-01 23:30:18", "link_modified": "2019-01-02 07:55:28", "link_visited": 583, "publish_up": "2019-01-01 23:30:18", "publish_down": "0000-00-00 00:00:00", "metakey": "", "metadesc": "", "1.8": "", "2.0": "", "2.2": "", "2.4": "", "3.0": "", "3.2": "", "3.4": "", "4.0": "", "4.2": "", "4.4": "", "5.0": "", "5.2": "", "tags": "", "author": "", "user_id": 8860, "link_id": 1490, "cat_id": "115,105,393", "internal_notes": "", "lat": 0, "lng": 0, "zoom": ""}