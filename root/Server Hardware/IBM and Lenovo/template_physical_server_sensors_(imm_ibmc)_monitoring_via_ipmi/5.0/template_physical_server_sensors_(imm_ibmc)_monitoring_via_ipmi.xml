<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.2</version>
    <date>2021-01-25T09:43:38Z</date>
    <groups>
        <group>
            <name>Templates/Server hardware</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Chassis by IPMI Pyipmimon</template>
            <name>Chassis by IPMI Pyipmimon</name>
            <groups>
                <group>
                    <name>Templates/Server hardware</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Cable/Interconnect Sensors</name>
                </application>
                <application>
                    <name>Cooling Device Sensors</name>
                </application>
                <application>
                    <name>Current Sensors</name>
                </application>
                <application>
                    <name>Drive Bay Sensors</name>
                </application>
                <application>
                    <name>Fan Sensors</name>
                </application>
                <application>
                    <name>Power Supply Sensors</name>
                </application>
                <application>
                    <name>Sensors</name>
                </application>
                <application>
                    <name>System Events</name>
                </application>
                <application>
                    <name>System Firmware</name>
                </application>
                <application>
                    <name>Temperature Sensors</name>
                </application>
                <application>
                    <name>Voltage Sensors</name>
                </application>
            </applications>
            <discovery_rules>
                <discovery_rule>
                    <name>IPMI Cable Interconnect Sensors</name>
                    <type>TRAP</type>
                    <key>ipmi.sensors.CableInterconnect.discovery</key>
                    <delay>0</delay>
                    <lifetime>3d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>State 1 of Cable/Interconnect sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state1[Cable/Interconnect.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Cable/Interconnect Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>not ({last()}=1 or {last()}=6 or {last()}=100)</expression>
                                    <name>State of Cable/Interconnect sensor {#SENSOR_NAME} is not Present/Normal/Connected</name>
                                    <priority>INFO</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Value of Cable/Interconnect sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>value[Cable/Interconnect.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <applications>
                                <application>
                                    <name>Cable/Interconnect Sensors</name>
                                </application>
                            </applications>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>IPMI Cooling Device Sensors</name>
                    <type>TRAP</type>
                    <key>ipmi.sensors.CoolingDevice.discovery</key>
                    <delay>0</delay>
                    <lifetime>3d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>State 1 of Cooling Device sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state1[Cooling Device.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Cooling Device Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}=4</expression>
                                    <name>State of Cooling Device sensor {#SENSOR_NAME} is Not redundant</name>
                                    <priority>INFO</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Value of Cooling Device sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>value[Cooling Device.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <applications>
                                <application>
                                    <name>Cooling Device Sensors</name>
                                </application>
                            </applications>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>IPMI Current Sensors</name>
                    <type>TRAP</type>
                    <key>ipmi.sensors.Current.discovery</key>
                    <delay>0</delay>
                    <lifetime>3d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>State 1 of Current sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state1[Current.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Current Sensors</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>Value of Current sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>value[Current.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <units>W</units>
                            <applications>
                                <application>
                                    <name>Current Sensors</name>
                                </application>
                            </applications>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>IPMI Sensors</name>
                    <type>TRAP</type>
                    <key>ipmi.sensors.discovery</key>
                    <delay>0</delay>
                    <lifetime>3d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>State 1 of sensor {#SENSOR_TYPE}.{#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state1[{#SENSOR_TYPE}.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{nodata(1d)}=0 and {nodata(1h)}=1</expression>
                                    <name>No data for an hour from {#SENSOR_TYPE}.{#SENSOR_NAME}</name>
                                    <priority>WARNING</priority>
                                    <description>Last value: {ITEM.LASTVALUE1}</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>not ({last()}=0 or {last()}=1 or {last()}=2 or {last()}=3 or {last()}=6 or {last()}=7 or {last()}=9 or {last()}=13 or {last()}=14 or {last()}=20 or {last()}=100)</expression>
                                    <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is not good</name>
                                    <status>DISABLED</status>
                                    <priority>AVERAGE</priority>
                                    <description>Last value: {ITEM.LASTVALUE1}</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>State 2 of sensor {#SENSOR_TYPE}.{#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state2[{#SENSOR_TYPE}.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>State 3 of sensor {#SENSOR_TYPE}.{#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state3[{#SENSOR_TYPE}.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>State 4 of sensor {#SENSOR_TYPE}.{#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state4[{#SENSOR_TYPE}.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>State 5 of sensor {#SENSOR_TYPE}.{#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state5[{#SENSOR_TYPE}.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>Value of sensor {#SENSOR_TYPE}.{#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>value[{#SENSOR_TYPE}.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <applications>
                                <application>
                                    <name>Sensors</name>
                                </application>
                            </applications>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Sensors</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=9 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=9 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=9 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=9 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=9</expression>
                            <name>State of System Firmware {#SENSOR_NAME} is Successful software/firmware change</name>
                            <priority>INFO</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=14 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=14 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=14 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=14 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=14</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Asserted</name>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=27 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=27 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=27 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=27 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=27</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Bus uncorrectable error</name>
                            <priority>HIGH</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].diff()}=1 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].diff()}=1 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].diff()}=1 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].diff()}=1 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].diff()}=1</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is changed</name>
                            <priority>INFO</priority>
                            <description>Last value: {ITEM.LASTVALUE1}.</description>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=22 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=22 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=22 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=22 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=22</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Correctable memory error logging limit reached</name>
                            <priority>WARNING</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=29 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=29 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=29 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=29 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=29</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Device disabled</name>
                            <priority>HIGH</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=18 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=18 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=18 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=18 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=18</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Drive fault</name>
                            <priority>HIGH</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=17 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=17 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=17 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=17 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=17</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Drive in critical array</name>
                            <priority>HIGH</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=10 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=10 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=10 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=10 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=10</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Event log full</name>
                            <priority>WARNING</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=11 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=11 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=11 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=11 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=11</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Event log nearly full</name>
                            <priority>WARNING</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=20 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=20 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=20 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=20 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=20</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Log clear</name>
                            <priority>INFO</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=12 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=12 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=12 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=12 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=12</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is lower critical threshold</name>
                            <priority>HIGH</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=23 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=23 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=23 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=23 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=23</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Memory Logging Limit Reached</name>
                            <priority>WARNING</priority>
                            <description>Last value: {ITEM.LASTVALUE1}</description>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=21 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=21 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=21 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=21 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=21</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is No bootable media</name>
                            <priority>HIGH</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=8 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=8 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=8 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=8 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=8</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Predictive failure deasserted</name>
                            <priority>INFO</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=13 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=13 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=13 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=13 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=13</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Progress</name>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=19 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=19 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=19 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=19 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=19</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Rebuild in progress</name>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=30 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=30 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=30 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=30 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=30</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Scrub failed</name>
                            <priority>HIGH</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=24 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=24 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=24 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=24 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=24</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Slot/connector installed</name>
                            <priority>INFO</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=25 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=25 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=25 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=25 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=25</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Spare</name>
                            <priority>WARNING</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=28 or {Chassis by IPMI Pyipmimon:state2[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=28 or {Chassis by IPMI Pyipmimon:state3[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=28 or {Chassis by IPMI Pyipmimon:state4[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=28 or {Chassis by IPMI Pyipmimon:state5[{#SENSOR_TYPE}.{#SENSOR_NAME}].last()}=28</expression>
                            <name>State of {#SENSOR_TYPE}.{#SENSOR_NAME} is Uncorrectable error</name>
                            <priority>HIGH</priority>
                        </trigger_prototype>
                    </trigger_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>IPMI Drive Bay Sensors</name>
                    <type>TRAP</type>
                    <key>ipmi.sensors.DriveBay.discovery</key>
                    <delay>0</delay>
                    <lifetime>3d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>State 1 of Drive Bay sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state1[Drive Bay.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Drive Bay Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>State 2 of Drive Bay sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state2[Drive Bay.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Drive Bay Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>State 3 of Drive Bay sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state3[Drive Bay.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Drive Bay Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>Value of Drive Bay sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>value[Drive Bay.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <applications>
                                <application>
                                    <name>Drive Bay Sensors</name>
                                </application>
                            </applications>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[Drive Bay.{#SENSOR_NAME}].last()}=18 or {Chassis by IPMI Pyipmimon:state2[Drive Bay.{#SENSOR_NAME}].last()}=18 or {Chassis by IPMI Pyipmimon:state3[Drive Bay.{#SENSOR_NAME}].last()}=18</expression>
                            <name>State of Drive Bay sensor {#SENSOR_NAME} is Drive fault</name>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[Drive Bay.{#SENSOR_NAME}].last()}=17 or {Chassis by IPMI Pyipmimon:state2[Drive Bay.{#SENSOR_NAME}].last()}=17 or {Chassis by IPMI Pyipmimon:state3[Drive Bay.{#SENSOR_NAME}].last()}=17</expression>
                            <name>State of Drive Bay sensor {#SENSOR_NAME} is Drive in critical array</name>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[Drive Bay.{#SENSOR_NAME}].last()}=16 or {Chassis by IPMI Pyipmimon:state2[Drive Bay.{#SENSOR_NAME}].last()}=16 or {Chassis by IPMI Pyipmimon:state3[Drive Bay.{#SENSOR_NAME}].last()}=16</expression>
                            <name>State of Drive Bay sensor {#SENSOR_NAME} is Predictive drive failure</name>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[Drive Bay.{#SENSOR_NAME}].last()}=19 or {Chassis by IPMI Pyipmimon:state2[Drive Bay.{#SENSOR_NAME}].last()}=19 or {Chassis by IPMI Pyipmimon:state3[Drive Bay.{#SENSOR_NAME}].last()}=19</expression>
                            <name>State of Drive Bay sensor {#SENSOR_NAME} is Rebuild in progress</name>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                    </trigger_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>IPMI Fan Sensors</name>
                    <type>TRAP</type>
                    <key>ipmi.sensors.Fan.discovery</key>
                    <delay>0</delay>
                    <filter>
                        <conditions>
                            <condition>
                                <macro>{#SENSOR_TYPE}</macro>
                                <value>Fan</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <lifetime>3d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>State 1 of Fan sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state1[Fan.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Fan Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{diff()}=1</expression>
                                    <name>State of Fan sensor {#SENSOR_NAME} is changed</name>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Value of Fan sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>value[Fan.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <applications>
                                <application>
                                    <name>Fan Sensors</name>
                                </application>
                            </applications>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>IPMI Other Sensors</name>
                    <type>TRAP</type>
                    <key>ipmi.sensors.Other.discovery</key>
                    <delay>0</delay>
                    <lifetime>3d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>Value of Other sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>value.other[{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>IPMI Power Supply Sensors</name>
                    <type>TRAP</type>
                    <key>ipmi.sensors.PowerSupply.discovery</key>
                    <delay>0</delay>
                    <lifetime>3d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>State 1 of Power Supply sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state1[Power Supply.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Power Supply Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>State 2 of Power Supply sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state2[Power Supply.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Power Supply Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>State 3 of Power Supply sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state3[Power Supply.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Power Supply Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>State 4 of Power Supply sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state4[Power Supply.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Power Supply Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>State 5 of Power Supply sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state5[Power Supply.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Power Supply Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>Value of Power Supply sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>value[Power Supply.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <applications>
                                <application>
                                    <name>Power Supply Sensors</name>
                                </application>
                            </applications>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[Power Supply.{#SENSOR_NAME}].last()}=4 or {Chassis by IPMI Pyipmimon:state2[Power Supply.{#SENSOR_NAME}].last()}=4 or {Chassis by IPMI Pyipmimon:state3[Power Supply.{#SENSOR_NAME}].last()}=4 or {Chassis by IPMI Pyipmimon:state4[Power Supply.{#SENSOR_NAME}].last()}=4 or {Chassis by IPMI Pyipmimon:state5[Power Supply.{#SENSOR_NAME}].last()}=4</expression>
                            <name>State of Power Supply sensor {#SENSOR_NAME} is Not redundant</name>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[Power Supply.{#SENSOR_NAME}].last()}=5 or {Chassis by IPMI Pyipmimon:state2[Power Supply.{#SENSOR_NAME}].last()}=5 or {Chassis by IPMI Pyipmimon:state3[Power Supply.{#SENSOR_NAME}].last()}=5 or {Chassis by IPMI Pyipmimon:state4[Power Supply.{#SENSOR_NAME}].last()}=5 or {Chassis by IPMI Pyipmimon:state5[Power Supply.{#SENSOR_NAME}].last()}=5</expression>
                            <name>State of Power Supply sensor {#SENSOR_NAME} is Power input lost</name>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[Power Supply.{#SENSOR_NAME}].last()}=15 or {Chassis by IPMI Pyipmimon:state2[Power Supply.{#SENSOR_NAME}].last()}=15 or {Chassis by IPMI Pyipmimon:state3[Power Supply.{#SENSOR_NAME}].last()}=15 or {Chassis by IPMI Pyipmimon:state4[Power Supply.{#SENSOR_NAME}].last()}=15 or {Chassis by IPMI Pyipmimon:state5[Power Supply.{#SENSOR_NAME}].last()}=15</expression>
                            <name>State of Power Supply sensor {#SENSOR_NAME} is Power off</name>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                    </trigger_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>IPMI System Firmware Sensors</name>
                    <type>TRAP</type>
                    <key>ipmi.sensors.SystemFirmware.discovery</key>
                    <delay>0</delay>
                    <lifetime>3d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>State 1 of System Firmware sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state1[System Firmware.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>System Firmware</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>State 2 of System Firmware sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state2[System Firmware.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>System Firmware</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>State 3 of System Firmware sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state3[System Firmware.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>System Firmware</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>State 4 of System Firmware sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state4[System Firmware.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>System Firmware</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>State 5 of System Firmware sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state5[System Firmware.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>System Firmware</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>Value of System Firmware sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>value[System Firmware.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <applications>
                                <application>
                                    <name>System Firmware</name>
                                </application>
                            </applications>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[System Firmware.{#SENSOR_NAME}].diff()}=1 or {Chassis by IPMI Pyipmimon:state2[System Firmware.{#SENSOR_NAME}].diff()}=1 or {Chassis by IPMI Pyipmimon:state3[System Firmware.{#SENSOR_NAME}].diff()}=1 or {Chassis by IPMI Pyipmimon:state4[System Firmware.{#SENSOR_NAME}].diff()}=1 or {Chassis by IPMI Pyipmimon:state5[System Firmware.{#SENSOR_NAME}].diff()}=1</expression>
                            <name>State of System Firmware {#SENSOR_NAME} is changed</name>
                            <priority>AVERAGE</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[System Firmware.{#SENSOR_NAME}].last()}=13 or {Chassis by IPMI Pyipmimon:state2[System Firmware.{#SENSOR_NAME}].last()}=13 or {Chassis by IPMI Pyipmimon:state3[System Firmware.{#SENSOR_NAME}].last()}=13 or {Chassis by IPMI Pyipmimon:state4[System Firmware.{#SENSOR_NAME}].last()}=13 or {Chassis by IPMI Pyipmimon:state5[System Firmware.{#SENSOR_NAME}].last()}=13</expression>
                            <name>State of System Firmware {#SENSOR_NAME} is Progress</name>
                            <priority>WARNING</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Chassis by IPMI Pyipmimon:state1[System Firmware.{#SENSOR_NAME}].last()}=9 or {Chassis by IPMI Pyipmimon:state2[System Firmware.{#SENSOR_NAME}].last()}=9 or {Chassis by IPMI Pyipmimon:state3[System Firmware.{#SENSOR_NAME}].last()}=9 or {Chassis by IPMI Pyipmimon:state4[System Firmware.{#SENSOR_NAME}].last()}=9 or {Chassis by IPMI Pyipmimon:state5[System Firmware.{#SENSOR_NAME}].last()}=9</expression>
                            <name>State of System Firmware {#SENSOR_NAME} is Successful software/firmware change</name>
                            <priority>WARNING</priority>
                        </trigger_prototype>
                    </trigger_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>IPMI Temperature Sensors</name>
                    <type>TRAP</type>
                    <key>ipmi.sensors.Temperature.discovery</key>
                    <delay>0</delay>
                    <lifetime>3d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>State 1 of Temperature sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state1[Temperature.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Temperature Sensors</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IPMISensorState</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>not ({last()}=2 or {last()}=100)</expression>
                                    <name>State of Temperature {#SENSOR_NAME} is not Ok</name>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Value of Temperature sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>value[Temperature.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <units>degrees Celsius</units>
                            <applications>
                                <application>
                                    <name>Temperature Sensors</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}&gt;80</expression>
                                    <name>Value of sensor {#SENSOR_TYPE}.{#SENSOR_NAME} on {HOSTNAME} exceeded 80</name>
                                    <priority>HIGH</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>IPMI Voltage Sensors</name>
                    <type>TRAP</type>
                    <key>ipmi.sensors.Voltage.discovery</key>
                    <delay>0</delay>
                    <lifetime>3d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>State 1 of Voltage sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>state1[Voltage.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <applications>
                                <application>
                                    <name>Voltage Sensors</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>Value of Voltage sensor {#SENSOR_NAME}</name>
                            <type>TRAP</type>
                            <key>value[Voltage.{#SENSOR_NAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <units>V</units>
                            <applications>
                                <application>
                                    <name>Voltage Sensors</name>
                                </application>
                            </applications>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
            </discovery_rules>
        </template>
    </templates>
    <value_maps>
        <value_map>
            <name>IPMISensorState</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Absent</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Present</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>Ok</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>Redundant</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>Not redundant</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>Power input lost</newvalue>
                </mapping>
                <mapping>
                    <value>6</value>
                    <newvalue>Connected</newvalue>
                </mapping>
                <mapping>
                    <value>7</value>
                    <newvalue>Deasserted</newvalue>
                </mapping>
                <mapping>
                    <value>8</value>
                    <newvalue>Predictive failure deasserted</newvalue>
                </mapping>
                <mapping>
                    <value>9</value>
                    <newvalue>Successful software/firmware change</newvalue>
                </mapping>
                <mapping>
                    <value>10</value>
                    <newvalue>Event log full</newvalue>
                </mapping>
                <mapping>
                    <value>11</value>
                    <newvalue>Event log nearly full</newvalue>
                </mapping>
                <mapping>
                    <value>12</value>
                    <newvalue>lower critical threshold</newvalue>
                </mapping>
                <mapping>
                    <value>13</value>
                    <newvalue>Progress</newvalue>
                </mapping>
                <mapping>
                    <value>14</value>
                    <newvalue>Asserted</newvalue>
                </mapping>
                <mapping>
                    <value>15</value>
                    <newvalue>Power off</newvalue>
                </mapping>
                <mapping>
                    <value>16</value>
                    <newvalue>Predictive drive failure</newvalue>
                </mapping>
                <mapping>
                    <value>17</value>
                    <newvalue>Drive in critical array</newvalue>
                </mapping>
                <mapping>
                    <value>18</value>
                    <newvalue>Drive fault</newvalue>
                </mapping>
                <mapping>
                    <value>19</value>
                    <newvalue>Rebuild in progress</newvalue>
                </mapping>
                <mapping>
                    <value>20</value>
                    <newvalue>Log clear</newvalue>
                </mapping>
                <mapping>
                    <value>21</value>
                    <newvalue>No bootable media</newvalue>
                </mapping>
                <mapping>
                    <value>22</value>
                    <newvalue>Correctable memory error logging limit reached</newvalue>
                </mapping>
                <mapping>
                    <value>23</value>
                    <newvalue>Memory Logging Limit Reached</newvalue>
                </mapping>
                <mapping>
                    <value>24</value>
                    <newvalue>Slot/connector installed</newvalue>
                </mapping>
                <mapping>
                    <value>25</value>
                    <newvalue>Spare</newvalue>
                </mapping>
                <mapping>
                    <value>26</value>
                    <newvalue>Chassis intrusion</newvalue>
                </mapping>
                <mapping>
                    <value>27</value>
                    <newvalue>Bus uncorrectable error</newvalue>
                </mapping>
                <mapping>
                    <value>28</value>
                    <newvalue>Uncorrectable error</newvalue>
                </mapping>
                <mapping>
                    <value>29</value>
                    <newvalue>Device disabled</newvalue>
                </mapping>
                <mapping>
                    <value>30</value>
                    <newvalue>Scrub failed</newvalue>
                </mapping>
                <mapping>
                    <value>31</value>
                    <newvalue>Non-Critical</newvalue>
                </mapping>
                <mapping>
                    <value>100</value>
                    <newvalue>Normal</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
