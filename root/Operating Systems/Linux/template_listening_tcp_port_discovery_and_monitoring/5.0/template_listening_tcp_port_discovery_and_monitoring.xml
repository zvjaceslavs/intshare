<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>5.0</version><date>2021-10-19T09:50:18Z</date><groups><group><name>Templates/Modules</name></group></groups><templates><template><template>TCP port monitoring</template><name>TCP port monitoring</name><groups><group><name>Templates/Modules</name></group></groups><applications><application><name>TCP port</name></application></applications><discovery_rules><discovery_rule><name>Listening TCP port discovery</name><key>system.run[&quot;ss --tcp --listening --numeric&quot;]</key><delay>1d</delay><filter><conditions><condition><macro>{#PORT}</macro><value>{$TCP.PORT.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>A</formulaid></condition><condition><macro>{#PORT}</macro><value>{$TCP.PORT.MATCHES}</value><formulaid>B</formulaid></condition></conditions></filter><description>Install UserParameter for zabbix-agent:&#13;
echo 'UserParameter=ss.tcp.listening,netstat --tcp --listening --numeric-ports' | sudo tee /etc/zabbix/zabbix_agentd.d/ss.tcp.listening.conf&#13;
&#13;
Install UserParameter for zabbix-agent2:&#13;
echo 'UserParameter=ss.tcp.listening,netstat --tcp --listening --numeric-ports' | sudo tee /etc/zabbix/zabbix_agent2.d/ss.tcp.listening.conf&#13;
&#13;
Restart Zabbix agent&#13;
systemctl restart zabbix-agent&#13;
systemctl restart zabbix-agent2&#13;
&#13;
In this section replace Key:&#13;
system.run[&quot;ss --tcp --listening --numeric&quot;]&#13;
with:&#13;
netstat.tcp.listening</description><item_prototypes><item_prototype><name>Port {#PORT} is listening</name><type>ZABBIX_ACTIVE</type><key>net.tcp.listen[{#PORT}]</key><delay>5m</delay><applications><application><name>TCP port</name></application></applications><valuemap><name>Service state</name></valuemap><trigger_prototypes><trigger_prototype><expression>{max(#5)}=0</expression><name>Port {#PORT} is down for some time</name><priority>DISASTER</priority><manual_close>YES</manual_close></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes><preprocessing><step><type>JAVASCRIPT</type><params>var lld = [];
var lines = value.match(/:[0-9]+ /gm).reduce(function(a,b){if(a.indexOf(b) &lt; 0)a.push(b);return a;},[]).join(&quot;\n&quot;).replace(/:/g,&quot;&quot;).replace(/ /g,&quot;&quot;).split(&quot;\n&quot;);
var lines_num = lines.length;
for (i = 0; i &lt; lines_num; i++)
{
  var row = {};
  row[&quot;{#PORT}&quot;] = lines[i]
  lld.push(row);
}
return JSON.stringify(lld);</params></step></preprocessing></discovery_rule></discovery_rules><macros><macro><macro>{$TCP.PORT.MATCHES}</macro><value>.*</value></macro><macro><macro>{$TCP.PORT.NOT_MATCHES}</macro><value>^\s$</value></macro></macros></template></templates><value_maps><value_map><name>Service state</name><mappings><mapping><value>0</value><newvalue>Down</newvalue></mapping><mapping><value>1</value><newvalue>Up</newvalue></mapping></mappings></value_map></value_maps></zabbix_export>
