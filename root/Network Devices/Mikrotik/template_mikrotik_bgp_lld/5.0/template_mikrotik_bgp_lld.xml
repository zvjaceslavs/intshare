<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>5.0</version><date>2021-10-19T06:14:39Z</date><groups><group><name>Templates</name></group></groups><templates><template><template>Mikrotik - BGP LLD</template><name>Mikrotik - BGP LLD</name><groups><group><name>Templates</name></group></groups><applications><application><name>BGP</name></application></applications><discovery_rules><discovery_rule><name>BGP - Peers</name><type>SSH</type><key>ssh.run[,,{$MIKROTIK_SSH_PORT},]</key><delay>3600s</delay><params>:global list [/routing bgp peer find]; :global count 0; :global total [:len $list]; :put &quot;{\&quot;data\&quot;:[&quot;; :foreach i in=$list do={; :set count ($count + 1); :local name [/routing bgp peer get value-name=name number=$i]; :local remoteas [/routing bgp peer get value-name=remote-as number=$i]; :local disabled [/routing bgp peer get value-name=disabled number=$i]; :if ( $count &lt; $total) do={; :put &quot;{\&quot;{#PEERNAME}\&quot;:\&quot;$name\&quot;,\&quot;{#REMOTEAS}\&quot;:\&quot;$remoteas\&quot;,\&quot;{#DISABLED}\&quot;:\&quot;$disabled\&quot;},&quot;; } else={; :put &quot;{\&quot;{#PEERNAME}\&quot;:\&quot;$name\&quot;,\&quot;{#REMOTEAS}\&quot;:\&quot;$remoteas\&quot;,\&quot;{#DISABLED}\&quot;:\&quot;$disabled\&quot;}&quot;; }; }; :put &quot;]}&quot;;</params><username>{$MIKROTIK_SSH_USER}</username><password>{$MIKROTIK_SSH_PASS}</password><filter><conditions><condition><macro>{#DISABLED}</macro><value>false</value><formulaid>A</formulaid></condition></conditions></filter><item_prototypes><item_prototype><name>{#PEERNAME} ({#REMOTEAS}) - Prefix</name><type>SSH</type><key>ssh.run[{#PEERNAME}-prefix,,{$MIKROTIK_SSH_PORT},]</key><delay>60s</delay><params>:put [/routing bgp peer get value-name=prefix &quot;{#PEERNAME}&quot;]]</params><username>{$MIKROTIK_SSH_USER}</username><password>{$MIKROTIK_SSH_PASS}</password><applications><application><name>BGP</name></application></applications></item_prototype><item_prototype><name>{#PEERNAME} ({#REMOTEAS}) - Status</name><type>SSH</type><key>ssh.run[{#PEERNAME}-status,,{$MIKROTIK_SSH_PORT},]</key><delay>60s</delay><trends>0</trends><value_type>TEXT</value_type><params>:put [/routing bgp peer get value-name=state &quot;{#PEERNAME}&quot;]]</params><username>{$MIKROTIK_SSH_USER}</username><password>{$MIKROTIK_SSH_PASS}</password><applications><application><name>BGP</name></application></applications><trigger_prototypes><trigger_prototype><expression>{str(established)}=0</expression><name>Peer {#PEERNAME} not established</name><priority>DISASTER</priority></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes></discovery_rule></discovery_rules><macros><macro><macro>{$MIKROTIK_SSH_PASS}</macro><value>password</value></macro><macro><macro>{$MIKROTIK_SSH_PORT}</macro><value>22</value></macro><macro><macro>{$MIKROTIK_SSH_USER}</macro><value>admin</value></macro></macros></template></templates></zabbix_export>
