<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>4.0</version>
    <date>2019-05-09T21:13:12Z</date>
    <groups>
        <group>
            <name>Templates</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Mikrotik - BGP LLD</template>
            <name>Mikrotik - BGP LLD</name>
            <description/>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>BGP</name>
                </application>
                <application>
                    <name>BGP JSON</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>BGP - Peer JSON</name>
                    <type>13</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>ssh.run[BGP - Peer JSON,,{$MIKROTIK_SSH_PORT},]</key>
                    <delay>{$UPDATEINT}</delay>
                    <history>{$HISTORY}</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params>:global list [/routing bgp peer find]; :global count 0; :global total [:len $list]; :put &quot;{&quot;; :foreach i in=$list do={; :set count ($count + 1); :local name [/routing bgp peer get value-name=name number=$i]; :local prefix [/routing bgp peer get value-name=prefix number=$i];  :local state [/routing bgp peer get value-name=state number=$i];  :local remoteas [/routing bgp peer get value-name=remote-as number=$i]; :local disabled [/routing bgp peer get value-name=disabled number=$i]; :if ( disabled != true) do={ :if ( $count &lt; $total) do={; :put &quot;\&quot;$name\&quot;:{\&quot;REMOTEAS\&quot;:\&quot;$remoteas\&quot;,\&quot;DISABLED\&quot;:\&quot;$disabled\&quot;,\&quot;PREFIX\&quot;:\&quot;$prefix\&quot;,\&quot;STATE\&quot;:\&quot;$state\&quot;},&quot;; } else={; :put &quot;\&quot;$name\&quot;:{\&quot;REMOTEAS\&quot;:\&quot;$remoteas\&quot;,\&quot;DISABLED\&quot;:\&quot;$disabled\&quot;,\&quot;PREFIX\&quot;:\&quot;$prefix\&quot;,\&quot;STATE\&quot;:\&quot;$state\&quot;}&quot;; }; }; }; :put &quot;}&quot;;</params>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username>{$MIKROTIK_SSH_USER}</username>
                    <password>{$MIKROTIK_SSH_PASS}</password>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>BGP JSON</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item/>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>BGP - Peers</name>
                    <type>13</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>ssh.run[,,{$MIKROTIK_SSH_PORT},]</key>
                    <delay>1h</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params>:global list [/routing bgp peer find]; :global count 0; :global total [:len $list]; :put &quot;{\&quot;data\&quot;:[&quot;; :foreach i in=$list do={; :set count ($count + 1); :local name [/routing bgp peer get value-name=name number=$i]; :local remoteas [/routing bgp peer get value-name=remote-as number=$i]; :local disabled [/routing bgp peer get value-name=disabled number=$i]; :if ( $count &lt; $total) do={; :put &quot;{\&quot;{#PEERNAME}\&quot;:\&quot;$name\&quot;,\&quot;{#REMOTEAS}\&quot;:\&quot;$remoteas\&quot;,\&quot;{#DISABLED}\&quot;:\&quot;$disabled\&quot;},&quot;; } else={; :put &quot;{\&quot;{#PEERNAME}\&quot;:\&quot;$name\&quot;,\&quot;{#REMOTEAS}\&quot;:\&quot;$remoteas\&quot;,\&quot;{#DISABLED}\&quot;:\&quot;$disabled\&quot;}&quot;; }; }; :put &quot;]}&quot;;</params>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username>{$MIKROTIK_SSH_USER}</username>
                    <password>{$MIKROTIK_SSH_PASS}</password>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions>
                            <condition>
                                <macro>{#DISABLED}</macro>
                                <value>false</value>
                                <operator>8</operator>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <lifetime>30d</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#PEERNAME} ({#REMOTEAS}) - Prefix</name>
                            <type>18</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>ssh.run[{#PEERNAME}-prefix,,{$MIKROTIK_SSH_PORT},]</key>
                            <delay>0</delay>
                            <history>{$HISTORY}</history>
                            <trends>{$TRENDS}</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units/>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>BGP</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing>
                                <step>
                                    <type>12</type>
                                    <params>$[&quot;{#PEERNAME}&quot;].PREFIX</params>
                                </step>
                            </preprocessing>
                            <jmx_endpoint/>
                            <timeout>3s</timeout>
                            <url/>
                            <query_fields/>
                            <posts/>
                            <status_codes>200</status_codes>
                            <follow_redirects>1</follow_redirects>
                            <post_type>0</post_type>
                            <http_proxy/>
                            <headers/>
                            <retrieve_mode>0</retrieve_mode>
                            <request_method>0</request_method>
                            <output_format>0</output_format>
                            <allow_traps>0</allow_traps>
                            <ssl_cert_file/>
                            <ssl_key_file/>
                            <ssl_key_password/>
                            <verify_peer>0</verify_peer>
                            <verify_host>0</verify_host>
                            <application_prototypes/>
                            <master_item>
                                <key>ssh.run[BGP - Peer JSON,,{$MIKROTIK_SSH_PORT},]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>{#PEERNAME} ({#REMOTEAS}) - Status</name>
                            <type>18</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>ssh.run[{#PEERNAME}-status,,{$MIKROTIK_SSH_PORT},]</key>
                            <delay>0</delay>
                            <history>{$HISTORY}</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>BGP</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing>
                                <step>
                                    <type>12</type>
                                    <params>$[&quot;{#PEERNAME}&quot;].STATE</params>
                                </step>
                            </preprocessing>
                            <jmx_endpoint/>
                            <timeout>3s</timeout>
                            <url/>
                            <query_fields/>
                            <posts/>
                            <status_codes>200</status_codes>
                            <follow_redirects>1</follow_redirects>
                            <post_type>0</post_type>
                            <http_proxy/>
                            <headers/>
                            <retrieve_mode>0</retrieve_mode>
                            <request_method>0</request_method>
                            <output_format>0</output_format>
                            <allow_traps>0</allow_traps>
                            <ssl_cert_file/>
                            <ssl_key_file/>
                            <ssl_key_password/>
                            <verify_peer>0</verify_peer>
                            <verify_host>0</verify_host>
                            <application_prototypes/>
                            <master_item>
                                <key>ssh.run[BGP - Peer JSON,,{$MIKROTIK_SSH_PORT},]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Mikrotik - BGP LLD:ssh.run[{#PEERNAME}-status,,{$MIKROTIK_SSH_PORT},].str(established)}=0</expression>
                            <recovery_mode>0</recovery_mode>
                            <recovery_expression/>
                            <name>Peer {#PEERNAME} not established</name>
                            <correlation_mode>0</correlation_mode>
                            <correlation_tag/>
                            <url/>
                            <status>0</status>
                            <priority>5</priority>
                            <description/>
                            <type>0</type>
                            <manual_close>0</manual_close>
                            <dependencies/>
                            <tags/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                </discovery_rule>
            </discovery_rules>
            <httptests/>
            <macros>
                <macro>
                    <macro>{$MIKROTIK_SSH_PASS}</macro>
                    <value>1111</value>
                </macro>
                <macro>
                    <macro>{$MIKROTIK_SSH_PORT}</macro>
                    <value>22</value>
                </macro>
                <macro>
                    <macro>{$MIKROTIK_SSH_USER}</macro>
                    <value>mikmon</value>
                </macro>
            </macros>
            <templates/>
            <screens/>
        </template>
    </templates>
</zabbix_export>
