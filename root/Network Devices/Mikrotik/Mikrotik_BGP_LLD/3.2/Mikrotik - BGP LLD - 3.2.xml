<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>3.2</version>
    <date>2018-06-13T16:15:33Z</date>
    <groups>
        <group>
            <name>Templates</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>MikroTik - BGP LLD v1.1</template>
            <name>MikroTik - BGP LLD v1.1</name>
            <description/>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>BGP</name>
                </application>
            </applications>
            <items/>
            <discovery_rules>
                <discovery_rule>
                    <name>BGP - Peers v1.1</name>
                    <type>13</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>ssh.run[,,{$MIKROTIK_SSH_PORT},]</key>
                    <delay>3600</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params>:global list [/routing bgp peer find]; :global count 0; :global total [:len $list]; :put &quot;{\&quot;data\&quot;:[&quot;; :foreach i in=$list do={; :set count ($count + 1); :local name [/routing bgp peer get value-name=name number=$i]; :local remoteas [/routing bgp peer get value-name=remote-as number=$i]; :local disabled [/routing bgp peer get value-name=disabled number=$i]; :if ( $count &lt; $total) do={; :put &quot;{\&quot;{#PEERNAME}\&quot;:\&quot;$name\&quot;,\&quot;{#REMOTEAS}\&quot;:\&quot;$remoteas\&quot;,\&quot;{#DISABLED}\&quot;:\&quot;$disabled\&quot;},&quot;; } else={; :put &quot;{\&quot;{#PEERNAME}\&quot;:\&quot;$name\&quot;,\&quot;{#REMOTEAS}\&quot;:\&quot;$remoteas\&quot;,\&quot;{#DISABLED}\&quot;:\&quot;$disabled\&quot;}&quot;; }; }; :put &quot;]}&quot;;</params>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username>{$MIKROTIK_SSH_USER}</username>
                    <password>{$MIKROTIK_SSH_PASS}</password>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions>
                            <condition>
                                <macro>{#DISABLED}</macro>
                                <value>false</value>
                                <operator>8</operator>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <lifetime>1</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#PEERNAME} ({#REMOTEAS}) - Prefix</name>
                            <type>13</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ssh.run[{#PEERNAME}-prefix,,{$MIKROTIK_SSH_PORT},]</key>
                            <delay>60</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params>:put [/routing bgp peer get value-name=prefix &quot;{#PEERNAME}&quot;]]</params>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username>{$MIKROTIK_SSH_USER}</username>
                            <password>{$MIKROTIK_SSH_PASS}</password>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>BGP</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>{#PEERNAME} ({#REMOTEAS}) - Status</name>
                            <type>13</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ssh.run[{#PEERNAME}-status,,{$MIKROTIK_SSH_PORT},]</key>
                            <delay>60</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params>{ :local status [/routing bgp peer get value-name=state &quot;{#PEERNAME}&quot;]; :if ($status = &quot;idle&quot;) do={ :put &quot;0&quot; }; :if ($status = &quot;connect&quot;) do={ :put &quot;1&quot; }; :if ($status = &quot;active&quot;) do={ :put &quot;2&quot; }; :if ($status = &quot;opensent&quot;) do={ :put &quot;3&quot; }; :if ($status = &quot;openconfirm&quot;) do={ :put &quot;4&quot; }; :if ($status = &quot;established&quot;) do={ :put &quot;5&quot; }; }</params>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username>{$MIKROTIK_SSH_USER}</username>
                            <password>{$MIKROTIK_SSH_PASS}</password>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>BGP</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{MikroTik - BGP LLD v1.1:ssh.run[{#PEERNAME}-status,,{$MIKROTIK_SSH_PORT},].last()}&lt;&gt;5</expression>
                            <recovery_mode>0</recovery_mode>
                            <recovery_expression/>
                            <name>Peer {#PEERNAME} not established</name>
                            <correlation_mode>0</correlation_mode>
                            <correlation_tag/>
                            <url/>
                            <status>0</status>
                            <priority>5</priority>
                            <description/>
                            <type>0</type>
                            <manual_close>0</manual_close>
                            <dependencies/>
                            <tags/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
            </discovery_rules>
            <httptests/>
            <macros>
                <macro>
                    <macro>{$MIKROTIK_SSH_PASS}</macro>
                    <value>password</value>
                </macro>
                <macro>
                    <macro>{$MIKROTIK_SSH_PORT}</macro>
                    <value>22</value>
                </macro>
                <macro>
                    <macro>{$MIKROTIK_SSH_USER}</macro>
                    <value>zabbix</value>
                </macro>
            </macros>
            <templates/>
            <screens/>
        </template>
    </templates>
</zabbix_export>
