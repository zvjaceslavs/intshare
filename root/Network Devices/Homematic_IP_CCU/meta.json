{"link_name": "Homematic IP CCU", "type": "Template", "OS": "", "vendor": "Others", "minZabbVer": "4.4.x", "link_desc": "<h2>Installation:</h2>\n<ul>\n<li>Make sure Python 3 is installed on your zabbix server</li>\n<li>Activate the SNMP3 protocol on your CCU</li>\n<li>Set up your CCU as a \"host\" in Zabbix. Enter the host/IP under the snmp field.</li>\n<li>Install the XMLRPC plug-in on your CCU</li>\n<li>Add the templates: EtherLike-MIB SNMP, Generic SNMP, Interfaces SNMP, Linux block devices SNMP, Linux filesystems SNMP</li>\n<li>Zabbix can now observe some basic values</li>\n<li>Clone ccu3values from <a href=\"https://github.com/StowasserH/ccu3values\">https://github.com/StowasserH/ccu3values</a></li>\n<li>Copy the \"ccu3values.py\" file from the cloned repo to \"/usr/lib/zabbix/Externalscripts\"</li>\n<li>Import the template \"zabbix/zbx_ccu3_templates.yaml\" from the cloned repo into Zabbix</li>\n<li>Enter the URL of your ccus xmlapi as a CCU_XMLRPC macro (default: http://ccu3-webui/addons/xmlapi/)</li>\n<li>Add the ccu_values \u200b\u200btemplate to your host.</li>\n</ul>\n<h2>Script:</h2>\n<p>The Python script is called directly by Zabbix with the required parameters. But you can also use it directly from the command prompts.</p>\n<p># python3 ccu3values.py -h <br /> usage: ccu3values.py [-h] [-v] [-c] [-f CACHE_FILE] [-t CACHE_TIME] [-x XMLAPI] [command] [device]<br /> Reads operating data from a CCU with XMLRPC plugin. positional arguments: command command device The device name<br /> optional arguments:<br /> -h, --help show this help message and exit<br /> -v, --verbose increase output verbosity<br /> -c, --cache-use Uses a cache file so that not too many requests are sent to the ccu.<br /> -f CACHE_FILE, --cache-file CACHE_FILE The file used as cache.<br /> -t CACHE_TIME, --cache-time CACHE_TIME The length of time the cache file is valid.<br /> -x XMLAPI, --xmlapi XMLAPI Url to the ccu xmlapi.</p>\n<ul>\n<li><b>CACHE_FILE</b> The file used as cache. Practical tip: On Raspberrys, it is best to put them in a Ramdisk.</li>\n<li><b>command</b> devices; devices.number; actual_temperature; low_bat; operating_voltage; unreach; set_point_temperature; valve_state; window_state; humidity; operating_voltage_status; boost_mode; boost_mode</li>\n<li><b>device</b> one of the values in \"devices\"</li>\n</ul>\n<h2>Example:</h2>\n<ul>\n<li># python3 ccu3values.py \"LOW_BAT\" \"Heizung B\u00fcro\"<br />false</li>\n<li># python3 ccu3values.py <br />7</li>\n<li># python3 ccu3values.py \"LOW_BAT\" \"Heizung B\u00fcro\"<br />false</li>\n<li># python3 ccu3values.py devices <br /> [{\"device_name\":\"Heizung Bad\"},{\"device_name\":\"Heizung B\u00fcro\"},{\"device_name\":\"HM-RCV-50 BidCoS-RF\"},{\"device_name\":\"HmIP-RCV-50 HmIP-RCV-1\"},{\"device_name\":\"Living room\"}]</li>\n</ul>\n<p>This was inspired by the following scripts: <a href=\"network_devices/avm-fritzbox-and-fritzrepeater\">https://share.zabbix.com/network_devices/avm-fritzbox-and-fritzrepeater</a></p>\n<p> </p>\n<p> </p>\n<p> </p>", "features": "Custom Script", "address": "", "city": "", "state": "", "country": "", "postcode": "", "telephone": "", "fax": "", "email": "", "website": "https://github.com/StowasserH/ccu3values", "price": 0, "link_hits": 20206, "link_votes": null, "link_rating": 0, "link_featured": null, "link_created": "2020-11-07 17:25:32", "link_modified": "2020-11-07 21:13:00", "link_visited": 153, "publish_up": "2020-11-07 17:25:32", "publish_down": "0000-00-00 00:00:00", "metakey": "", "metadesc": "", "1.8": "", "2.0": "", "2.2": "", "2.4": "", "3.0": "", "3.2": "", "3.4": "", "4.0": "", "4.2": "", "4.4": "", "5.0": "", "5.2": "", "tags": "", "author": "", "user_id": 12619, "link_id": 2235, "cat_id": "116", "internal_notes": "", "lat": 0, "lng": 0, "zoom": ""}