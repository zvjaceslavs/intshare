<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>5.0</version><date>2021-10-19T09:50:20Z</date><groups><group><name>Templates</name></group></groups><templates><template><template>1wire-temperature-probe</template><name>1wire Temperature Probe</name><description>Automatically finds all 1wire devices and assumes them to be temperature probes.&#13;
Specifically made for DS18B20 sensor probes in combination with Raspberry Pis.&#13;
&#13;
Useful macros:&#13;
You can assign a friendly name for the probes using the following syntax:&#13;
{$PROBE:&quot;1wire-ID&quot;}&#13;
1wire-ID being the devices name, found under /sys/bus/w1/devices/. The set value will represent the friendly name.&#13;
&#13;
You also have the option to assign sensors to three different groups: 0, 1 and 2. This will modify the trigger behaviour for specific sensors.&#13;
0 is using a normal temperature range calculated for server rooms, 1 is using an extended range and 2 is disabling triggers completly. You can see the specific values in the trigger section. The macro syntax for this is similar to the friendly name: {$GROUP:&quot;1wire-ID&quot;}</description><groups><group><name>Templates</name></group></groups><applications><application><name>Temperature Probe</name></application></applications><discovery_rules><discovery_rule><name>1wire devices</name><key>system.run[find /sys/bus/w1/devices/28* -maxdepth 1 -type l -printf '%f\n' 2&gt; /dev/null]</key><delay>15m</delay><item_prototypes><item_prototype><name>Temperature reading of probe &quot;{#DEVICE}&quot; ({$PROBE:&quot;{#DEVICE}&quot;})</name><key>system.run[cat /sys/bus/w1/devices/{#DEVICE}/w1_slave | tail -n +2  | cut -d= -f2-]</key><delay>15s</delay><value_type>FLOAT</value_type><units>Â°C</units><applications><application><name>Temperature Probe</name></application></applications><preprocessing><step><type>MULTIPLIER</type><params>0.001</params></step></preprocessing><trigger_prototypes><trigger_prototype><expression>{nodata(180)}=1</expression><name>No data received (&gt;3m) from probe &quot;{$PROBE:&quot;{#DEVICE}&quot;}&quot;</name></trigger_prototype><trigger_prototype><expression>({avg(180)}&gt;=30 and {avg(180)}&lt;33 and {$GROUP:&quot;{#DEVICE}&quot;}=0) or ({avg(180)}&gt;=35 and {avg(180)}&lt;38 and {$GROUP:&quot;{#DEVICE}&quot;}=1)</expression><name>Temperature critically high on probe &quot;{$PROBE:&quot;{#DEVICE}&quot;}&quot;</name><priority>AVERAGE</priority></trigger_prototype><trigger_prototype><expression>({avg(180)}&gt;=14 and {avg(180)}&lt;17 and {$GROUP:&quot;{#DEVICE}&quot;}=0) or ({avg(180)}&gt;=6 and {avg(180)}&lt;10 and {$GROUP:&quot;{#DEVICE}&quot;}=1)</expression><name>Temperature critically low on probe &quot;{$PROBE:&quot;{#DEVICE}&quot;}&quot;</name><priority>AVERAGE</priority></trigger_prototype><trigger_prototype><expression>({last()}&gt;=33 and {$GROUP:&quot;{#DEVICE}&quot;}=0) or ({last()}&gt;=38 and {$GROUP:&quot;{#DEVICE}&quot;}=1)</expression><name>Temperature disastrously high on probe &quot;{$PROBE:&quot;{#DEVICE}&quot;}&quot;</name><priority>DISASTER</priority></trigger_prototype><trigger_prototype><expression>({last()}&lt;14 and {nodata(35)}=0 and {$GROUP:&quot;{#DEVICE}&quot;}=0) or ({last()}&lt;6 and {nodata(35)}=0 and {$GROUP:&quot;{#DEVICE}&quot;}=1)</expression><name>Temperature disastrously low on probe &quot;{$PROBE:&quot;{#DEVICE}&quot;}&quot;</name><priority>DISASTER</priority><dependencies><dependency><name>No data received (&gt;3m) from probe &quot;{$PROBE:&quot;{#DEVICE}&quot;}&quot;</name><expression>{1wire-temperature-probe:system.run[cat /sys/bus/w1/devices/{#DEVICE}/w1_slave | tail -n +2  | cut -d= -f2-].nodata(180)}=1</expression></dependency></dependencies></trigger_prototype><trigger_prototype><expression>({avg(180)}&gt;=27 and {avg(180)}&lt;30 and {$GROUP:&quot;{#DEVICE}&quot;}=0) or ({avg(180)}&gt;=32 and {avg(180)}&lt;35 and {$GROUP:&quot;{#DEVICE}&quot;}=1)</expression><name>Temperature high on probe &quot;{$PROBE:&quot;{#DEVICE}&quot;}&quot;</name><priority>WARNING</priority></trigger_prototype><trigger_prototype><expression>({avg(180)}&gt;=17 and {avg(180)}&lt;20 and {$GROUP:&quot;{#DEVICE}&quot;}=0) or ({avg(180)}&gt;=10 and {avg(180)}&lt;14 and {$GROUP:&quot;{#DEVICE}&quot;}=1)</expression><name>Temperature low on probe &quot;{$PROBE:&quot;{#DEVICE}&quot;}&quot;</name><priority>WARNING</priority></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes><preprocessing><step><type>JAVASCRIPT</type><params>var lld = [];
var lines = value.split(&quot;\n&quot;);
var lines_num = lines.length;
for (i = 0; i &lt; lines_num; i++)
{
  var row = {};
  row[&quot;{#DEVICE}&quot;] = lines[i]
  lld.push(row);
}
return JSON.stringify(lld);</params></step></preprocessing></discovery_rule></discovery_rules><macros><macro><macro>{$GROUP}</macro><value>0</value><description>Default Group</description></macro></macros></template></templates></zabbix_export>
